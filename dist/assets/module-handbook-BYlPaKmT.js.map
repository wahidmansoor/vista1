{"version":3,"file":"module-handbook-BYlPaKmT.js","sources":["../../src/components/ErrorWrapper.tsx","../../src/modules/handbook/HandbookLanding.tsx","../../src/modules/handbook/HandbookSidebarNew.tsx","../../src/modules/handbook/ContentRenderer.tsx","../../src/modules/handbook/JsonHandbookViewer.tsx","../../src/utils/pathUtils.ts","../../src/hooks/useHandbookData.ts","../../src/utils/errorUtils.ts","../../src/modules/handbook/constants.ts","../../src/modules/handbook/Handbook.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  componentName?: string;\r\n}\r\n\r\nexport default function ErrorWrapper({ children, componentName }: Props) {\r\n  try {\r\n    return <>{children}</>;\r\n  } catch (err) {\r\n    console.error(`Error in ${componentName || \"component\"}:`, err);\r\n    return (\r\n      <div className=\"p-4 bg-red-50 text-red-600 border border-red-200 rounded mt-4\">\r\n        ⚠️ Failed to load {componentName || \"component\"}.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { BookOpen, Atom, Heart } from \"lucide-react\";\r\nimport type { FC, ReactElement } from 'react';\r\n\r\n// Updated sections data for the landing page\r\nconst sections = [\r\n  {\r\n    id: \"medical-oncology\",\r\n    title: \"Medical Oncology\",\r\n    description: \"Clinical oncology chapters, diagnosis, treatment, supportive care, emergencies, and reference tools.\",\r\n    icon: BookOpen,\r\n    isImage: false,\r\n    path: \"/handbook/medical-oncology\"\r\n  },\r\n  {\r\n    id: \"radiation-oncology\",\r\n    title: \"Radiation Oncology\",\r\n    description: \"Detailed protocols for radiation therapy, treatment planning, dosimetry, and management of radiation-related effects.\",\r\n    icon: Atom,\r\n    isImage: false,\r\n    path: \"/handbook/radiation-oncology\"\r\n  },\r\n  {\r\n    id: \"palliative-care\",\r\n    title: \"Palliative Care\",\r\n    description: \"Guidelines for symptom management, pain control, and improving quality of life for patients with advanced cancer.\",\r\n    icon: Heart,\r\n    isImage: false,\r\n    path: \"/handbook/palliative-care\"\r\n  }\r\n];\r\n\r\nconst HandbookLanding: FC = (): ReactElement => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-white dark:from-slate-900 dark:to-slate-800\">\r\n      <div className=\"p-8 max-w-7xl mx-auto\">\r\n        <h1 className=\"text-4xl font-bold mb-2 bg-clip-text text-transparent bg-gradient-to-r from-purple-600 to-blue-500\">\r\n          OncoVista Handbook\r\n        </h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400 mb-12 text-lg max-w-2xl\">\r\n          Select a section to explore detailed oncology guidelines and protocols\r\n        </p>\r\n        \r\n        <div className=\"grid md:grid-cols-3 gap-8\">\r\n          {sections.map((section) => (\r\n            <Link\r\n              key={section.id}\r\n              to={section.path}\r\n              className=\"group block p-6 bg-white dark:bg-slate-800 rounded-xl\r\n                shadow-sm hover:shadow-md transition-all duration-300\r\n                border border-gray-100 dark:border-gray-700\r\n                hover:border-purple-100 dark:hover:border-purple-900/50\r\n                relative overflow-hidden\"\r\n            >\r\n              <div className=\"absolute inset-0 bg-gradient-to-br from-purple-50/50 to-blue-50/50 \r\n                dark:from-purple-900/10 dark:to-blue-900/10\r\n                opacity-0 group-hover:opacity-100 transition-opacity\" \r\n              />\r\n              \r\n              <div className=\"relative\">\r\n                <div className=\"mb-4 p-3 rounded-lg inline-block \r\n                  bg-gradient-to-br from-purple-100 to-blue-100\r\n                  dark:from-purple-900/50 dark:to-blue-900/50\">\r\n                  <section.icon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n                </div>\r\n                \r\n                <h2 className=\"text-xl font-semibold mb-3 text-gray-900 dark:text-white\">\r\n                  {section.title}\r\n                </h2>\r\n                \r\n                <p className=\"text-gray-600 dark:text-gray-400 text-sm leading-relaxed\">\r\n                  {section.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Feature Highlights */}\r\n        <div className=\"mt-16 grid md:grid-cols-3 gap-8\">\r\n          {/* Feature 1 */}\r\n          <div className=\"p-6 bg-white dark:bg-slate-800 rounded-lg border border-gray-100 dark:border-gray-700\">\r\n            <div className=\"p-3 rounded-lg inline-block bg-blue-100 dark:bg-blue-900/30 mb-4\">\r\n              <BookOpen className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\r\n              Comprehensive Content\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Evidence-based guidelines and protocols for oncology practice\r\n            </p>\r\n          </div>\r\n          {/* Feature 2 */}\r\n          <div className=\"p-6 bg-white dark:bg-slate-800 rounded-lg border border-gray-100 dark:border-gray-700\">\r\n            <div className=\"p-3 rounded-lg inline-block bg-purple-100 dark:bg-purple-900/30 mb-4\">\r\n              <Atom className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\r\n            </div>\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\r\n              Treatment Planning\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Detailed guidance for radiation therapy and palliative care\r\n            </p>\r\n          </div>\r\n          {/* Feature 3 */}\r\n          <div className=\"p-6 bg-white dark:bg-slate-800 rounded-lg border border-gray-100 dark:border-gray-700\">\r\n            <div className=\"p-3 rounded-lg inline-block bg-rose-100 dark:bg-rose-900/30 mb-4\">\r\n              <Heart className=\"w-5 h-5 text-rose-600 dark:text-rose-400\" />\r\n            </div>\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\r\n              Patient-Centered Care\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Focus on quality of life and holistic patient management\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandbookLanding;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { ChevronRight, Search, AlertCircle } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface TocEntry {\r\n  title: string;\r\n  path?: string;\r\n  items?: TocEntry[];\r\n}\r\n\r\ninterface SidebarProps {\r\n  section?: string;\r\n  tocData: TocEntry[];\r\n  activeTopicId?: string | null;\r\n  onTopicClick: (section: string, topic: string) => void;\r\n}\r\n\r\ninterface TOCSectionProps {\r\n  entry: TocEntry;\r\n  depth: number;\r\n  isExpanded: boolean;\r\n  isActive: boolean;\r\n  section?: string;\r\n  activeTopicId?: string | null;\r\n  onToggle: () => void;\r\n  onSelect: (path: string) => void;\r\n}\r\n\r\nconst TOCSection: React.FC<TOCSectionProps> = ({\r\n  entry,\r\n  depth,\r\n  isExpanded,\r\n  isActive,\r\n  section,\r\n  activeTopicId,\r\n  onToggle,\r\n  onSelect,\r\n}) => {\r\n  const hasChildren = entry.items && entry.items.length > 0;\r\n  \r\n  // Handle active states for nested items\r\n  const isActiveItem = entry.path && activeTopicId === entry.path;\r\n  const hasActiveChild = hasChildren && entry.items?.some(item => \r\n    item.path === activeTopicId || \r\n    (item.items?.some(subItem => subItem.path === activeTopicId))\r\n  );\r\n  \r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={() => hasChildren ? onToggle() : entry.path && onSelect(entry.path)}\r\n        className={cn(\r\n          \"w-full text-left group flex items-center gap-2 px-4 py-2 rounded-lg transition-all duration-200\",\r\n          \"hover:bg-slate-100 dark:hover:bg-slate-800\",\r\n          (isActiveItem || hasActiveChild) && \r\n            \"bg-gradient-to-r from-purple-100 to-indigo-100 dark:from-purple-900/30 dark:to-indigo-900/30\",\r\n          depth > 0 && \"ml-4\"\r\n        )}\r\n      >\r\n        {hasChildren && (\r\n          <motion.div\r\n            initial={false}\r\n            animate={{ rotate: isExpanded ? 90 : 0 }}\r\n            transition={{ duration: 0.2 }}\r\n            className={cn(\r\n              \"text-slate-400\",\r\n              hasActiveChild && \"text-indigo-500 dark:text-indigo-400\"\r\n            )}\r\n          >\r\n            <ChevronRight size={16} />\r\n          </motion.div>\r\n        )}\r\n        <span\r\n          className={cn(\r\n            \"flex-1 text-sm transition-colors\",\r\n            hasChildren ? \"font-semibold\" : \"font-normal\",\r\n            (isActiveItem || hasActiveChild)\r\n              ? \"text-indigo-700 dark:text-indigo-300\"\r\n              : \"text-slate-700 dark:text-slate-300\",\r\n            \"group-hover:text-indigo-600 dark:group-hover:text-indigo-400\"\r\n          )}\r\n        >\r\n          {entry.title}\r\n        </span>\r\n        \r\n        {/* New or Updated badges */}\r\n        {entry.path?.includes('new') && (\r\n          <span className=\"px-1.5 py-0.5 text-[10px] font-medium bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-400 rounded-full\">\r\n            New\r\n          </span>\r\n        )}\r\n        {entry.path?.includes('updated') && (\r\n          <span className=\"px-1.5 py-0.5 text-[10px] font-medium bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400 rounded-full\">\r\n            Updated\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {hasChildren && (\r\n        <AnimatePresence initial={false}>\r\n          {isExpanded && (\r\n            <motion.div\r\n              initial={{ height: 0, opacity: 0 }}\r\n              animate={{ height: \"auto\", opacity: 1 }}\r\n              exit={{ height: 0, opacity: 0 }}\r\n              transition={{ duration: 0.2 }}\r\n              className=\"overflow-hidden\"\r\n            >\r\n              <div className=\"relative pl-4 before:absolute before:left-2 before:top-0 before:h-full before:w-px before:bg-slate-200 dark:before:bg-slate-700\">\r\n                {entry.items?.map((item, i) => (\r\n                  <TocItem\r\n                    key={`${item.title}-${i}`}\r\n                    entry={item}\r\n                    depth={depth + 1}\r\n                    section={section}\r\n                    activeTopicId={activeTopicId}\r\n                    onSelect={onSelect}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TocItem: React.FC<{\r\n  entry: TocEntry;\r\n  depth: number;\r\n  section?: string;\r\n  activeTopicId?: string | null;\r\n  onSelect: (path: string) => void;\r\n}> = ({\r\n  entry,\r\n  depth,\r\n  section,\r\n  activeTopicId,\r\n  onSelect,\r\n}) => {\r\n  // Auto-expand parent items that contain the active topic\r\n  const [isExpanded, setIsExpanded] = useState(() => {\r\n    if (!activeTopicId) return depth === 0;\r\n    if (entry.items) {\r\n      return entry.items.some(item => \r\n        item.path === activeTopicId ||\r\n        (item.items?.some(subItem => subItem.path === activeTopicId))\r\n      );\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const hasChildren = entry.items && entry.items.length > 0;\r\n  const isActive = entry.path === activeTopicId;\r\n\r\n  return (\r\n    <TOCSection\r\n      entry={entry}\r\n      depth={depth}\r\n      isExpanded={isExpanded}\r\n      isActive={isActive}\r\n      section={section}\r\n      activeTopicId={activeTopicId}\r\n      onToggle={() => setIsExpanded(!isExpanded)}\r\n      onSelect={onSelect}\r\n    />\r\n  );\r\n};\r\n\r\nexport const HandbookSidebarNew: React.FC<SidebarProps> = ({\r\n  section,\r\n  tocData,\r\n  activeTopicId,\r\n  onTopicClick,\r\n}) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleTopicSelect = useCallback((path: string) => {\r\n    if (section && path) {\r\n      onTopicClick(section, path);\r\n    }\r\n  }, [section, onTopicClick]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (!searchQuery) return tocData;\r\n\r\n    const searchLower = searchQuery.toLowerCase();\r\n    \r\n    const filterItems = (items: TocEntry[]): TocEntry[] => {\r\n      return items.reduce<TocEntry[]>((acc, item) => {\r\n        if (item.title.toLowerCase().includes(searchLower)) {\r\n          acc.push(item);\r\n        } else if (item.items) {\r\n          const filteredChildren = filterItems(item.items);\r\n          if (filteredChildren.length > 0) {\r\n            acc.push({ ...item, items: filteredChildren });\r\n          }\r\n        }\r\n        return acc;\r\n      }, []);\r\n    };\r\n\r\n    return filterItems(tocData);\r\n  }, [tocData, searchQuery]);\r\n\r\n  return (\r\n    <div className=\"w-80 flex-shrink-0 border-r border-slate-200 dark:border-slate-800\">\r\n      {/* Search Bar */}\r\n      <div className=\"sticky top-0 z-10 p-4 bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm border-b border-slate-200 dark:border-slate-800\">\r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-slate-400\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search topics...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"w-full pl-9 pr-4 py-2 text-sm rounded-lg border border-slate-200 dark:border-slate-700 \r\n                     bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100\r\n                     placeholder:text-slate-400 dark:placeholder:text-slate-500\r\n                     focus:outline-none focus:ring-2 focus:ring-purple-500 dark:focus:ring-purple-400\r\n                     transition-all duration-200\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* TOC Content */}\r\n      <div className=\"h-[calc(100vh-4rem)] p-4 space-y-2 overflow-y-auto \r\n                    scrollbar-thin scrollbar-track-transparent\r\n                    scrollbar-thumb-slate-200 hover:scrollbar-thumb-slate-300\r\n                    dark:scrollbar-thumb-slate-700 dark:hover:scrollbar-thumb-slate-600\r\n                    scroll-smooth\">\r\n        {filteredData.length === 0 ? (\r\n          <div className=\"flex items-center gap-2 p-4 text-sm text-slate-600 dark:text-slate-400 bg-slate-50 dark:bg-slate-800/50 rounded-lg\">\r\n            <AlertCircle size={16} />\r\n            <span>No matching topics found</span>\r\n          </div>\r\n        ) : (\r\n          filteredData.map((entry, index) => (\r\n            <TocItem\r\n              key={`${entry.title}-${index}`}\r\n              entry={entry}\r\n              depth={0}\r\n              section={section}\r\n              activeTopicId={activeTopicId}\r\n              onSelect={handleTopicSelect}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { HandbookContentBlock } from './types/handbook';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { AlertCircle, AlertTriangle, Info, FileText, Book } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Create simple UI components to avoid external dependencies\r\nconst Separator: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => (\r\n  <div {...props} className={cn(\"h-px bg-gray-200 dark:bg-gray-700\", props.className)} />\r\n);\r\n\r\ninterface ContentRendererProps {\r\n  content: HandbookContentBlock[];\r\n  className?: string;\r\n}\r\n\r\n// TypeScript type definitions for complex content structures\r\ninterface DefinitionItem {\r\n  term: string;\r\n  definition?: string;\r\n  sublist?: any[];\r\n  [key: string]: any;\r\n}\r\n\r\ninterface ListItemWithSublist {\r\n  text: string;\r\n  sublist: any[];\r\n  [key: string]: any;\r\n}\r\n\r\n// UI Components with proper accessibility and dark mode support\r\nconst Table: React.FC<React.HTMLAttributes<HTMLTableElement>> = (props) => (\r\n  <table {...props} className={cn(\"min-w-full border-collapse border border-gray-200 dark:border-gray-700\", props.className)} />\r\n);\r\n\r\nconst TableHeader: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = (props) => (\r\n  <thead {...props} className={cn(\"bg-gray-50 dark:bg-gray-800\", props.className)} />\r\n);\r\n\r\nconst TableRow: React.FC<React.HTMLAttributes<HTMLTableRowElement>> = (props) => (\r\n  <tr {...props} className={cn(\"border-b border-gray-200 dark:border-gray-700\", props.className)} />\r\n);\r\n\r\nconst TableHead: React.FC<React.ThHTMLAttributes<HTMLTableCellElement>> = (props) => (\r\n  <th {...props} className={cn(\"px-4 py-3 text-left font-medium text-gray-700 dark:text-gray-300\", props.className)} />\r\n);\r\n\r\nconst TableBody: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = (props) => (\r\n  <tbody {...props} className={cn(\"divide-y divide-gray-200 dark:divide-gray-700\", props.className)} />\r\n);\r\n\r\nconst TableCell: React.FC<React.TdHTMLAttributes<HTMLTableCellElement>> = (props) => (\r\n  <td {...props} className={cn(\"px-4 py-3 text-gray-800 dark:text-gray-200\", props.className)} />\r\n);\r\n\r\n// Code block with syntax highlighting support\r\nconst CodeBlock: React.FC<{\r\n  language?: string;\r\n  value: string;\r\n  showLineNumbers?: boolean;\r\n}> = ({ language, value, showLineNumbers }) => {\r\n  return (\r\n    <pre className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-md text-sm overflow-auto border border-gray-200 dark:border-gray-700\">\r\n      <code className={cn(\r\n        \"block whitespace-pre\",\r\n        language ? `language-${language}` : ''\r\n      )}>\r\n        {value}\r\n      </code>\r\n    </pre>\r\n  );\r\n};\r\n\r\n// Helper function to safely render HTML content via markdown with GFM support\r\nconst renderMarkdown = (text: string) => {\r\n  if (!text) return null;\r\n  \r\n  return (\r\n    <div className=\"prose-sm max-w-none dark:prose-invert\">\r\n      <ReactMarkdown \r\n        remarkPlugins={[remarkGfm]} \r\n        rehypePlugins={[rehypeRaw]}\r\n      >\r\n        {text}\r\n      </ReactMarkdown>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to generate a stable key for content blocks\r\nconst getKey = (block: HandbookContentBlock, index: number, prefix = 'content') => {\r\n  // Always include the index for reliability\r\n  return block.id ? `${prefix}-${block.id}-${index}` : `${prefix}-${index}`;\r\n};\r\n\r\n// Helper to get content from various possible properties\r\nconst getBlockContent = (block: HandbookContentBlock): string => {\r\n  if (typeof block.content === 'string') return block.content;\r\n  if (typeof block.text === 'string') return block.text;\r\n  return '';\r\n};\r\n\r\n// Recursive function to render nested lists\r\nconst renderNestedList = (\r\n  items: any[], \r\n  parentKey: string, \r\n  ordered: boolean = false, \r\n  level: number = 0\r\n): JSX.Element => {\r\n  const ListTag = ordered ? 'ol' : 'ul';\r\n  const listClasses = cn(\r\n    \"space-y-1 my-1\",\r\n    ordered ? \"list-decimal\" : \"list-disc\",\r\n    level === 0 ? \"pl-6\" : \"pl-4\"\r\n  );\r\n  \r\n  return (\r\n    <ListTag className={listClasses}>\r\n      {items.map((item, index) => {\r\n        const itemKey = `${parentKey}-item-${index}`;\r\n        \r\n        // Case 1: Simple string item\r\n        if (typeof item === 'string') {\r\n          return (\r\n            <li key={itemKey} className=\"pl-1\">\r\n              {renderMarkdown(item)}\r\n            </li>\r\n          );\r\n        }\r\n        \r\n        // Case 2: Object with text and sublist\r\n        if (item && typeof item === 'object') {\r\n          // Check if it's a complex item with a sublist\r\n          if ('text' in item && 'sublist' in item && Array.isArray(item.sublist)) {\r\n            return (\r\n              <li key={itemKey} className=\"pl-1\">\r\n                {renderMarkdown(item.text)}\r\n                {renderNestedList(item.sublist, `${itemKey}-sublist`, false, level + 1)}\r\n              </li>\r\n            );\r\n          }\r\n          \r\n          // Case 3: Simple object item, convert to string\r\n          return (\r\n            <li key={itemKey} className=\"pl-1\">\r\n              {JSON.stringify(item)}\r\n            </li>\r\n          );\r\n        }\r\n        \r\n        // Case 4: Fallback for any other type\r\n        return (\r\n          <li key={itemKey} className=\"pl-1\">\r\n            {String(item)}\r\n          </li>\r\n        );\r\n      })}\r\n    </ListTag>\r\n  );\r\n};\r\n\r\nexport function ContentRenderer({ content, className }: ContentRendererProps) {\r\n  // Helper to check if we should show a section separator\r\n  const shouldShowSeparator = (block: HandbookContentBlock, index: number) => {\r\n    if (index === 0) return false;\r\n    if (block.type !== 'heading') return false;\r\n    // Add separators for H2 or higher\r\n    return block.level && block.level <= 2;\r\n  };\r\n\r\n  if (!content || !Array.isArray(content) || content.length === 0) {\r\n    return (\r\n      <div className=\"p-4 rounded-lg bg-yellow-50 border border-yellow-200 text-yellow-700 dark:bg-yellow-900/20 dark:border-yellow-800 dark:text-yellow-300\">\r\n        <div className=\"flex items-start gap-2\">\r\n          <AlertTriangle className=\"w-5 h-5 flex-shrink-0 mt-0.5\" />\r\n          <p>No content blocks available to render.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"handbook-content space-y-4\", className)}>\r\n      {content.map((block, index) => {\r\n        // Show section separators for headings\r\n        if (shouldShowSeparator(block, index)) {\r\n          return (\r\n            <React.Fragment key={getKey(block, index)}>\r\n              <Separator className=\"my-6\" />\r\n              {renderBlock(block, index)}\r\n            </React.Fragment>\r\n          );\r\n        }\r\n        return renderBlock(block, index);\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  function renderBlock(block: HandbookContentBlock, index: number) {\r\n    const content = getBlockContent(block);\r\n    \r\n    switch (block.type) {\r\n      case 'heading': {\r\n        const level = block.level || 2;\r\n        const validLevel = Math.min(Math.max(level, 1), 6); // Ensure level is between 1-6\r\n        \r\n        const HeadingTag = `h${validLevel}` as keyof JSX.IntrinsicElements;\r\n        const headingClasses = {\r\n          1: \"text-3xl font-bold tracking-tight mb-4\",\r\n          2: \"text-2xl font-semibold tracking-tight mt-8 mb-4\",\r\n          3: \"text-xl font-semibold tracking-tight mt-6 mb-3\",\r\n          4: \"text-lg font-semibold tracking-tight mt-4 mb-2\",\r\n          5: \"text-base font-medium tracking-tight mt-4 mb-2\",\r\n          6: \"text-sm font-medium tracking-tight mt-4 mb-2\"\r\n        }[validLevel] || \"text-lg font-semibold tracking-tight mt-4 mb-2\";\r\n        \r\n        return (\r\n          <HeadingTag \r\n            key={getKey(block, index)} \r\n            id={block.id || `heading-${index}`}\r\n            className={headingClasses}\r\n          >\r\n            {renderMarkdown(content)}\r\n          </HeadingTag>\r\n        );\r\n      }\r\n\r\n      case 'paragraph':\r\n        return (\r\n          <div key={getKey(block, index)} className=\"text-base leading-7 mb-4 text-gray-800 dark:text-gray-200\">\r\n            {renderMarkdown(content)}\r\n          </div>\r\n        );\r\n\r\n      case 'list':\r\n      case 'bullets': {\r\n        if (!block.items || !Array.isArray(block.items) || block.items.length === 0) {\r\n          return null;\r\n        }\r\n        \r\n        return (\r\n          <div key={getKey(block, index)} className=\"my-4\">\r\n            {renderNestedList(block.items, getKey(block, index), false)}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 'numbers': {\r\n        if (!block.items || !Array.isArray(block.items) || block.items.length === 0) {\r\n          return null;\r\n        }\r\n        \r\n        return (\r\n          <div key={getKey(block, index)} className=\"my-4\">\r\n            {renderNestedList(block.items, getKey(block, index), true)}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 'definitions': {\r\n        if (!block.items || !Array.isArray(block.items) || block.items.length === 0) {\r\n          return null;\r\n        }\r\n        \r\n        return (\r\n          <dl key={getKey(block, index)} className=\"space-y-4 text-base leading-7 my-4\">\r\n            {block.items.map((item, itemIndex) => {\r\n              const itemKey = `${getKey(block, index)}-def-${itemIndex}`;\r\n              \r\n              // Case 1: String in format \"term: definition\"\r\n              if (typeof item === 'string') {\r\n                const parts = item.split(/:\\s*(.+)/);\r\n                const term = parts[0];\r\n                const definition = parts.length >= 2 ? parts[1] : '';\r\n                \r\n                return (\r\n                  <div key={itemKey} className=\"mt-2\">\r\n                    <dt className=\"font-semibold text-gray-900 dark:text-gray-100\">{renderMarkdown(term)}</dt>\r\n                    <dd className=\"mt-1 pl-4 text-gray-700 dark:text-gray-300\">{renderMarkdown(definition)}</dd>\r\n                  </div>\r\n                );\r\n              }\r\n              \r\n              // Case 2: Object with term and definition properties\r\n              if (item && typeof item === 'object') {\r\n                const definitionItem = item as Record<string, any>;\r\n                \r\n                if ('term' in definitionItem) {\r\n                  const term = String(definitionItem.term || '');\r\n                  \r\n                  // Case 2.1: Object with term and definition\r\n                  if ('definition' in definitionItem) {\r\n                    const definition = String(definitionItem.definition || '');\r\n                    return (\r\n                      <div key={itemKey} className=\"mt-2\">\r\n                        <dt className=\"font-semibold text-gray-900 dark:text-gray-100\">{renderMarkdown(term)}</dt>\r\n                        <dd className=\"mt-1 pl-4 text-gray-700 dark:text-gray-300\">{renderMarkdown(definition)}</dd>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  \r\n                  // Case 2.2: Object with term and sublist\r\n                  if ('sublist' in definitionItem && Array.isArray(definitionItem.sublist)) {\r\n                    return (\r\n                      <div key={itemKey} className=\"mt-2\">\r\n                        <dt className=\"font-semibold text-gray-900 dark:text-gray-100\">{renderMarkdown(term)}</dt>\r\n                        <dd className=\"mt-1 pl-4\">\r\n                          {renderNestedList(definitionItem.sublist, `${itemKey}-sublist`)}\r\n                        </dd>\r\n                      </div>\r\n                    );\r\n                  }\r\n                }\r\n                \r\n                // Case 3: Object with arbitrary properties (use first key-value pair)\r\n                const entries = Object.entries(definitionItem);\r\n                if (entries.length > 0) {\r\n                  const [term, definition] = entries[0];\r\n                  return (\r\n                    <div key={itemKey} className=\"mt-2\">\r\n                      <dt className=\"font-semibold text-gray-900 dark:text-gray-100\">{renderMarkdown(term)}</dt>\r\n                      <dd className=\"mt-1 pl-4 text-gray-700 dark:text-gray-300\">\r\n                        {typeof definition === 'string' \r\n                          ? renderMarkdown(definition)\r\n                          : Array.isArray(definition)\r\n                            ? renderNestedList(definition, `${itemKey}-list`)\r\n                            : String(definition)\r\n                        }\r\n                      </dd>\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n              \r\n              // Fallback\r\n              return (\r\n                <div key={itemKey} className=\"mt-2 text-red-600 dark:text-red-400\">\r\n                  <dt>Invalid definition item</dt>\r\n                  <dd className=\"pl-4 text-sm\">{JSON.stringify(item)}</dd>\r\n                </div>\r\n              );\r\n            })}\r\n          </dl>\r\n        );\r\n      }\r\n\r\n      case 'table': {\r\n        const hasHeaders = block.headers && Array.isArray(block.headers) && block.headers.length > 0;\r\n        const hasRows = block.rows && Array.isArray(block.rows) && block.rows.length > 0;\r\n        \r\n        if (!hasRows) {\r\n          return (\r\n            <div key={getKey(block, index)} className=\"text-red-500 my-4\">\r\n              Invalid table: missing rows\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        return (\r\n          <div key={getKey(block, index)} className=\"my-6 w-full overflow-auto rounded-md border border-gray-200 dark:border-gray-700\">\r\n            <Table>\r\n              {hasHeaders && (\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    {block.headers!.map((header, i) => (\r\n                      <TableHead key={`${getKey(block, index)}-header-${i}`}>\r\n                        {renderMarkdown(header)}\r\n                      </TableHead>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHeader>\r\n              )}\r\n              <TableBody>\r\n                {block.rows!.map((row, rowIndex) => (\r\n                  <TableRow key={`${getKey(block, index)}-row-${rowIndex}`}>\r\n                    {row.map((cell, cellIndex) => (\r\n                      <TableCell key={`${getKey(block, index)}-cell-${rowIndex}-${cellIndex}`}>\r\n                        {typeof cell === 'string' \r\n                          ? renderMarkdown(cell) \r\n                          : String(cell)\r\n                        }\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      case 'code':\r\n        return (\r\n          <div key={getKey(block, index)} className=\"my-4\">\r\n            <CodeBlock \r\n              language={block.language} \r\n              value={content || ''} \r\n              showLineNumbers={true}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      case 'note':\r\n        return (\r\n          <div\r\n            key={getKey(block, index)}\r\n            className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 my-4\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <Info className=\"w-5 h-5 text-blue-500 dark:text-blue-400 mt-0.5 flex-shrink-0\" />\r\n              <div className=\"text-blue-800 dark:text-blue-200\">\r\n                {renderMarkdown(content)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'warning':\r\n        return (\r\n          <div\r\n            key={getKey(block, index)}\r\n            className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4 my-4\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <AlertTriangle className=\"w-5 h-5 text-yellow-500 dark:text-yellow-400 mt-0.5 flex-shrink-0\" />\r\n              <div className=\"text-yellow-800 dark:text-yellow-200\">\r\n                {renderMarkdown(content)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'clinical_pearl':\r\n        return (\r\n          <motion.div\r\n            key={getKey(block, index)}\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-950/30 dark:to-indigo-950/30 border-l-4 border-primary rounded-lg p-4 my-4 shadow-sm\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <Book className=\"w-5 h-5 text-primary mt-0.5 flex-shrink-0\" />\r\n              <div className=\"text-gray-800 dark:text-gray-200\">\r\n                {renderMarkdown(content)}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        );\r\n\r\n      case 'markdown':\r\n        return (\r\n          <div key={getKey(block, index)} className=\"my-4 prose dark:prose-invert prose-headings:scroll-mt-8 max-w-none\">\r\n            {renderMarkdown(content)}\r\n          </div>\r\n        );\r\n\r\n      case 'document':\r\n        return (\r\n          <div\r\n            key={getKey(block, index)}\r\n            className=\"bg-gray-50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-lg p-4 my-4\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400 mt-0.5 flex-shrink-0\" />\r\n              <div className=\"text-gray-800 dark:text-gray-200\">\r\n                {renderMarkdown(content)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        console.warn(`Unknown block type: ${block.type || 'undefined'}`, block);\r\n        \r\n        // Try to render content if available\r\n        if (content) {\r\n          return (\r\n            <div key={getKey(block, index)} className=\"p-4 border border-amber-200 dark:border-amber-800 rounded-lg bg-amber-50 dark:bg-amber-900/20 my-4\">\r\n              <div className=\"flex items-start gap-2 mb-2\">\r\n                <AlertCircle className=\"w-5 h-5 text-amber-500 flex-shrink-0\" />\r\n                <p className=\"text-amber-700 dark:text-amber-300 text-sm font-medium\">\r\n                  Unknown content type: {block.type || 'undefined'}\r\n                </p>\r\n              </div>\r\n              <div className=\"text-gray-800 dark:text-gray-200 mt-2\">\r\n                {renderMarkdown(content)}\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        // Show object as JSON if no renderable content\r\n        return (\r\n          <div key={getKey(block, index)} className=\"p-4 border border-amber-200 dark:border-amber-800 rounded-lg bg-amber-50 dark:bg-amber-900/20 my-4\">\r\n            <div className=\"flex items-start gap-2 mb-2\">\r\n              <AlertCircle className=\"w-5 h-5 text-amber-500 flex-shrink-0\" />\r\n              <p className=\"text-amber-700 dark:text-amber-300 text-sm font-medium\">\r\n                Unknown content block structure\r\n              </p>\r\n            </div>\r\n            <pre className=\"mt-2 text-xs overflow-auto bg-amber-100 dark:bg-amber-900/40 p-2 rounded text-amber-800 dark:text-amber-200\">\r\n              {JSON.stringify(block, null, 2)}\r\n            </pre>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}","import { useState, useEffect } from 'react';\r\nimport { Loader2, AlertTriangle } from 'lucide-react';\r\nimport { HandbookContentBlock } from './types/handbook';\r\nimport { ContentRenderer } from './ContentRenderer';\r\n\r\ninterface JsonHandbookViewerProps {\r\n  filePath: string;\r\n}\r\n\r\nexport function JsonHandbookViewer({ filePath }: JsonHandbookViewerProps) {\r\n  const [content, setContent] = useState<HandbookContentBlock[] | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [metadata, setMetadata] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const loadContent = async () => {\r\n      console.log('📖 JsonHandbookViewer loading:', filePath);\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setContent(null);\r\n      setMetadata(null);\r\n\r\n      try {\r\n        const response = await fetch(filePath);\r\n        console.log('📄 Content response:', {\r\n          status: response.status,\r\n          ok: response.ok,\r\n          contentType: response.headers.get('content-type')\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to load content: ${response.statusText}`);\r\n        }\r\n\r\n        const json = await response.json();\r\n        \r\n        // Log more detailed information about the content structure\r\n        console.log('📄 Content structure:', {\r\n          hasContent: !!json.content,\r\n          contentIsArray: Array.isArray(json.content),\r\n          contentLength: json.content?.length || 0,\r\n          hasDefaultSections: !!json.sections && Array.isArray(json.sections),\r\n          keys: Object.keys(json)\r\n        });\r\n        \r\n        // Handle different content formats\r\n        let processedContent: HandbookContentBlock[] = [];\r\n        let metaData = {};\r\n        \r\n        // Function to normalize block types and ensure proper structure\r\n        const normalizeContentBlock = (block: any): HandbookContentBlock => {\r\n          // If block is a string, convert to paragraph\r\n          if (typeof block === 'string') {\r\n            return {\r\n              type: 'paragraph',\r\n              text: block,\r\n              id: `block-${Math.random().toString(36).substring(2, 11)}`\r\n            };\r\n          }\r\n          \r\n          // Clone the block to avoid mutating original\r\n          const normalizedBlock = { ...block };\r\n          \r\n          // Ensure all blocks have an ID (if missing)\r\n          if (!normalizedBlock.id) {\r\n            normalizedBlock.id = `block-${Math.random().toString(36).substring(2, 11)}`;\r\n          }\r\n          \r\n          // If normalizedBlock has a \"list\" property, convert it to a proper list block\r\n          if (normalizedBlock.list && Array.isArray(normalizedBlock.list)) {\r\n            normalizedBlock.type = normalizedBlock.type || 'list';\r\n            normalizedBlock.items = normalizedBlock.list;\r\n            delete normalizedBlock.list;\r\n          }\r\n          \r\n          // Map alternative block types to standard ones\r\n          if (normalizedBlock.type === 'bullets') {\r\n            normalizedBlock.type = 'list';\r\n          } else if (normalizedBlock.type === 'numbers') {\r\n            normalizedBlock.type = 'numbers';\r\n          } else if (normalizedBlock.type === 'definitions') {\r\n            normalizedBlock.type = 'definitions';\r\n          }\r\n          \r\n          // Ensure blocks have proper content field\r\n          if (!normalizedBlock.text && !normalizedBlock.content) {\r\n            if (typeof normalizedBlock.value === 'string') {\r\n              normalizedBlock.text = normalizedBlock.value;\r\n            } else if (typeof normalizedBlock.body === 'string') {\r\n              normalizedBlock.text = normalizedBlock.body;\r\n            }\r\n          }\r\n          \r\n          // Ensure items are properly formatted (if present)\r\n          if (normalizedBlock.items && !Array.isArray(normalizedBlock.items)) {\r\n            // Handle case where items might be a string to be split\r\n            if (typeof normalizedBlock.items === 'string') {\r\n              normalizedBlock.items = normalizedBlock.items.split(/\\r?\\n/).filter(Boolean);\r\n            } else {\r\n              console.warn('Invalid items format:', normalizedBlock.items);\r\n              normalizedBlock.items = [];\r\n            }\r\n          }\r\n          \r\n          return normalizedBlock as HandbookContentBlock;\r\n        };\r\n\r\n        // Process nested content which may contain complex structures\r\n        const processNestedContent = (nestedContent: any): HandbookContentBlock[] => {\r\n          if (!nestedContent) return [];\r\n          \r\n          // If it's already an array, normalize each element\r\n          if (Array.isArray(nestedContent)) {\r\n            return nestedContent.map(item => normalizeContentBlock(item));\r\n          }\r\n          \r\n          // If it's a string, convert to a paragraph\r\n          if (typeof nestedContent === 'string') {\r\n            return [normalizeContentBlock({\r\n              type: 'paragraph',\r\n              text: nestedContent\r\n            })];\r\n          }\r\n          \r\n          // If it's an object, try to convert to appropriate block type\r\n          if (typeof nestedContent === 'object' && nestedContent !== null) {\r\n            // Check if it has a list property - common in Hallmarks-of-Cancer.json\r\n            if (nestedContent.list && Array.isArray(nestedContent.list)) {\r\n              return [normalizeContentBlock({\r\n                type: 'list',\r\n                items: nestedContent.list\r\n              })];\r\n            }\r\n            \r\n            // Check for other known structures\r\n            if (nestedContent.type && typeof nestedContent.type === 'string') {\r\n              return [normalizeContentBlock(nestedContent)];\r\n            }\r\n            \r\n            // Handle other potential structures\r\n            const blocks: HandbookContentBlock[] = [];\r\n            for (const key in nestedContent) {\r\n              const value = nestedContent[key];\r\n              // Skip null values\r\n              if (value === null) continue;\r\n              \r\n              if (Array.isArray(value)) {\r\n                // If it's an array property, convert to list\r\n                blocks.push(normalizeContentBlock({\r\n                  type: key === 'numbers' ? 'numbers' : 'list',\r\n                  items: value\r\n                }));\r\n              } else if (typeof value === 'string') {\r\n                // String properties become paragraphs\r\n                blocks.push(normalizeContentBlock({\r\n                  type: 'paragraph',\r\n                  text: value\r\n                }));\r\n              } else if (typeof value === 'object') {\r\n                // Recursively process nested objects\r\n                blocks.push(...processNestedContent(value));\r\n              }\r\n            }\r\n            \r\n            if (blocks.length > 0) {\r\n              return blocks;\r\n            }\r\n          }\r\n          \r\n          // Fallback - convert to JSON and display as code\r\n          return [normalizeContentBlock({\r\n            type: 'code',\r\n            text: JSON.stringify(nestedContent, null, 2)\r\n          })];\r\n        };\r\n        \r\n        // Handle standard format with \"content\" array\r\n        if (json.content && Array.isArray(json.content)) {\r\n          processedContent = json.content.map(normalizeContentBlock);\r\n          const { content, ...rest } = json;\r\n          metaData = rest;\r\n        } \r\n        // Handle format with \"sections\" array\r\n        else if (json.sections && Array.isArray(json.sections)) {\r\n          // Create flat content from sections (to match the Introduction.json format)\r\n          json.sections.forEach((section: any, sectionIndex: number) => {\r\n            // Add section title as heading\r\n            processedContent.push(normalizeContentBlock({\r\n              type: 'heading',\r\n              level: 2,\r\n              text: section.title || 'Untitled Section',\r\n              id: `section-${sectionIndex}`\r\n            }));\r\n            \r\n            // Add section content if available\r\n            if (section.content) {\r\n              // Handle array of content blocks\r\n              if (Array.isArray(section.content)) {\r\n                section.content.forEach((contentItem: any) => {\r\n                  // Process each content item, which might be a simple block or complex nested structure\r\n                  processedContent.push(...processNestedContent(contentItem));\r\n                });\r\n              } \r\n              // Handle string content\r\n              else if (typeof section.content === 'string') {\r\n                processedContent.push(normalizeContentBlock({\r\n                  type: 'paragraph',\r\n                  text: section.content,\r\n                  id: `paragraph-${sectionIndex}`\r\n                }));\r\n              }\r\n              // Handle object with nested content (common in Hallmarks-of-Cancer.json)\r\n              else if (typeof section.content === 'object' && section.content !== null) {\r\n                processedContent.push(...processNestedContent(section.content));\r\n              }\r\n            }\r\n          });\r\n          \r\n          const { sections, ...rest } = json;\r\n          metaData = rest;\r\n        }\r\n        // Handle list-based formats (bullets, definitions, numbers)\r\n        else if (json.bullets || json.numbers || json.definitions) {\r\n          const listTypes = [\r\n            { key: 'bullets', type: 'list' },\r\n            { key: 'numbers', type: 'numbers' },\r\n            { key: 'definitions', type: 'definitions' }\r\n          ];\r\n          \r\n          listTypes.forEach(({ key, type }) => {\r\n            if (json[key]) {\r\n              let items = json[key];\r\n              if (typeof items === 'string') {\r\n                items = items.split(/\\r?\\n/).filter(Boolean);\r\n              }\r\n              \r\n              if (Array.isArray(items) && items.length > 0) {\r\n                processedContent.push(normalizeContentBlock({\r\n                  type,\r\n                  items,\r\n                  id: `${key}-${Math.random().toString(36).substring(2, 9)}`\r\n                }));\r\n              }\r\n            }\r\n          });\r\n          \r\n          // Extract metadata\r\n          const { bullets, numbers, definitions, ...rest } = json;\r\n          metaData = rest;\r\n        }\r\n        // Handle content as direct properties\r\n        else if (Object.keys(json).length > 0) {\r\n          // Try to convert top-level properties into content blocks\r\n          const keys = Object.keys(json).filter(key => \r\n            !['title', 'category', 'section', 'metadata', 'version', 'author'].includes(key)\r\n          );\r\n          \r\n          if (keys.length > 0) {\r\n            // Create a heading for each major property\r\n            keys.forEach(key => {\r\n              const value = json[key];\r\n              \r\n              // Add a section heading\r\n              processedContent.push(normalizeContentBlock({\r\n                type: 'heading',\r\n                level: 2,\r\n                text: key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' '),\r\n                id: `section-${key}`\r\n              }));\r\n              \r\n              // Handle different value types\r\n              if (typeof value === 'string') {\r\n                processedContent.push(normalizeContentBlock({\r\n                  type: 'paragraph',\r\n                  text: value,\r\n                  id: `${key}-text`\r\n                }));\r\n              } else if (Array.isArray(value)) {\r\n                // Determine if this should be bullets or numbers\r\n                const type = key.includes('number') || key.includes('steps') ? 'numbers' : 'list';\r\n                \r\n                processedContent.push(normalizeContentBlock({\r\n                  type,\r\n                  items: value.map(item => typeof item === 'string' ? item : JSON.stringify(item)),\r\n                  id: `${key}-list`\r\n                }));\r\n              } else if (typeof value === 'object' && value !== null) {\r\n                // Check if this is a definitions-like object\r\n                if (Object.keys(value).every(k => typeof value[k] === 'string')) {\r\n                  const items = Object.entries(value).map(([k, v]) => `${k}: ${v}`);\r\n                  processedContent.push(normalizeContentBlock({\r\n                    type: 'definitions',\r\n                    items,\r\n                    id: `${key}-definitions`\r\n                  }));\r\n                } else {\r\n                  // Convert object to markdown string representation\r\n                  const text = Object.entries(value)\r\n                    .map(([k, v]) => `**${k}**: ${v}`)\r\n                    .join('\\n\\n');\r\n                    \r\n                  processedContent.push(normalizeContentBlock({\r\n                    type: 'markdown',\r\n                    text,\r\n                    id: `${key}-obj`\r\n                  }));\r\n                }\r\n              }\r\n            });\r\n            \r\n            // Extract potential metadata\r\n            const metadataProps = ['title', 'category', 'section', 'metadata', 'version', 'author'];\r\n            metaData = Object.fromEntries(\r\n              Object.entries(json).filter(([key]) => metadataProps.includes(key))\r\n            );\r\n          }\r\n        }\r\n        \r\n        // Fallback for completely unexpected formats\r\n        if (processedContent.length === 0) {\r\n          // Convert the entire JSON to a code block as a last resort\r\n          processedContent = [normalizeContentBlock({\r\n            type: 'code',\r\n            text: JSON.stringify(json, null, 2),\r\n            id: 'raw-json'\r\n          })];\r\n        }\r\n        \r\n        console.log('✅ Content processed:', {\r\n          contentBlocks: processedContent.length,\r\n          metadata: metaData\r\n        });\r\n        \r\n        setContent(processedContent);\r\n        setMetadata(metaData);\r\n      } catch (err) {\r\n        console.error('❌ Error loading content:', err);\r\n        setError(err instanceof Error ? err.message : 'Failed to load content');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (filePath) {\r\n      loadContent();\r\n    }\r\n  }, [filePath]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-32\">\r\n        <Loader2 className=\"w-6 h-6 animate-spin text-primary\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 rounded-lg bg-red-50 border border-red-200 text-red-700\">\r\n        <div className=\"flex items-start\">\r\n          <AlertTriangle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\r\n          <div>\r\n            <p className=\"font-medium\">Error Loading Content</p>\r\n            <p className=\"mt-1\">{error}</p>\r\n            <p className=\"mt-4 text-sm\">\r\n              File path: <code className=\"bg-red-100 px-1 py-0.5 rounded\">{filePath}</code>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!content || content.length === 0) {\r\n    return (\r\n      <div className=\"p-4 rounded-lg bg-yellow-50 border border-yellow-200 text-yellow-700\">\r\n        <div className=\"flex items-start\">\r\n          <AlertTriangle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\r\n          <div>\r\n            <p className=\"font-medium\">No Content Available</p>\r\n            <p className=\"mt-1\">The document appears to be empty or incorrectly formatted.</p>\r\n            <p className=\"mt-4 text-sm\">\r\n              File path: <code className=\"bg-yellow-100 px-1 py-0.5 rounded\">{filePath}</code>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <ContentRenderer content={content} />;\r\n}","// src/utils/pathUtils.ts\r\n\r\n/**\r\n * Utility functions for handling handbook file paths and content locations.\r\n */\r\n\r\n/**\r\n * Base handbook directory within the public folder.\r\n */\r\nexport const HANDBOOK_BASE_DIR = '/public';\r\n\r\n/**\r\n * Maps section IDs to their corresponding handbook types\r\n */\r\nexport const HANDBOOK_TYPES = {\r\n  'medical-oncology': 'medical_oncology_handbook',\r\n  'radiation-oncology': 'radiation_handbook',\r\n  'palliative-care': 'palliative_handbook'\r\n} as const;\r\n\r\nexport type HandbookSection = keyof typeof HANDBOOK_TYPES;\r\n\r\n/**\r\n * Converts a section ID to its corresponding folder name.\r\n * E.g., \"medical-oncology\" -> \"medical_oncology_handbook\"\r\n */\r\nexport function sectionToFolderName(section: HandbookSection): string {\r\n  const handlerFolder = HANDBOOK_TYPES[section];\r\n  if (!handlerFolder) {\r\n    throw new Error(`Invalid handbook section: ${section}`);\r\n  }\r\n  return handlerFolder;\r\n}\r\n\r\n/**\r\n * Gets the full path to the Table of Contents (TOC) JSON file for a given section.\r\n * \r\n * @param section - The handbook section ID (e.g., \"medical-oncology\")\r\n * @returns Full path to the TOC file (e.g., \"/public/medical_oncology_handbook/toc.json\")\r\n */\r\nexport function getTocPath(section: HandbookSection): string {\r\n  const folderName = sectionToFolderName(section);\r\n  return `${HANDBOOK_BASE_DIR}/${folderName}/toc.json`;\r\n}\r\n\r\n/**\r\n * Gets the full path to a handbook content file.\r\n * \r\n * @param section - The handbook section ID\r\n * @param topic - Optional topic path. If not provided, returns path to section overview\r\n * @returns Full path to the content file\r\n */\r\nexport function getContentPath(section: HandbookSection, topic?: string | null): string {\r\n  const folderName = sectionToFolderName(section);\r\n  const basePath = `${HANDBOOK_BASE_DIR}/${folderName}`;\r\n\r\n  if (!topic) {\r\n    return `${basePath}/overview.json`;\r\n  }\r\n\r\n  // Clean up the topic path and ensure it has .json extension\r\n  const cleanTopic = topic\r\n    .replace(/^\\/+|\\/+$/g, '') // Remove leading/trailing slashes\r\n    .replace(/\\.json$|\\.md$/, ''); // Remove any existing extensions\r\n  \r\n  // Log the path being generated\r\n  const path = `${basePath}/${cleanTopic}.json`;\r\n  console.log(`📄 getContentPath generated: ${path} from topic: ${topic}`);\r\n  \r\n  return path;\r\n}\r\n\r\n/**\r\n * Validates if a given string is a valid handbook section\r\n */\r\nexport function isValidSection(section: string): section is HandbookSection {\r\n  return section in HANDBOOK_TYPES;\r\n}\r\n\r\nexport function parseHandbookPath(pathname: string): { \r\n  section?: HandbookSection; \r\n  topic?: string;\r\n} {\r\n  // Add debug logging\r\n  console.log('🔍 parseHandbookPath input:', pathname);\r\n\r\n  // Early return if not a handbook path\r\n  if (!pathname.startsWith('/handbook')) {\r\n    console.log('❌ Not a handbook path');\r\n    return {};\r\n  }\r\n\r\n  // Split path and remove empty segments\r\n  const parts = pathname.split('/').filter(Boolean);\r\n  \r\n  // Remove 'handbook' from parts\r\n  parts.shift();\r\n\r\n  if (parts.length === 0) {\r\n    console.log('ℹ️ No section found');\r\n    return {};\r\n  }\r\n\r\n  const section = parts[0] as HandbookSection;\r\n  \r\n  // Join remaining parts to form topic path\r\n  const topic = parts.slice(1).join('/');\r\n\r\n  console.log('✅ Parsed path:', { section, topic });\r\n  \r\n  return {\r\n    section: section || undefined,\r\n    topic: topic || undefined\r\n  };\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { HandbookSection } from '@/modules/handbook/types/handbook';\r\nimport { isValidSection, getContentPath, getTocPath } from '@/utils/pathUtils';\r\n\r\ninterface UseHandbookDataReturn {\r\n  tocData: any[] | null;\r\n  activeFile: string | null;\r\n  isLoading: boolean;\r\n  error: Error | null;\r\n  isValidSection: boolean;\r\n}\r\n\r\nexport function useHandbookData(\r\n  section?: string,\r\n  topic?: string | null\r\n): UseHandbookDataReturn {\r\n  const [tocData, setTocData] = useState<any[] | null>(null);\r\n  const [activeFile, setActiveFile] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      console.log('📚 useHandbookData loading:', { section, topic });\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setTocData(null);\r\n      setActiveFile(null);\r\n\r\n      try {\r\n        if (!section) {\r\n          console.log('ℹ️ No section provided, skipping load');\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        if (!isValidSection(section)) {\r\n          console.warn('⚠️ Invalid section:', section);\r\n          setError(new Error(`Invalid handbook section: ${section}`));\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Get TOC data\r\n        const tocPath = getTocPath(section as HandbookSection);\r\n        console.log('📑 Loading TOC from:', tocPath);\r\n        \r\n        try {\r\n          const tocResponse = await fetch(tocPath);\r\n          if (!tocResponse.ok) {\r\n            throw new Error(`Failed to load TOC: ${tocResponse.statusText}`);\r\n          }\r\n          \r\n          const tocJson = await tocResponse.json();\r\n          \r\n          // Validate TOC structure\r\n          if (!Array.isArray(tocJson)) {\r\n            throw new Error(`Invalid TOC format: Expected an array but got ${typeof tocJson}`);\r\n          }\r\n          \r\n          console.log('📑 TOC loaded successfully with', tocJson.length, 'entries');\r\n          setTocData(tocJson);\r\n        } catch (tocErr) {\r\n          console.error('❌ Error loading TOC:', tocErr);\r\n          throw new Error(`Failed to load handbook navigation: ${tocErr instanceof Error ? tocErr.message : 'Unknown error'}`);\r\n        }\r\n\r\n        // Get content file path\r\n        if (topic) {\r\n          const contentPath = getContentPath(section as HandbookSection, topic);\r\n          console.log('📄 Content path:', contentPath);\r\n          setActiveFile(contentPath);\r\n        } else {\r\n          console.log('ℹ️ No topic provided, skipping content load');\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error('❌ Error in useHandbookData:', err);\r\n        setError(err instanceof Error ? err : new Error('Failed to load handbook data'));\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [section, topic]);\r\n\r\n  return {\r\n    tocData,\r\n    activeFile,\r\n    isLoading,\r\n    error,\r\n    isValidSection: section ? isValidSection(section) : false\r\n  };\r\n}","interface ErrorDetails {\r\n  message: string;\r\n  code?: string;\r\n  pageViewId?: string;\r\n  stack?: string;\r\n}\r\n\r\nexport function parseErrorDetails(e: unknown): ErrorDetails {\r\n  if (e instanceof Error) {\r\n    return {\r\n      message: e.message,\r\n      stack: e.stack,\r\n      code: 'ERROR'\r\n    };\r\n  }\r\n\r\n  if (e && typeof e === 'object') {\r\n    const err = e as Record<string, unknown>;\r\n    return {\r\n      message: typeof err.message === 'string' ? err.message : 'Unknown error',\r\n      code: typeof err.code === 'string' ? err.code : 'UNKNOWN',\r\n      pageViewId: typeof err.pageViewId === 'string' ? err.pageViewId : 'unknown',\r\n      stack: typeof err.stack === 'string' ? err.stack : undefined\r\n    };\r\n  }\r\n\r\n  return {\r\n    message: String(e),\r\n    code: 'UNKNOWN'\r\n  };\r\n}","import { Book, BookOpen } from 'lucide-react';\r\n\r\nexport const sectionsMeta = [\r\n  {\r\n    id: \"medical-oncology\",\r\n    title: \"Medical Oncology\",\r\n    description: \"Clinical oncology chapters, diagnosis, treatment, supportive care, emergencies, and reference tools.\",\r\n    icon: Book\r\n  },\r\n  {\r\n    id: \"radiation-oncology\",\r\n    title: \"Radiation Oncology\",\r\n    description: \"Detailed protocols for radiation therapy, treatment planning, dosimetry, and management of radiation-related effects.\",\r\n    icon: BookOpen\r\n  },\r\n  {\r\n    id: \"palliative-care\",\r\n    title: \"Palliative Care\",\r\n    description: \"Guidelines for symptom management, pain control, and improving quality of life for patients with advanced cancer.\",\r\n    icon: BookOpen\r\n  }\r\n] as const;","import { useCallback, useMemo } from 'react';\r\nimport { Loader2, BookOpen, Book } from 'lucide-react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ErrorWrapper from \"@/components/ErrorWrapper\";\r\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\r\nimport HandbookLanding from \"./HandbookLanding\";\r\nimport { HandbookSidebarNew } from './HandbookSidebarNew';\r\nimport { JsonHandbookViewer } from './JsonHandbookViewer';\r\nimport { useHandbookData } from '@/hooks/useHandbookData';\r\nimport { parseHandbookPath } from '@/utils/pathUtils';\r\nimport { parseErrorDetails } from '@/utils/errorUtils';\r\nimport { sectionsMeta } from './constants';\r\nimport type { FC, ReactElement } from 'react';\r\n\r\nconst Handbook: FC = (): ReactElement => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // Move path parsing into useMemo to prevent unnecessary recalculations\r\n  const { section, topic } = useMemo(() => {\r\n    const result = parseHandbookPath(location.pathname);\r\n    console.log('📖 Parsed handbook path:', { ...result, pathname: location.pathname });\r\n    return result;\r\n  }, [location.pathname]);\r\n\r\n  // Use our custom hook for data fetching and state management\r\n  const { \r\n    tocData,\r\n    activeFile,\r\n    isLoading,\r\n    error,\r\n    isValidSection\r\n  } = useHandbookData(section, topic);\r\n\r\n  // Get current section metadata\r\n  const currentSectionMeta = useMemo(() => {\r\n    return section ? sectionsMeta.find(s => s.id === section) : undefined;\r\n  }, [section]);\r\n\r\n  // Handle topic selection and navigation\r\n  const handleTopicClick = useCallback((selectedSection: string, selectedTopic: string) => {\r\n    try {\r\n      console.log('🔍 Navigation request:', { selectedSection, selectedTopic });\r\n      \r\n      // Clean up topic path\r\n      const cleanTopic = selectedTopic\r\n        .replace(/^\\/+|\\/+$/g, '') // Remove leading/trailing slashes\r\n        .replace(/\\.json$|\\.md$/, ''); // Remove any extensions\r\n      \r\n      // Build the target path, preserving nested structure\r\n      const targetPath = `/handbook/${selectedSection}/${cleanTopic}`;\r\n      \r\n      navigate(targetPath);\r\n    } catch (err) {\r\n      console.error('❌ Navigation error:', err);\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Only show landing page if we're at /handbook root\r\n  if (location.pathname === '/handbook') {\r\n    return <HandbookLanding />;\r\n  }\r\n\r\n  // If we have a section but it's invalid, show an error\r\n  if (section && !isValidSection) {\r\n    return (\r\n      <div className=\"p-8\">\r\n        <div className=\"text-red-500 p-4 rounded-lg bg-red-50 border border-red-200\">\r\n          Invalid handbook section: {section}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-full bg-gradient-to-br from-slate-50 to-white dark:from-slate-900 dark:to-slate-800\">\r\n      {/* Sidebar with loading and error states */}\r\n      {isLoading ? (\r\n        <div className=\"w-80 flex-shrink-0 flex items-center justify-center p-6\">\r\n          <Loader2 className=\"w-8 h-8 animate-spin text-primary\" />\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"w-80 flex-shrink-0 p-6\">\r\n          <div className=\"text-red-500 p-4 rounded-lg bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800\">\r\n            {typeof error === 'string' ? error : parseErrorDetails(error).message}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <HandbookSidebarNew\r\n          section={section}\r\n          tocData={tocData || []}\r\n          activeTopicId={topic ? `${section}/${topic}` : section}\r\n          onTopicClick={handleTopicClick}\r\n        />\r\n      )}\r\n\r\n      {/* Content Area */}\r\n      <div className=\"flex-1 p-8 overflow-y-auto min-h-screen\" id=\"handbook-content-area\">\r\n        <ErrorWrapper>\r\n          {activeFile ? (\r\n            <>\r\n              {/* Header */}\r\n              <div className=\"flex justify-between items-center mb-6 print:hidden\">\r\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  {topic \r\n                    ? topic.split('/').pop()?.replace(/-/g, ' ')?.replace('.json', '') \r\n                    : currentSectionMeta?.title || 'Handbook'}\r\n                </div>\r\n                <button\r\n                  onClick={() => window.print()}\r\n                  className=\"inline-flex items-center px-3 py-1.5 text-sm\r\n                    bg-white dark:bg-slate-800 \r\n                    text-gray-700 dark:text-gray-300\r\n                    border border-gray-200 dark:border-gray-700\r\n                    rounded-lg shadow-sm hover:bg-gray-50 dark:hover:bg-slate-700\r\n                    transition-colors\"\r\n                >\r\n                  <span role=\"img\" aria-label=\"Print\" className=\"mr-1\">🖨️</span> Print\r\n                </button>\r\n              </div>\r\n\r\n              <ErrorBoundary moduleName=\"AI Handbook\">\r\n                <JsonHandbookViewer filePath={activeFile} />\r\n              </ErrorBoundary>\r\n            </>\r\n          ) : (\r\n            // Placeholder when no topic is selected\r\n            <div className=\"text-center py-12\">\r\n              <BookOpen className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h2 className=\"text-xl font-medium text-muted-foreground\">\r\n                Select a topic from the sidebar to view its content.\r\n              </h2>\r\n              <p className=\"text-muted-foreground mt-2\">\r\n                You are currently in the <span className=\"font-semibold\">{currentSectionMeta?.title || 'Handbook'}</span> section.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </ErrorWrapper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Handbook;\r\n"],"names":["ErrorWrapper","children","componentName","_Fragment","err","console","error","_jsxs","className","sections","id","title","description","icon","BookOpen","isImage","path","Atom","Heart","HandbookLanding","_jsx","map","section","Link","to","TOCSection","entry","depth","isExpanded","isActive","activeTopicId","onToggle","onSelect","hasChildren","items","length","isActiveItem","hasActiveChild","some","item","subItem","onClick","cn","motion","div","initial","animate","rotate","transition","duration","ChevronRight","size","includes","AnimatePresence","height","opacity","exit","i","TocItem","setIsExpanded","useState","HandbookSidebarNew","tocData","onTopicClick","searchQuery","setSearchQuery","handleTopicSelect","useCallback","filteredData","useMemo","searchLower","toLowerCase","filterItems","reduce","acc","push","filteredChildren","Search","type","placeholder","value","onChange","e","target","AlertCircle","index","Separator","props","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","CodeBlock","language","showLineNumbers","renderMarkdown","text","ReactMarkdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","getKey","block","prefix","getBlockContent","content","renderNestedList","parentKey","ordered","level","ListTag","listClasses","itemKey","Array","isArray","sublist","JSON","stringify","String","ContentRenderer","shouldShowSeparator","AlertTriangle","React","Fragment","renderBlock","validLevel","Math","min","max","HeadingTag","headingClasses","itemIndex","parts","split","term","definition","definitionItem","entries","Object","hasHeaders","headers","rows","header","row","rowIndex","cell","cellIndex","Info","y","Book","FileText","warn","JsonHandbookViewer","filePath","setContent","setError","isLoading","setIsLoading","metadata","setMetadata","useEffect","log","response","fetch","status","ok","contentType","get","Error","statusText","json","hasContent","contentIsArray","contentLength","hasDefaultSections","keys","processedContent","metaData","normalizeContentBlock","random","toString","substring","normalizedBlock","list","body","filter","Boolean","processNestedContent","nestedContent","blocks","key","rest","forEach","sectionIndex","contentItem","bullets","numbers","definitions","charAt","toUpperCase","slice","replace","every","k","v","join","metadataProps","fromEntries","contentBlocks","message","Loader2","HANDBOOK_BASE_DIR","HANDBOOK_TYPES","sectionToFolderName","handlerFolder","getTocPath","folderName","getContentPath","topic","basePath","cleanTopic","isValidSection","parseHandbookPath","pathname","useHandbookData","setTocData","activeFile","setActiveFile","tocPath","tocResponse","tocJson","tocErr","contentPath","parseErrorDetails","sectionsMeta","Handbook","location","useLocation","navigate","useNavigate","result","currentSectionMeta","find","s","undefined","handleTopicClick","selectedSection","selectedTopic","targetPath","pop","window","print","role","ErrorBoundary","moduleName"],"mappings":"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"}