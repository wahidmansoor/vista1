{"version":3,"mappings":"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","names":["initialState","currentSymptoms","painScore","familyMembers","advanceDirectives","favoriteSymptomIds","lastUpdated","Date","toISOString","PalliativeContext","createContext","undefined","palliativeReducer","state","action","type","payload","map","s","id","filter","m","updates","updatedDirectives","findIndex","d","includes","PalliativeCareProvider","children","dispatch","useReducer","useEffect","savedState","localStorage","getItem","parsed","JSON","parse","error","setItem","stringify","addSymptom","symptom","updateSymptom","removeSymptom","setPainScore","score","addFamilyMember","member","updateFamilyMember","removeFamilyMember","updateAdvanceDirective","directive","removeAdvanceDirective","toggleFavorite","symptomId","_jsx","Provider","value","usePalliativeCare","context","useContext","Error","themes","usePalliativeTheme","defaultTheme","theme","setTheme","useState","colors","setColors","isDark","mediaQuery","handleChange","current","ThemeContext","PalliativeThemeProvider","themeContext","style","colorScheme","usePalliativeThemeContext","STORAGE_KEY","usePalliativeNav","defaultTab","activeTab","setActiveTab","isTransitioning","setIsTransitioning","newTab","useKeyboardNav","onNext","onPrevious","onSave","onCancel","enabled","handleKeyPress","useCallback","event","_a","_b","key","ctrlKey","metaKey","sizes","sm","md","lg","LoadingSpinner","size","className","Loader2","cn","alertVariants","cva","variants","variant","default","destructive","defaultVariants","Alert","React","forwardRef","props","ref","role","displayName","AlertTitle","AlertDescription","ErrorMessage","title","message","_jsxs","AlertTriangle","shortcuts","description","KeyboardShortcutsDialog","Dialog","DialogTrigger","asChild","Button","Keyboard","DialogContent","DialogHeader","DialogTitle","SymptomControl","lazy","__vitePreload","SymptomControl$1","PainManagement","PainManagement$1","FamilySupport","FamilySupport$1","AdvanceDirectives","AdvanceDirectives$1","PsychosocialCare","PsychosocialCare$1","tabs","label","icon","Brain","component","Heart","Users","FileText","ThemeToggle","toggleTheme","Icon","light","Sun","dark","Moon","system","Monitor","onClick","PalliativeModuleContent","handleTabChange","currentTabIndex","tab","handleNext","length","handlePrevious","Tabs","onValueChange","TabsList","TabsTrigger","disabled","Component","TabsContent","forceMount","ErrorBoundary","moduleName","fallback","Suspense","PalliativeModule","Palliative","useSymptomData","filters","data","setData","loading","setLoading","setError","query","supabase","Input","groupBy","arr","reduce","acc","item","group","push","search","setSearch","trim","activeData","Array","isArray","status","grouped","useMemo","symptom_name","symptomNames","Object","keys","log","placeholder","onChange","e","target","clsx","defaultValue","name","Card","CardHeader","CardTitle","severity_level","CardContent","dangerouslySetInnerHTML","__html","marked","management","is_red_flag","preferred_route","route_note","evidence_grade","Accordion","AccordionPrimitive","AccordionItem","AccordionTrigger","ChevronDown","AccordionContent","Slider","SliderPrimitive","labelVariants","Label","LabelPrimitive","RadioGroup","RadioGroupPrimitive","RadioGroupItem","Circle","painCardsData","assessment","severity","Activity","content","tools","handbookSectionId","mild","Pill","drugInfo","recommendations","nonPharm","redFlags","suggestions","moderate","severe","getSeverityClasses","isAssessmentCard","card","initialPainCharacteristics","location","duration","pattern","aggravators","relievers","characteristics","setCharacteristics","cardIds","values","openItems","setOpenItems","selectedScore","setSelectedScore","highlightedCardId","setHighlightedCardId","handleExpandAll","handleCollapseAll","toggleAll","getSeverityFromScore","handleScoreChange","parseInt","isNaN","handleResetScore","targetCardId","prevOpenItems","handlePainTypeChange","prev","handlePainPatternChange","handlePainDurationChange","getPainSeverityColor","handleSliderChange","Disclosure","open","_Fragment","Panel","htmlFor","i","ChevronUp","isHighlighted","href","stopPropagation","BookOpen","point","index","tool","idx","rec","tip","AlertCircle","flag","suggestion","Stethoscope","Clock","PieChart","max","step","supportNeeds","showAddForm","setShowAddForm","formData","setFormData","relationship","isMainCaregiver","contactInfo","handleInputChange","field","handleSubmit","preventDefault","newMember","crypto","randomUUID","needsSupport","fill","updateNeedStatus","memberId","needIndex","checked","find","updatedNeeds","onOpenChange","UserPlus","onSubmit","required","Checkbox","onCheckedChange","need","some","directiveTypes","statusColors","completed","pending","notStarted","statusIcons","CheckCircle","XCircle","newDirective","setNewDirective","details","documents","handleDirectiveSubmit","dateCompleted","exportToPDF","exportData","patientDirectives","exportDate","facilityInfo","blob","Blob","url","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","getStatusIcon","Download","replace","Textarea","FilePlus","toLocaleDateString","doc","generateId","prefix","sortByDate","items","direction","b","dateA","dateB","usePsychosocialData","assessments","setAssessments","stored","notes","newAssessment","formatDate","date","parsedDate","isValid","format","AssessmentTrends","chartData","typeAssessments","sortedAssessments","today","from","_","subDays","dateStr","assessmentTitle","distress","anxiety","depression","social","getIcon","HeartHandshake","latestScore","slice","averageScore","scores","toFixed","ResponsiveContainer","width","height","AreaChart","margin","top","right","bottom","left","Area","dataKey","stroke","strokeWidth","dot","cx","cy","r","XAxis","tickFormatter","fontSize","tickMargin","YAxis","domain","ticks","Tooltip","contentStyle","background","border","borderRadius","labelFormatter","formatter","assessmentTypes","NewAssessmentDialog","setOpen","setType","setScore","setNotes","Plus","addAssessment","handleNewAssessment","assessmentType","t"],"ignoreList":[],"sources":["../../src/modules/palliative/context/PalliativeContext.tsx","../../src/modules/palliative/hooks/usePalliativeTheme.ts","../../src/modules/palliative/context/ThemeProvider.tsx","../../src/modules/palliative/hooks/usePalliativeNav.ts","../../src/modules/palliative/hooks/useKeyboardNav.ts","../../src/modules/palliative/components/LoadingSpinner.tsx","../../src/components/ui/alert.tsx","../../src/modules/palliative/components/ErrorMessage.tsx","../../src/modules/palliative/components/KeyboardShortcutsDialog.tsx","../../src/modules/palliative/PalliativeModule.tsx","../../src/modules/palliative/Palliative.tsx","../../src/modules/palliative/hooks/useSymptomData.ts","../../src/components/ui/input.tsx","../../src/modules/palliative/sections/symptom_control/SymptomControl.tsx","../../src/components/ui/accordion.tsx","../../src/components/ui/slider.tsx","../../src/components/ui/label.tsx","../../src/components/ui/radio-group.tsx","../../src/modules/palliative/sections/pain_management/PainManagement.tsx","../../src/modules/palliative/sections/end_of_life/FamilySupport.tsx","../../src/modules/palliative/sections/end_of_life/AdvanceDirectives.tsx","../../src/modules/palliative/utils/palliativeUtils.ts","../../src/modules/palliative/sections/psychosocial_support/hooks/usePsychosocialData.ts","../../src/utils/formatDate.ts","../../src/modules/palliative/sections/psychosocial_support/components/AssessmentTrends.tsx","../../src/modules/palliative/sections/psychosocial_support/PsychosocialCare.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\n// Types\r\nexport interface Symptom {\r\n  id: string;\r\n  name: string;\r\n  severity: 'mild' | 'moderate' | 'severe';\r\n  description: string;\r\n  interventions: string[];\r\n  onset: string;\r\n  notes: string;\r\n  assessmentPoints: string[];\r\n  redFlags: string[];\r\n  isFavorite?: boolean;\r\n  suggestedInterventions: {\r\n    nonPharmacological: string[];\r\n    pharmacological: string[];\r\n  };\r\n}\r\n\r\nexport interface FamilyMember {\r\n  id: string;\r\n  name: string;\r\n  relationship: string;\r\n  isMainCaregiver: boolean;\r\n  contactInfo: string;\r\n  needsSupport: boolean[];\r\n}\r\n\r\nexport interface AdvanceDirective {\r\n  id: string;\r\n  type: 'DNR' | 'LivingWill' | 'PowerOfAttorney' | 'Other';\r\n  status: 'completed' | 'pending' | 'notStarted';\r\n  details: string;\r\n  documents: string[];\r\n  dateCompleted?: string;\r\n}\r\n\r\ninterface PalliativeState {\r\n  currentSymptoms: Symptom[];\r\n  painScore: number;\r\n  familyMembers: FamilyMember[];\r\n  advanceDirectives: AdvanceDirective[];\r\n  favoriteSymptomIds: string[];\r\n  lastUpdated: string;\r\n}\r\n\r\n// Actions\r\ntype PalliativeAction =\r\n  | { type: 'ADD_SYMPTOM'; payload: Symptom }\r\n  | { type: 'UPDATE_SYMPTOM'; payload: Symptom }\r\n  | { type: 'REMOVE_SYMPTOM'; payload: string }\r\n  | { type: 'SET_PAIN_SCORE'; payload: number }\r\n  | { type: 'ADD_FAMILY_MEMBER'; payload: FamilyMember }\r\n  | { type: 'UPDATE_FAMILY_MEMBER'; payload: { id: string; updates: Partial<FamilyMember> } }\r\n  | { type: 'REMOVE_FAMILY_MEMBER'; payload: string }\r\n  | { type: 'UPDATE_ADVANCE_DIRECTIVE'; payload: AdvanceDirective }\r\n  | { type: 'REMOVE_ADVANCE_DIRECTIVE'; payload: string }\r\n  | { type: 'LOAD_STATE'; payload: PalliativeState }\r\n  | { type: 'TOGGLE_FAVORITE'; payload: string };\r\n\r\nconst initialState: PalliativeState = {\r\n  currentSymptoms: [],\r\n  painScore: 0,\r\n  familyMembers: [],\r\n  advanceDirectives: [],\r\n  favoriteSymptomIds: [],\r\n  lastUpdated: new Date().toISOString()\r\n};\r\n\r\n// Context\r\nconst PalliativeContext = createContext<{\r\n  state: PalliativeState;\r\n  addSymptom: (symptom: Symptom) => void;\r\n  updateSymptom: (symptom: Symptom) => void;\r\n  removeSymptom: (id: string) => void;\r\n  setPainScore: (score: number) => void;\r\n  addFamilyMember: (member: FamilyMember) => void;\r\n  updateFamilyMember: (id: string, updates: Partial<FamilyMember>) => void;\r\n  removeFamilyMember: (id: string) => void;\r\n  updateAdvanceDirective: (directive: AdvanceDirective) => void;\r\n  removeAdvanceDirective: (id: string) => void;\r\n  toggleFavorite: (symptomId: string) => void;\r\n} | undefined>(undefined);\r\n\r\n// Reducer\r\nfunction palliativeReducer(state: PalliativeState, action: PalliativeAction): PalliativeState {\r\n  switch (action.type) {\r\n    case 'ADD_SYMPTOM':\r\n      return {\r\n        ...state,\r\n        currentSymptoms: [...state.currentSymptoms, action.payload],\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'UPDATE_SYMPTOM':\r\n      return {\r\n        ...state,\r\n        currentSymptoms: state.currentSymptoms.map(s => \r\n          s.id === action.payload.id ? action.payload : s\r\n        ),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'REMOVE_SYMPTOM':\r\n      return {\r\n        ...state,\r\n        currentSymptoms: state.currentSymptoms.filter(s => s.id !== action.payload),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'SET_PAIN_SCORE':\r\n      return {\r\n        ...state,\r\n        painScore: action.payload,\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'ADD_FAMILY_MEMBER':\r\n      return {\r\n        ...state,\r\n        familyMembers: [...state.familyMembers, action.payload],\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'UPDATE_FAMILY_MEMBER':\r\n      return {\r\n        ...state,\r\n        familyMembers: state.familyMembers.map(m =>\r\n          m.id === action.payload.id ? { ...m, ...action.payload.updates } : m\r\n        ),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'REMOVE_FAMILY_MEMBER':\r\n      return {\r\n        ...state,\r\n        familyMembers: state.familyMembers.filter(m => m.id !== action.payload),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'UPDATE_ADVANCE_DIRECTIVE':\r\n      const existingIndex = state.advanceDirectives.findIndex(d => d.id === action.payload.id);\r\n      const updatedDirectives = existingIndex >= 0\r\n        ? state.advanceDirectives.map(d => d.id === action.payload.id ? action.payload : d)\r\n        : [...state.advanceDirectives, action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        advanceDirectives: updatedDirectives,\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'REMOVE_ADVANCE_DIRECTIVE':\r\n      return {\r\n        ...state,\r\n        advanceDirectives: state.advanceDirectives.filter(d => d.id !== action.payload),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'TOGGLE_FAVORITE':\r\n      return {\r\n        ...state,\r\n        favoriteSymptomIds: state.favoriteSymptomIds.includes(action.payload)\r\n          ? state.favoriteSymptomIds.filter(id => id !== action.payload)\r\n          : [...state.favoriteSymptomIds, action.payload],\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n\r\n    case 'LOAD_STATE':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Provider Component\r\nexport function PalliativeCareProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = useReducer(palliativeReducer, initialState);\r\n\r\n  // Load state from localStorage on mount\r\n  useEffect(() => {\r\n    const savedState = localStorage.getItem('palliativeCareState');\r\n    if (savedState) {\r\n      try {\r\n        const parsed = JSON.parse(savedState);\r\n        dispatch({ type: 'LOAD_STATE', payload: parsed });\r\n      } catch (error) {\r\n        console.error('Error loading palliative care state:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save state to localStorage on updates\r\n  useEffect(() => {\r\n    localStorage.setItem('palliativeCareState', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  const addSymptom = (symptom: Symptom) => {\r\n    dispatch({ type: 'ADD_SYMPTOM', payload: symptom });\r\n  };\r\n\r\n  const updateSymptom = (symptom: Symptom) => {\r\n    dispatch({ type: 'UPDATE_SYMPTOM', payload: symptom });\r\n  };\r\n\r\n  const removeSymptom = (id: string) => {\r\n    dispatch({ type: 'REMOVE_SYMPTOM', payload: id });\r\n  };\r\n\r\n  const setPainScore = (score: number) => {\r\n    dispatch({ type: 'SET_PAIN_SCORE', payload: score });\r\n  };\r\n\r\n  const addFamilyMember = (member: FamilyMember) => {\r\n    dispatch({ type: 'ADD_FAMILY_MEMBER', payload: member });\r\n  };\r\n\r\n  const updateFamilyMember = (id: string, updates: Partial<FamilyMember>) => {\r\n    dispatch({ type: 'UPDATE_FAMILY_MEMBER', payload: { id, updates } });\r\n  };\r\n\r\n  const removeFamilyMember = (id: string) => {\r\n    dispatch({ type: 'REMOVE_FAMILY_MEMBER', payload: id });\r\n  };\r\n\r\n  const updateAdvanceDirective = (directive: AdvanceDirective) => {\r\n    dispatch({ type: 'UPDATE_ADVANCE_DIRECTIVE', payload: directive });\r\n  };\r\n\r\n  const removeAdvanceDirective = (id: string) => {\r\n    dispatch({ type: 'REMOVE_ADVANCE_DIRECTIVE', payload: id });\r\n  };\r\n\r\n  const toggleFavorite = (symptomId: string) => {\r\n    dispatch({ type: 'TOGGLE_FAVORITE', payload: symptomId });\r\n  };\r\n\r\n  return (\r\n    <PalliativeContext.Provider value={{\r\n      state,\r\n      addSymptom,\r\n      updateSymptom,\r\n      removeSymptom,\r\n      setPainScore,\r\n      addFamilyMember,\r\n      updateFamilyMember,\r\n      removeFamilyMember,\r\n      updateAdvanceDirective,\r\n      removeAdvanceDirective,\r\n      toggleFavorite\r\n    }}>\r\n      {children}\r\n    </PalliativeContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook for using the context\r\nexport function usePalliativeCare() {\r\n  const context = useContext(PalliativeContext);\r\n  if (context === undefined) {\r\n    throw new Error('usePalliativeCare must be used within a PalliativeCareProvider');\r\n  }\r\n  return context;\r\n}","import { useState, useEffect } from 'react';\r\n\r\ntype Theme = 'light' | 'dark' | 'system';\r\n\r\ninterface ThemeColors {\r\n  primary: string;\r\n  secondary: string;\r\n  accent: string;\r\n  background: string;\r\n  text: string;\r\n  error: string;\r\n  warning: string;\r\n  success: string;\r\n}\r\n\r\nconst themes: Record<Exclude<Theme, 'system'>, ThemeColors> = {\r\n  light: {\r\n    primary: '#4f46e5',\r\n    secondary: '#6b7280',\r\n    accent: '#8b5cf6',\r\n    background: '#ffffff',\r\n    text: '#111827',\r\n    error: '#ef4444',\r\n    warning: '#f59e0b',\r\n    success: '#10b981'\r\n  },\r\n  dark: {\r\n    primary: '#818cf8',\r\n    secondary: '#9ca3af',\r\n    accent: '#a78bfa',\r\n    background: '#1f2937',\r\n    text: '#f9fafb',\r\n    error: '#f87171',\r\n    warning: '#fbbf24',\r\n    success: '#34d399'\r\n  }\r\n};\r\n\r\nexport const usePalliativeTheme = (defaultTheme: Theme = 'system') => {\r\n  const [theme, setTheme] = useState<Theme>(() => {\r\n    const saved = localStorage.getItem('palliative_theme');\r\n    return (saved as Theme) || defaultTheme;\r\n  });\r\n\r\n  const [colors, setColors] = useState<ThemeColors>(() => {\r\n    if (theme === 'system') {\r\n      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      return themes[isDark ? 'dark' : 'light'];\r\n    }\r\n    return themes[theme];\r\n  });\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    \r\n    const handleChange = () => {\r\n      if (theme === 'system') {\r\n        setColors(themes[mediaQuery.matches ? 'dark' : 'light']);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('palliative_theme', theme);\r\n    \r\n    if (theme === 'system') {\r\n      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setColors(themes[isDark ? 'dark' : 'light']);\r\n    } else {\r\n      setColors(themes[theme]);\r\n    }\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(current => {\r\n      switch (current) {\r\n        case 'light': return 'dark';\r\n        case 'dark': return 'system';\r\n        case 'system': return 'light';\r\n      }\r\n    });\r\n  };\r\n\r\n  return {\r\n    theme,\r\n    colors,\r\n    setTheme,\r\n    toggleTheme\r\n  };\r\n};","import React, { createContext, useContext } from 'react';\r\nimport { usePalliativeTheme } from '../hooks/usePalliativeTheme';\r\n\r\ntype Theme = 'light' | 'dark' | 'system';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  colors: {\r\n    primary: string;\r\n    secondary: string;\r\n    accent: string;\r\n    background: string;\r\n    text: string;\r\n    error: string;\r\n    warning: string;\r\n    success: string;\r\n  };\r\n  setTheme: (theme: Theme) => void;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const PalliativeThemeProvider: React.FC<{\r\n  children: React.ReactNode;\r\n  defaultTheme?: Theme;\r\n}> = ({ children, defaultTheme = 'system' }) => {\r\n  const themeContext = usePalliativeTheme(defaultTheme);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={themeContext}>\r\n      <div style={{\r\n        colorScheme: themeContext.theme === 'system' \r\n          ? 'light dark' \r\n          : themeContext.theme\r\n      }}>\r\n        {children}\r\n      </div>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePalliativeThemeContext = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('usePalliativeThemeContext must be used within a PalliativeThemeProvider');\r\n  }\r\n  return context;\r\n};","import { useState, useEffect } from 'react';\r\n\r\nconst STORAGE_KEY = 'palliative_active_tab';\r\n\r\nexport const usePalliativeNav = (defaultTab: string) => {\r\n  const [activeTab, setActiveTab] = useState(() => {\r\n    const saved = localStorage.getItem(STORAGE_KEY);\r\n    return saved || defaultTab;\r\n  });\r\n\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, activeTab);\r\n  }, [activeTab]);\r\n\r\n  const handleTabChange = (newTab: string) => {\r\n    setIsTransitioning(true);\r\n    setActiveTab(newTab);\r\n    \r\n    // Reset transition state after animation completes\r\n    setTimeout(() => {\r\n      setIsTransitioning(false);\r\n    }, 300);\r\n  };\r\n\r\n  const resetNavigation = () => {\r\n    setActiveTab(defaultTab);\r\n    localStorage.removeItem(STORAGE_KEY);\r\n  };\r\n\r\n  return {\r\n    activeTab,\r\n    isTransitioning,\r\n    handleTabChange,\r\n    resetNavigation\r\n  };\r\n};","import { useEffect, useCallback } from 'react';\r\n\r\ninterface KeyboardNavOptions {\r\n  onNext?: () => void;\r\n  onPrevious?: () => void;\r\n  onSave?: () => void;\r\n  onCancel?: () => void;\r\n  enabled?: boolean;\r\n}\r\n\r\nexport const useKeyboardNav = ({\r\n  onNext,\r\n  onPrevious,\r\n  onSave,\r\n  onCancel,\r\n  enabled = true\r\n}: KeyboardNavOptions) => {\r\n  const handleKeyPress = useCallback((event: KeyboardEvent) => {\r\n    if (!enabled) return;\r\n\r\n    // Check if user is typing in an input or textarea\r\n    if (\r\n      document.activeElement?.tagName === 'INPUT' ||\r\n      document.activeElement?.tagName === 'TEXTAREA'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const { key, ctrlKey, metaKey } = event;\r\n\r\n    // Navigation\r\n    if (key === 'ArrowRight' && onNext) {\r\n      event.preventDefault();\r\n      onNext();\r\n    }\r\n    if (key === 'ArrowLeft' && onPrevious) {\r\n      event.preventDefault();\r\n      onPrevious();\r\n    }\r\n\r\n    // Save (Ctrl/Cmd + S)\r\n    if ((ctrlKey || metaKey) && key.toLowerCase() === 's' && onSave) {\r\n      event.preventDefault();\r\n      onSave();\r\n    }\r\n\r\n    // Cancel (Escape)\r\n    if (key === 'Escape' && onCancel) {\r\n      event.preventDefault();\r\n      onCancel();\r\n    }\r\n  }, [enabled, onNext, onPrevious, onSave, onCancel]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [handleKeyPress]);\r\n\r\n  return {\r\n    isEnabled: enabled,\r\n    shortcuts: {\r\n      next: '→',\r\n      previous: '←',\r\n      save: '⌘/Ctrl + S',\r\n      cancel: 'Esc'\r\n    }\r\n  };\r\n};","import { Loader2 } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  className?: string;\r\n}\r\n\r\nconst sizes = {\r\n  sm: \"w-4 h-4\",\r\n  md: \"w-6 h-6\",\r\n  lg: \"w-8 h-8\"\r\n};\r\n\r\nconst LoadingSpinner = ({ size = \"md\", className }: LoadingSpinnerProps) => {\r\n  return (\r\n    <Loader2 \r\n      className={cn(\r\n        \"animate-spin text-gray-400\",\r\n        sizes[size],\r\n        className\r\n      )} \r\n    />\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n","import { AlertTriangle } from \"lucide-react\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface ErrorMessageProps {\r\n  title?: string;\r\n  message: string;\r\n  className?: string;\r\n  variant?: 'default' | 'destructive';\r\n}\r\n\r\nconst ErrorMessage = ({ \r\n  title = \"Error\", \r\n  message, \r\n  className,\r\n  variant = 'destructive'\r\n}: ErrorMessageProps) => {\r\n  return (\r\n    <Alert variant={variant} className={cn(\"flex items-center gap-2\", className)}>\r\n      <AlertTriangle className=\"h-5 w-5\" />\r\n      <div>\r\n        <AlertTitle>{title}</AlertTitle>\r\n        <AlertDescription>{message}</AlertDescription>\r\n      </div>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Keyboard } from \"lucide-react\";\r\n\r\ninterface ShortcutItem {\r\n  key: string;\r\n  description: string;\r\n}\r\n\r\nconst shortcuts: ShortcutItem[] = [\r\n  { key: \"→\", description: \"Next tab\" },\r\n  { key: \"←\", description: \"Previous tab\" },\r\n  { key: \"⌘/Ctrl + S\", description: \"Save changes\" },\r\n  { key: \"Esc\", description: \"Close dialog/Cancel\" },\r\n  { key: \"?\", description: \"Show keyboard shortcuts\" }\r\n];\r\n\r\nexport const KeyboardShortcutsDialog = () => {\r\n  return (\r\n    <Dialog>\r\n      <DialogTrigger asChild>\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          className=\"rounded-full\"\r\n          title=\"Keyboard Shortcuts\"\r\n        >\r\n          <Keyboard className=\"h-5 w-5\" />\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle>Keyboard Shortcuts</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4\">\r\n          {shortcuts.map(({ key, description }) => (\r\n            <div\r\n              key={key}\r\n              className=\"flex items-center justify-between px-4 py-2 rounded-lg bg-gray-50\"\r\n            >\r\n              <span className=\"text-sm text-gray-600\">{description}</span>\r\n              <kbd className=\"px-2 py-1 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded\">\r\n                {key}\r\n              </kbd>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};","import React from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { PalliativeCareProvider } from \"./context/PalliativeContext\";\r\nimport { PalliativeThemeProvider, usePalliativeThemeContext } from \"./context/ThemeProvider\";\r\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\r\nimport { Brain, Heart, Users, FileText, Moon, Sun, Monitor } from \"lucide-react\";\r\nimport { usePalliativeNav } from \"./hooks/usePalliativeNav\";\r\nimport { useKeyboardNav } from \"./hooks/useKeyboardNav\";\r\nimport LoadingSpinner from \"./components/LoadingSpinner\";\r\nimport ErrorMessage from \"./components/ErrorMessage\";\r\nimport { KeyboardShortcutsDialog } from \"./components/KeyboardShortcutsDialog\";\r\n\r\n// Lazy load components\r\nconst SymptomControl = React.lazy(() => import(\"./sections/symptom_control/SymptomControl\"));\r\nconst PainManagement = React.lazy(() => import(\"./sections/pain_management/PainManagement\"));\r\nconst FamilySupport = React.lazy(() => import(\"./sections/end_of_life/FamilySupport\"));\r\nconst AdvanceDirectives = React.lazy(() => import(\"./sections/end_of_life/AdvanceDirectives\"));\r\nconst PsychosocialCare = React.lazy(() => import(\"./sections/psychosocial_support/PsychosocialCare\"));\r\n\r\nconst tabs = [\r\n  {\r\n    id: \"symptoms\",\r\n    label: \"Symptom Control\",\r\n    icon: Brain,\r\n    component: SymptomControl\r\n  },\r\n  {\r\n    id: \"pain\",\r\n    label: \"Pain Management\",\r\n    icon: Heart,\r\n    component: PainManagement\r\n  },\r\n  {\r\n    id: \"psychosocial\",\r\n    label: \"Psychosocial Care\",\r\n    icon: Users,\r\n    component: PsychosocialCare\r\n  },\r\n  {\r\n    id: \"family\",\r\n    label: \"Family Support\",\r\n    icon: Users,\r\n    component: FamilySupport\r\n  },\r\n  {\r\n    id: \"directives\",\r\n    label: \"Advance Directives\",\r\n    icon: FileText,\r\n    component: AdvanceDirectives\r\n  }\r\n] as const;\r\n\r\nconst ThemeToggle = () => {\r\n  const { theme, toggleTheme } = usePalliativeThemeContext();\r\n  \r\n  const icon = {\r\n    light: Sun,\r\n    dark: Moon,\r\n    system: Monitor\r\n  }[theme];\r\n\r\n  const Icon = icon;\r\n\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      onClick={toggleTheme}\r\n      className=\"rounded-full\"\r\n      title={`Current theme: ${theme}`}\r\n    >\r\n      <Icon className=\"h-5 w-5\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst PalliativeModuleContent = () => {\r\n  const { activeTab, isTransitioning, handleTabChange } = usePalliativeNav(\"symptoms\");\r\n  const currentTabIndex = tabs.findIndex(tab => tab.id === activeTab);\r\n\r\n  const handleNext = () => {\r\n    if (currentTabIndex < tabs.length - 1) {\r\n      handleTabChange(tabs[currentTabIndex + 1].id);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentTabIndex > 0) {\r\n      handleTabChange(tabs[currentTabIndex - 1].id);\r\n    }\r\n  };\r\n\r\n  useKeyboardNav({\r\n    onNext: handleNext,\r\n    onPrevious: handlePrevious,\r\n    enabled: !isTransitioning\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 max-w-7xl\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-2\">\r\n          🕊️ Palliative Care Module\r\n        </h1>\r\n        <div className=\"flex items-center gap-2\">\r\n          <KeyboardShortcutsDialog />\r\n          <ThemeToggle />\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={handleTabChange} className=\"space-y-6\">\r\n        <TabsList className=\"bg-white border\">\r\n          {tabs.map(({ id, label, icon: Icon }) => (\r\n            <TabsTrigger\r\n              key={id}\r\n              value={id}\r\n              className=\"data-[state=active]:bg-gray-100 data-[state=active]:text-gray-900\"\r\n              disabled={isTransitioning}\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <Icon className=\"w-4 h-4\" />\r\n                <span>{label}</span>\r\n              </div>\r\n            </TabsTrigger>\r\n          ))}\r\n        </TabsList>\r\n\r\n        {tabs.map(({ id, component: Component }) => (\r\n          <TabsContent \r\n            key={id} \r\n            value={id} \r\n            className=\"mt-6\"\r\n            forceMount\r\n          >\r\n            <div className={`\r\n              transition-all duration-300 ease\r\n              ${activeTab === id ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4 absolute'}\r\n            `}>\r\n              <ErrorBoundary\r\n                moduleName={`Palliative Care - ${id}`}\r\n                fallback={\r\n                  <ErrorMessage\r\n                    title=\"Section Error\"\r\n                    message={`There was an error loading the ${id} section. Please try refreshing the page.`}\r\n                  />\r\n                }\r\n              >\r\n                <React.Suspense fallback={\r\n                  <div className=\"flex items-center justify-center h-32\">\r\n                    <LoadingSpinner size=\"lg\" />\r\n                  </div>\r\n                }>\r\n                  <Component />\r\n                </React.Suspense>\r\n              </ErrorBoundary>\r\n            </div>\r\n          </TabsContent>\r\n        ))}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PalliativeModule = () => {\r\n  return (\r\n    <PalliativeThemeProvider>\r\n      <PalliativeCareProvider>\r\n        <PalliativeModuleContent />\r\n      </PalliativeCareProvider>\r\n    </PalliativeThemeProvider>\r\n  );\r\n};\r\n\r\nexport default PalliativeModule;\r\n","import React from \"react\";\r\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\r\nimport PalliativeModule from \"./PalliativeModule\";\r\n\r\nconst Palliative = () => {\r\n  return (\r\n    <ErrorBoundary moduleName=\"Palliative Care\">\r\n      <PalliativeModule />\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Palliative;","import { useEffect, useState } from \"react\";\r\nimport { supabase } from \"@/lib/supabaseClient\";\r\n\r\nexport interface SymptomData {\r\n  id: string;\r\n  symptom_name: string;\r\n  severity_level: 'Mild' | 'Moderate' | 'Severe';\r\n  management: string;\r\n  category_tag?: string;\r\n  evidence_grade?: string;\r\n  source_reference?: string;\r\n  is_red_flag?: boolean;\r\n  preferred_route?: string;\r\n  route_note?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  version: number;\r\n  status: 'active' | 'archived' | 'draft';\r\n}\r\n\r\nexport function useSymptomData(filters?: {\r\n  category?: string;\r\n  severity?: string;\r\n  search?: string;\r\n}) {\r\n  const [data, setData] = useState<SymptomData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const fetchData = async () => {\r\n      let query = supabase\r\n        .from(\"palliative_symptoms\")\r\n        .select(\"*\")\r\n        .eq(\"status\", \"active\");\r\n\r\n      if (filters?.category) {\r\n        query = query.eq(\"category_tag\", filters.category);\r\n      }\r\n\r\n      if (filters?.severity) {\r\n        query = query.eq(\"severity_level\", filters.severity);\r\n      }\r\n\r\n      if (filters?.search) {\r\n        query = query.ilike(\"symptom_name\", `%${filters.search}%`);\r\n      }\r\n\r\n      const { data, error } = await query.order(\"symptom_name\");\r\n\r\n      if (error) setError(error.message);\r\n      else setData(data as SymptomData[]);\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters?.category, filters?.severity, filters?.search]);\r\n\r\n  return { data, loading, error };\r\n}","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport { useSymptomData } from \"../../hooks/useSymptomData\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { AlertTriangle, Loader2 } from \"lucide-react\";\r\nimport { marked } from \"marked\";\r\nimport clsx from \"clsx\";\r\n\r\n// Utility to group symptoms by name\r\nfunction groupBy<T, K extends keyof any>(arr: T[], key: (item: T) => K) {\r\n  return arr.reduce((acc, item) => {\r\n    const group = key(item);\r\n    if (!acc[group]) acc[group] = [];\r\n    acc[group].push(item);\r\n    return acc;\r\n  }, {} as Record<K, T[]>);\r\n}\r\n\r\nconst SymptomControl: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const { data, loading, error } = useSymptomData({\r\n    search: search.trim() ? search : undefined,\r\n  });\r\n\r\n  // Defensive: Always define these hooks before any return\r\n  const activeData = Array.isArray(data) ? data.filter((s) => s.status === \"active\") : [];\r\n  const grouped = useMemo(\r\n    () => groupBy(activeData, (s) => s.symptom_name),\r\n    [activeData]\r\n  );\r\n  const symptomNames = Object.keys(grouped);\r\n\r\n  // Debug log for Supabase data\r\n  useEffect(() => {\r\n    console.log(\"Fetched Supabase symptoms:\", data);\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center py-16\">\r\n        <Loader2 className=\"animate-spin w-8 h-8 text-gray-400\" />\r\n        <span className=\"ml-3 text-gray-500\">Loading symptoms...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex flex-col items-center py-16\">\r\n        <AlertTriangle className=\"w-8 h-8 text-red-500 mb-2\" />\r\n        <span className=\"text-red-600 font-medium\">Error: {error}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!Array.isArray(data)) {\r\n    return (\r\n      <div className=\"flex flex-col items-center py-16\">\r\n        <AlertTriangle className=\"w-8 h-8 text-red-500 mb-2\" />\r\n        <span className=\"text-red-600 font-medium\">Unexpected data format from Supabase.</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"palliative-section max-w-5xl mx-auto\">\r\n      <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\r\n        <div className=\"relative flex-1\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Search symptoms...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"pl-10\"\r\n            aria-label=\"Search symptoms\"\r\n          />\r\n          <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none\">\r\n            <Loader2 className={clsx(\"w-4 h-4\", loading && \"animate-spin\")} />\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs defaultValue={symptomNames[0] || \"none\"} className=\"w-full\">\r\n        <TabsList aria-label=\"Symptom groups\">\r\n          {symptomNames.length > 0 ? (\r\n            symptomNames.map((name) => (\r\n              <TabsTrigger key={name} value={name}>\r\n                {name}\r\n              </TabsTrigger>\r\n            ))\r\n          ) : (\r\n            <TabsTrigger value=\"none\" disabled>\r\n              No Symptoms\r\n            </TabsTrigger>\r\n          )}\r\n        </TabsList>\r\n\r\n        {symptomNames.length === 0 && (\r\n          <TabsContent value=\"none\">\r\n            <div className=\"text-center py-16 text-gray-500\">\r\n              No active symptoms recorded\r\n            </div>\r\n          </TabsContent>\r\n        )}\r\n\r\n        {symptomNames.map((name) => (\r\n          <TabsContent key={name} value={name}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {grouped[name].map((symptom) => (\r\n                <Card key={symptom.id} className=\"border shadow-sm\">\r\n                  <CardHeader>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <CardTitle className=\"text-lg\">{symptom.symptom_name}</CardTitle>\r\n                      <span\r\n                        className={clsx(\r\n                          \"px-2 py-1 rounded text-xs font-semibold\",\r\n                          symptom.severity_level === \"Mild\" && \"bg-green-100 text-green-700\",\r\n                          symptom.severity_level === \"Moderate\" && \"bg-yellow-100 text-yellow-700\",\r\n                          symptom.severity_level === \"Severe\" && \"bg-red-100 text-red-700\"\r\n                        )}\r\n                      >\r\n                        {symptom.severity_level}\r\n                      </span>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"prose prose-sm max-w-none mb-2\">\r\n                      <div\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: marked.parse(symptom.management || \"\"),\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {symptom.is_red_flag && (\r\n                      <div className=\"flex items-center gap-2 mt-2 text-red-600\">\r\n                        <AlertTriangle className=\"w-4 h-4\" />\r\n                        <span className=\"font-medium\">Red Flag</span>\r\n                      </div>\r\n                    )}\r\n                    {symptom.preferred_route && (\r\n                      <div className=\"mt-2 text-xs text-gray-500\">\r\n                        <span className=\"font-semibold\">Preferred Route:</span> {symptom.preferred_route}\r\n                        {symptom.route_note && (\r\n                          <span className=\"ml-2 italic\">{symptom.route_note}</span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    {symptom.evidence_grade && (\r\n                      <div className=\"mt-2 text-xs text-blue-500\">\r\n                        <span className=\"font-semibold\">Evidence:</span> {symptom.evidence_grade}\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </TabsContent>\r\n        ))}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SymptomControl;\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\r\nimport { ChevronDown } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Accordion = AccordionPrimitive.Root\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAccordionItem.displayName = \"AccordionItem\"\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n))\r\nAccordionTrigger.displayName = \"AccordionTrigger\"\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <div className=\"pb-4 pt-0\">{children}</div>\r\n  </AccordionPrimitive.Content>\r\n))\r\nAccordionContent.displayName = \"AccordionContent\"\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\r\n","import * as React from \"react\"\r\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Slider = React.forwardRef<\r\n  React.ElementRef<typeof SliderPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full touch-none select-none items-center\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\r\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\r\n  </SliderPrimitive.Root>\r\n))\r\nSlider.displayName = SliderPrimitive.Root.displayName\r\n\r\nexport { Slider }\r\n","import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n","import * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n","import React, { useState } from 'react';\r\nimport { Activity, Clock, Stethoscope, PieChart, Pill, AlertCircle, BookOpen, ChevronDown, ChevronUp, LucideProps, LucideIcon, Brain } from 'lucide-react';\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'; // Assuming ShadCN UI path\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'; // Assuming ShadCN UI path\r\nimport { Button } from '@/components/ui/button'; // Assuming ShadCN UI path\r\nimport { cn } from '@/lib/utils'; // Assuming utility function exists\r\nimport { Disclosure } from '@headlessui/react'; // Assuming headlessui is installed\r\nimport { usePalliativeCare } from \"../../context/PalliativeContext\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { AlertTriangle } from \"lucide-react\";\r\n\r\n// Define interfaces for the card data structures\r\ninterface BasePainCard {\r\n  id: string;\r\n  title: string;\r\n  severity: 'none' | 'mild' | 'moderate' | 'severe';\r\n  icon: LucideIcon;\r\n  handbookSectionId?: string; // Optional handbook link ID\r\n}\r\n\r\ninterface AssessmentPainCard extends BasePainCard {\r\n  severity: 'none';\r\n  content: string[];\r\n  tools: string[];\r\n}\r\n\r\ninterface TreatmentPainCard extends BasePainCard {\r\n  severity: 'mild' | 'moderate' | 'severe';\r\n  drugInfo: string;\r\n  recommendations: string[];\r\n  nonPharm: string[];\r\n  redFlags?: string[]; // Optional red flags\r\n  suggestions?: string[]; // Optional smart suggestions\r\n}\r\n\r\n// Union type for any pain card\r\ntype PainCard = AssessmentPainCard | TreatmentPainCard;\r\n\r\n// Type assertion for the data structure with updated content\r\nconst painCardsData: { [key: string]: PainCard } = {\r\n  assessment: {\r\n    id: \"assessment\",\r\n    title: \"Pain Assessment\",\r\n    severity: \"none\",\r\n    icon: Activity,\r\n    content: [\r\n      \"Conduct a comprehensive pain history: Location, Quality, Intensity (score), Timing (onset, duration, frequency), Radiation, Aggravating/Relieving factors, Associated symptoms.\",\r\n      \"Assess impact on function: Activities of Daily Living (ADLs), sleep, mood, appetite, social interaction.\",\r\n      \"Evaluate psychosocial factors: Anxiety, depression, coping mechanisms, spiritual beliefs, cultural background, financial concerns.\",\r\n      \"Perform relevant physical examination: Identify potential pain generators, neurological deficits.\",\r\n      \"Review past medical history, previous pain treatments and their effectiveness/side effects.\",\r\n    ],\r\n    tools: [\"Numeric Rating Scale (NRS 0-10)\", \"Visual Analog Scale (VAS)\", \"Wong-Baker FACES Scale\", \"Edmonton Symptom Assessment System (ESAS)\", \"Pain Diary/Log\"],\r\n    handbookSectionId: \"pain-assessment-details\"\r\n  },\r\n  mild: {\r\n    id: \"mild\",\r\n    title: \"Mild Pain (NRS 1-3)\",\r\n    severity: \"mild\",\r\n    icon: Pill,\r\n    drugInfo: \"Non-Opioid Analgesics +/- Adjuvants\",\r\n    recommendations: [\r\n      \"Acetaminophen (Paracetamol): Up to 1g QID (max 3-4g/day). Monitor LFTs with prolonged use or risk factors.\",\r\n      \"NSAIDs (e.g., Ibuprofen, Naproxen, Celecoxib): Use lowest effective dose for shortest duration. Consider GI protection (PPI) and monitor renal function/BP. Avoid in high-risk patients (renal impairment, heart failure, history of GI bleed).\",\r\n      \"Adjuvants: Consider based on pain type (e.g., topical lidocaine for localized neuropathic pain, low-dose TCA/gabapentinoid if neuropathic component suspected).\",\r\n    ],\r\n    nonPharm: [\r\n      \"Heat/cold application\",\r\n      \"Positioning, supportive devices (pillows, braces)\",\r\n      \"Gentle stretching/exercise\",\r\n      \"Distraction (music, reading, conversation)\",\r\n      \"Relaxation techniques (deep breathing, mindfulness)\",\r\n      \"Transcutaneous Electrical Nerve Stimulation (TENS)\"\r\n    ],\r\n    redFlags: [\"Pain persisting > 1-2 weeks despite measures\", \"New neurological symptoms\", \"Pain disproportionate to apparent cause\"],\r\n    suggestions: [\"Ensure regular dosing of Acetaminophen/NSAIDs if pain is constant.\", \"Re-evaluate diagnosis if pain doesn't respond as expected.\"]\r\n  },\r\n  moderate: {\r\n    id: \"moderate\",\r\n    title: \"Moderate Pain (NRS 4-6)\",\r\n    severity: \"moderate\",\r\n    icon: Pill,\r\n    drugInfo: \"Weak Opioids +/- Non-Opioids/Adjuvants\",\r\n    recommendations: [\r\n      \"Weak Opioids: Codeine (often in combination products), Tramadol. Start low, titrate cautiously. Monitor for constipation, nausea, sedation, dizziness.\",\r\n      \"Continue/Optimize Non-Opioids: Ensure regular dosing of Acetaminophen/NSAIDs if appropriate.\",\r\n      \"Add/Titrate Adjuvants: Especially important if neuropathic pain suspected (e.g., Gabapentin, Pregabalin, TCAs like Nortriptyline, SNRIs like Duloxetine).\",\r\n      \"Consider short-acting opioid for breakthrough pain if using scheduled weak opioid.\",\r\n      \"Prophylactic laxative regimen recommended with regular opioid use.\"\r\n    ],\r\n    nonPharm: [\r\n      \"Continue/intensify mild pain strategies\",\r\n      \"Structured physical therapy/occupational therapy\",\r\n      \"Psychological support (counseling, CBT)\",\r\n      \"Acupuncture/Acupressure\"\r\n    ],\r\n    redFlags: [\"Rapid pain escalation\", \"Opioid side effects limiting titration (sedation, confusion)\", \"Development of opioid tolerance without improvement\", \"Signs of infection at pain site\"],\r\n    suggestions: [\"Consider adjuvant therapy early if neuropathic features present.\", \"Evaluate for opioid rotation if side effects are problematic.\", \"Assess psychosocial factors contributing to pain.\"]\r\n  },\r\n  severe: {\r\n    id: \"severe\",\r\n    title: \"Severe Pain (NRS 7-10)\",\r\n    severity: \"severe\",\r\n    icon: Pill,\r\n    drugInfo: \"Strong Opioids +/- Non-Opioids/Adjuvants\",\r\n    recommendations: [\r\n      \"Strong Opioids: Morphine, Oxycodone, Hydromorphone (start with immediate-release). Fentanyl patch for stable, chronic pain (use with caution, requires careful conversion).\",\r\n      \"Titration: Start low, titrate rapidly based on frequent reassessment and breakthrough dose requirements (typically 10-15% of total daily dose q1-4h PRN).\",\r\n      \"Equianalgesic Dosing: Use conversion tables carefully when switching opioids or routes. Reduce dose by 25-50% for incomplete cross-tolerance.\",\r\n      \"Continue Non-Opioids/Adjuvants: Maximize multimodal analgesia.\",\r\n      \"Essential: Prophylactic bowel regimen (stimulant + softener). Manage other side effects (nausea, sedation).\",\r\n      \"Consider long-acting/extended-release formulations once pain is stable on IR opioid.\",\r\n      \"Consultation: Palliative Care / Pain Specialist strongly recommended.\"\r\n    ],\r\n    nonPharm: [\r\n      \"Continue previous strategies as tolerated\",\r\n      \"Interventional techniques (consider early): Nerve blocks, epidural/intrathecal analgesia, spinal cord stimulators.\",\r\n      \"Radiotherapy for bone metastases\",\r\n      \"Palliative surgery/procedures\",\r\n      \"Comprehensive psychosocial and spiritual support\"\r\n    ],\r\n    redFlags: [\"Uncontrolled pain despite aggressive titration\", \"Severe opioid toxicity (respiratory depression, myoclonus, severe sedation/delirium)\", \"Suspected opioid-induced hyperalgesia\", \"New/worsening neurological deficit (e.g., cauda equina syndrome)\", \"Sudden cessation of pain (potential catastrophic event)\"],\r\n    suggestions: [\"Refer to Interventional Pain Team if inadequate response or dose-limiting side effects.\", \"Consider ketamine infusion for refractory neuropathic/central pain.\", \"Address existential distress contributing to total pain.\"]\r\n  }\r\n};\r\n\r\n// Helper function for severity colors\r\nconst getSeverityClasses = (severity: PainCard['severity']): string => {\r\n  switch (severity) {\r\n    case 'mild':\r\n      return 'border-l-4 border-green-500 dark:border-green-400';\r\n    case 'moderate':\r\n      return 'border-l-4 border-yellow-500 dark:border-yellow-400';\r\n    case 'severe':\r\n      return 'border-l-4 border-red-500 dark:border-red-400';\r\n    default: // 'none' for assessment\r\n      return 'border-l-4 border-blue-500 dark:border-blue-400';\r\n  }\r\n};\r\n\r\n// Type guard to check if a card is an AssessmentPainCard\r\nfunction isAssessmentCard(card: PainCard): card is AssessmentPainCard {\r\n  return card.severity === 'none';\r\n}\r\n\r\ninterface PainCharacteristics {\r\n  type: 'somatic' | 'visceral' | 'neuropathic' | 'mixed' | undefined;\r\n  location: string[];\r\n  duration: 'acute' | 'chronic' | undefined;\r\n  pattern: 'constant' | 'intermittent' | 'breakthrough' | undefined;\r\n  aggravators: string[];\r\n  relievers: string[];\r\n}\r\n\r\nconst initialPainCharacteristics: PainCharacteristics = {\r\n  type: undefined,\r\n  location: [],\r\n  duration: undefined,\r\n  pattern: undefined,\r\n  aggravators: [],\r\n  relievers: []\r\n};\r\n\r\nconst PainManagement = () => {\r\n  const { state, setPainScore } = usePalliativeCare();\r\n  const [characteristics, setCharacteristics] = React.useState<PainCharacteristics>(initialPainCharacteristics);\r\n  const cardIds = Object.values(painCardsData).map(card => card.id);\r\n  const [openItems, setOpenItems] = useState<string[]>([]);\r\n  const [selectedScore, setSelectedScore] = useState<number | null>(null);\r\n  const [highlightedCardId, setHighlightedCardId] = useState<string | null>(null);\r\n\r\n  const handleExpandAll = () => setOpenItems(cardIds);\r\n  const handleCollapseAll = () => setOpenItems([]);\r\n  const toggleAll = () => openItems.length === cardIds.length ? handleCollapseAll() : handleExpandAll();\r\n\r\n  const getSeverityFromScore = (score: number | null): PainCard['severity'] => {\r\n    if (score === null || score === 0) return 'none';\r\n    if (score >= 1 && score <= 3) return 'mild';\r\n    if (score >= 4 && score <= 6) return 'moderate';\r\n    if (score >= 7 && score <= 10) return 'severe';\r\n    return 'none';\r\n  };\r\n\r\n  const handleScoreChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const score = parseInt(event.target.value, 10);\r\n    if (isNaN(score)) {\r\n        handleResetScore();\r\n        return;\r\n    }\r\n\r\n    setSelectedScore(score);\r\n    const severity = getSeverityFromScore(score);\r\n    const targetCardId = severity !== 'none' ? severity : null; // 'mild', 'moderate', 'severe' are the IDs\r\n    setHighlightedCardId(targetCardId);\r\n\r\n    // Auto-expand the corresponding card\r\n    if (targetCardId && !openItems.includes(targetCardId)) {\r\n      setOpenItems(prevOpenItems => [...prevOpenItems, targetCardId]);\r\n    }\r\n  };\r\n\r\n  const handleResetScore = () => {\r\n    setSelectedScore(null);\r\n    setHighlightedCardId(null);\r\n    // Optionally collapse the previously highlighted card or all cards\r\n    // setOpenItems([]); // Uncomment to collapse all on reset\r\n  };\r\n\r\n  const handlePainTypeChange = (value: PainCharacteristics['type']) => {\r\n    setCharacteristics(prev => ({\r\n      ...prev,\r\n      type: value\r\n    }));\r\n  };\r\n\r\n  const handlePainPatternChange = (value: PainCharacteristics['pattern']) => {\r\n    setCharacteristics(prev => ({\r\n      ...prev,\r\n      pattern: value\r\n    }));\r\n  };\r\n\r\n  const handlePainDurationChange = (value: PainCharacteristics['duration']) => {\r\n    setCharacteristics(prev => ({\r\n      ...prev,\r\n      duration: value\r\n    }));\r\n  };\r\n\r\n  const getPainSeverityColor = (score: number) => {\r\n    if (score >= 7) return 'text-red-600';\r\n    if (score >= 4) return 'text-yellow-600';\r\n    return 'text-green-600';\r\n  };\r\n\r\n  const handleSliderChange = (value: number[]) => {\r\n    setPainScore(value[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n\r\n      {/* Pain Score Evaluator */}\r\n      <section className=\"p-4 bg-white dark:bg-slate-800 rounded-xl shadow-md border border-gray-200 dark:border-slate-700\">\r\n        <Disclosure>\r\n          {({ open }) => (\r\n            <>\r\n              <Disclosure.Button className=\"flex justify-between w-full items-center text-left text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                <span>Pain Score Evaluator</span>\r\n                <ChevronDown className={`${open ? 'transform rotate-180' : ''} w-5 h-5 text-indigo-500`} />\r\n              </Disclosure.Button>\r\n              <Disclosure.Panel className=\"pt-4 mt-4 border-t border-gray-200 dark:border-slate-700 text-sm text-slate-700 dark:text-slate-300\">\r\n                <div className=\"flex flex-col sm:flex-row items-center gap-4\">\r\n                  <label htmlFor=\"pain-score\" className=\"font-medium\">Select Pain Score (0-10):</label>\r\n                  <select\r\n                    id=\"pain-score\"\r\n                    value={selectedScore ?? ''}\r\n                    onChange={handleScoreChange}\r\n                    className=\"flex-grow p-2 border rounded-md bg-white dark:bg-slate-700 dark:text-white focus:ring-indigo-500 focus:border-indigo-500\"\r\n                  >\r\n                    <option value=\"\" disabled>Select score...</option>\r\n                    {[...Array(11).keys()].map(i => (\r\n                      <option key={i} value={i}>{i} {\r\n                        i === 0 ? '(None)' :\r\n                        i >= 1 && i <= 3 ? '(Mild)' :\r\n                        i >= 4 && i <= 6 ? '(Moderate)' :\r\n                        '(Severe)'\r\n                      }</option>\r\n                    ))}\r\n                  </select>\r\n                  <Button onClick={handleResetScore} variant=\"outline\" size=\"sm\">Reset</Button>\r\n                </div>\r\n                {selectedScore !== null && (\r\n                  <p className=\"mt-3 text-xs italic\">\r\n                    Score {selectedScore} corresponds to {getSeverityFromScore(selectedScore)} pain. Highlighted card below.\r\n                  </p>\r\n                )}\r\n              </Disclosure.Panel>\r\n            </>\r\n          )}\r\n        </Disclosure>\r\n      </section>\r\n\r\n      {/* Pain Assessment & Management Cards */}\r\n      <section>\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 flex items-center gap-3\">\r\n            <Activity className=\"h-6 w-6 text-indigo-500\" />\r\n            <span className=\"bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">Pain Assessment & Management</span>\r\n          </h2>\r\n          <Button onClick={toggleAll} variant=\"outline\" size=\"sm\">\r\n            {openItems.length === cardIds.length ? <ChevronUp className=\"h-4 w-4 mr-1\" /> : <ChevronDown className=\"h-4 w-4 mr-1\" />}\r\n            {openItems.length === cardIds.length ? 'Collapse All' : 'Expand All'}\r\n          </Button>\r\n        </div>\r\n\r\n        <Accordion\r\n          type=\"multiple\"\r\n          value={openItems}\r\n          onValueChange={setOpenItems}\r\n          className=\"w-full space-y-4\"\r\n        >\r\n          {Object.values(painCardsData).map((card: PainCard) => {\r\n            const IconComponent = card.icon;\r\n            const Icon = IconComponent as React.FC<LucideProps>;\r\n            const isHighlighted = card.id === highlightedCardId;\r\n            return (\r\n              <AccordionItem value={card.id} key={card.id} className=\"border-none\">\r\n                <Card className={cn(\r\n                  \"overflow-hidden rounded-xl shadow-md dark:bg-slate-800/60 backdrop-blur-lg border border-gray-300/30 dark:border-slate-700/50 transition-all duration-300\",\r\n                  getSeverityClasses(card.severity),\r\n                  isHighlighted && \"ring-2 ring-offset-2 ring-indigo-500 dark:ring-offset-slate-900\" // Highlight style\r\n                )}>\r\n                  <AccordionTrigger className=\"px-4 py-3 hover:no-underline hover:bg-gray-100/50 dark:hover:bg-slate-700/50 transition-colors\">\r\n                    <div className=\"flex items-center gap-3 w-full\">\r\n                      <Icon className={cn(\"h-5 w-5\",\r\n                        card.severity === 'none' ? 'text-blue-500 dark:text-blue-400' :\r\n                        card.severity === 'mild' ? 'text-green-500 dark:text-green-400' :\r\n                        card.severity === 'moderate' ? 'text-yellow-500 dark:text-yellow-400' :\r\n                        'text-red-500 dark:text-red-400'\r\n                      )} />\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-md font-semibold text-gray-900 dark:text-gray-100\">{card.title}</h3>\r\n                      </div>\r\n                      {/* Optional: Handbook Link */}\r\n                      {card.handbookSectionId && (\r\n                        <a href={`/handbook/${card.handbookSectionId}`} // Adjust link as needed\r\n                           onClick={(e) => e.stopPropagation()} // Prevent accordion toggle\r\n                           className=\"ml-auto text-xs text-blue-600 dark:text-blue-400 hover:underline flex items-center gap-1\">\r\n                          <BookOpen className=\"h-3 w-3\" /> Handbook\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </AccordionTrigger>\r\n                  <AccordionContent className=\"px-4 pt-0 pb-4\">\r\n                    <div className=\"space-y-4 text-slate-700 dark:text-slate-300 text-sm\">\r\n                      {isAssessmentCard(card) ? (\r\n                        // Assessment Card Content\r\n                        <>\r\n                          {card.content.map((point: string, index: number) => <p key={index}>{point}</p>)}\r\n                          {card.tools && (\r\n                            <div className=\"mt-3 pt-3 border-t border-gray-300/50 dark:border-slate-700/50\">\r\n                              <h4 className=\"font-medium text-gray-800 dark:text-gray-200 mb-1\">Common Tools:</h4>\r\n                              <ul className=\"list-disc list-inside pl-2 space-y-1\">\r\n                                {card.tools.map((tool: string, idx: number) => <li key={idx}>{tool}</li>)}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        // Treatment Card Content (Mild, Moderate, Severe)\r\n                        <>\r\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            {/* Drug Info */}\r\n                            <div>\r\n                              <h4 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 flex items-center gap-2\">\r\n                                <Pill className=\"h-4 w-4 text-indigo-500\" /> Pharmacological Approach\r\n                              </h4>\r\n                              <p className=\"font-semibold text-indigo-600 dark:text-indigo-400 mb-2\">{card.drugInfo}</p>\r\n                              <ul className=\"list-disc list-inside pl-2 space-y-1\">\r\n                                {card.recommendations?.map((rec: string, idx: number) => <li key={idx}>{rec}</li>)}\r\n                              </ul>\r\n                            </div>\r\n\r\n                            {/* Non-Pharm */}\r\n                            <div>\r\n                              <h4 className=\"font-medium text-gray-800 dark:text-gray-200 mb-2\">Non-Pharmacological Tips</h4>\r\n                              <ul className=\"list-disc list-inside pl-2 space-y-1\">\r\n                                {card.nonPharm?.map((tip: string, idx: number) => <li key={idx}>{tip}</li>)}\r\n                              </ul>\r\n                            </div>\r\n\r\n                            {/* Red Flags */}\r\n                            {card.redFlags && card.redFlags.length > 0 && (\r\n                              <div className=\"md:col-span-2 mt-2 border-t border-gray-300/50 dark:border-slate-700/50 pt-3\">\r\n                                <h4 className=\"font-medium text-red-600 dark:text-red-400 mb-2 flex items-center gap-2\">\r\n                                  <AlertCircle className=\"h-4 w-4\" /> Red Flags\r\n                                </h4>\r\n                                <ul className=\"list-disc list-inside pl-2 space-y-1 text-red-700 dark:text-red-300\">\r\n                                  {card.redFlags.map((flag: string, idx: number) => <li key={idx}>{flag}</li>)}\r\n                                </ul>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Smart Suggestions */}\r\n                          {card.suggestions && card.suggestions.length > 0 && (\r\n                            <div className=\"mt-4 pt-3 border-t border-gray-300/50 dark:border-slate-700/50\">\r\n                              <h4 className=\"font-medium text-indigo-600 dark:text-indigo-400 mb-2 flex items-center gap-2 text-xs uppercase tracking-wider\">\r\n                                <Brain className=\"h-4 w-4\" /> Smart Suggestions\r\n                              </h4>\r\n                              <ul className=\"list-disc list-inside pl-2 space-y-1 text-sm text-indigo-700 dark:text-indigo-300\">\r\n                                {card.suggestions.map((suggestion: string, idx: number) => <li key={idx}>{suggestion}</li>)}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </AccordionContent>\r\n                </Card>\r\n              </AccordionItem>\r\n            );\r\n          })}\r\n        </Accordion>\r\n      </section>\r\n\r\n      {/* Existing Sections (Keep them below the new Accordion) */}\r\n      {/* Pain Management Guidelines */}\r\n      <section className=\"bg-gradient-to-br from-indigo-50/10 to-purple-50/10 backdrop-blur-lg p-6 rounded-xl border border-white/20 shadow-md\r\n                         hover:shadow-xl transition-all duration-300 ease-in-out\">\r\n         {/* ... existing guideline content ... */}\r\n         <h3 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-3\">\r\n           <Stethoscope className=\"h-6 w-6 text-indigo-500\" />\r\n           <span className=\"bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">Treatment Guidelines Overview</span>\r\n         </h3>\r\n         {/* ... rest of the existing guideline content ... */}\r\n      </section>\r\n\r\n      {/* Monitoring and Follow-up */}\r\n      <section className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n         {/* ... existing monitoring content ... */}\r\n         <div className=\"bg-gradient-to-br from-indigo-50/10 to-purple-50/10 backdrop-blur-lg p-6 rounded-xl border border-gray-200/40 dark:border-slate-700/50 shadow-md\r\n                       hover:shadow-xl hover:scale-102 transition-all duration-300 ease-in-out\">\r\n           <h3 className=\"text-lg font-bold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-3\">\r\n             <Clock className=\"h-6 w-6 text-indigo-500\" />\r\n             <span className=\"bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">Monitoring Schedule</span>\r\n           </h3>\r\n           {/* ... rest of the existing monitoring content ... */}\r\n         </div>\r\n         <div className=\"bg-gradient-to-br from-indigo-50/10 to-purple-50/10 backdrop-blur-lg p-6 rounded-xl border border-gray-200/40 dark:border-slate-700/50 shadow-md\r\n                       hover:shadow-xl hover:scale-102 transition-all duration-300 ease-in-out\">\r\n           <h3 className=\"text-lg font-bold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-3\">\r\n             <PieChart className=\"h-6 w-6 text-indigo-500\" />\r\n             <span className=\"bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">Outcome Measures</span>\r\n           </h3>\r\n           {/* ... rest of the existing outcome measures content ... */}\r\n         </div>\r\n      </section>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Pain Score</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <div className=\"flex justify-between mb-2\">\r\n                <span className=\"text-sm text-gray-500\">No Pain</span>\r\n                <span className=\"text-sm text-gray-500\">Worst Pain</span>\r\n              </div>\r\n              <Slider\r\n                defaultValue={[state.painScore]}\r\n                max={10}\r\n                step={1}\r\n                onValueChange={handleSliderChange}\r\n              />\r\n              <div className=\"mt-4 text-center\">\r\n                <span className={`text-2xl font-bold ${getPainSeverityColor(state.painScore)}`}>\r\n                  {state.painScore}\r\n                </span>\r\n                <span className=\"text-sm text-gray-500 ml-2\">/ 10</span>\r\n              </div>\r\n            </div>\r\n\r\n            {state.painScore >= 7 && (\r\n              <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\r\n                <AlertTriangle className=\"w-5 h-5 text-red-600 flex-shrink-0 mt-0.5\" />\r\n                <div>\r\n                  <h4 className=\"font-semibold text-red-800\">Severe Pain</h4>\r\n                  <p className=\"text-sm text-red-700 mt-1\">\r\n                    Immediate intervention required. Consider rescue medication or dose adjustment.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Pain Characteristics</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <Label>Pain Type</Label>\r\n              <RadioGroup\r\n                value={characteristics.type}\r\n                onValueChange={handlePainTypeChange}\r\n                className=\"grid grid-cols-2 gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"somatic\" id=\"somatic\" />\r\n                  <Label htmlFor=\"somatic\">Somatic</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"visceral\" id=\"visceral\" />\r\n                  <Label htmlFor=\"visceral\">Visceral</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"neuropathic\" id=\"neuropathic\" />\r\n                  <Label htmlFor=\"neuropathic\">Neuropathic</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"mixed\" id=\"mixed\" />\r\n                  <Label htmlFor=\"mixed\">Mixed</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Pattern</Label>\r\n              <RadioGroup\r\n                value={characteristics.pattern}\r\n                onValueChange={handlePainPatternChange}\r\n                className=\"grid grid-cols-2 gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"constant\" id=\"constant\" />\r\n                  <Label htmlFor=\"constant\">Constant</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"intermittent\" id=\"intermittent\" />\r\n                  <Label htmlFor=\"intermittent\">Intermittent</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"breakthrough\" id=\"breakthrough\" />\r\n                  <Label htmlFor=\"breakthrough\">Breakthrough</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Duration</Label>\r\n              <RadioGroup\r\n                value={characteristics.duration}\r\n                onValueChange={handlePainDurationChange}\r\n                className=\"flex gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"acute\" id=\"acute\" />\r\n                  <Label htmlFor=\"acute\">Acute</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"chronic\" id=\"chronic\" />\r\n                  <Label htmlFor=\"chronic\">Chronic</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Current Medications</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <p className=\"text-sm text-gray-600\">\r\n              No pain medications recorded yet.\r\n            </p>\r\n            <Button variant=\"outline\">Add Medication</Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PainManagement;\r\n","import React from \"react\";\r\nimport { usePalliativeCare } from \"../../context/PalliativeContext\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\r\nimport { AlertTriangle, Plus, UserPlus } from \"lucide-react\";\r\nimport type { FamilyMember } from \"../../context/PalliativeContext\";\r\n\r\n// Support needs categories\r\nconst supportNeeds = [\r\n  \"Emotional Support\",\r\n  \"Practical Help\",\r\n  \"Information/Education\",\r\n  \"Respite Care\",\r\n  \"Bereavement Support\",\r\n  \"Financial Guidance\"\r\n] as const;\r\n\r\nconst FamilySupport = () => {\r\n  const { state, addFamilyMember, updateFamilyMember } = usePalliativeCare();\r\n  const [showAddForm, setShowAddForm] = React.useState(false);\r\n  const [formData, setFormData] = React.useState<Omit<FamilyMember, \"id\" | \"needsSupport\">>({\r\n    name: \"\",\r\n    relationship: \"\",\r\n    isMainCaregiver: false,\r\n    contactInfo: \"\",\r\n  });\r\n\r\n  const handleInputChange = (field: keyof typeof formData, value: string | boolean) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newMember: FamilyMember = {\r\n      id: crypto.randomUUID(),\r\n      ...formData,\r\n      needsSupport: Array(supportNeeds.length).fill(false)\r\n    };\r\n    addFamilyMember(newMember);\r\n    setFormData({\r\n      name: \"\",\r\n      relationship: \"\",\r\n      isMainCaregiver: false,\r\n      contactInfo: \"\",\r\n    });\r\n    setShowAddForm(false);\r\n  };\r\n\r\n  const updateNeedStatus = (memberId: string, needIndex: number, checked: boolean) => {\r\n    const member = state.familyMembers.find(m => m.id === memberId);\r\n    if (!member) return;\r\n\r\n    const updatedNeeds = [...member.needsSupport];\r\n    updatedNeeds[needIndex] = checked;\r\n\r\n    updateFamilyMember(memberId, {\r\n      needsSupport: updatedNeeds\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold\">Family Support Network</h2>\r\n        <Dialog open={showAddForm} onOpenChange={setShowAddForm}>\r\n          <DialogTrigger asChild>\r\n            <Button>\r\n              <UserPlus className=\"w-4 h-4 mr-2\" />\r\n              Add Family Member\r\n            </Button>\r\n          </DialogTrigger>\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle>Add Family Member</DialogTitle>\r\n            </DialogHeader>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                  id=\"name\"\r\n                  value={formData.name}\r\n                  onChange={(e) => handleInputChange(\"name\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"relationship\">Relationship</Label>\r\n                <Input\r\n                  id=\"relationship\"\r\n                  value={formData.relationship}\r\n                  onChange={(e) => handleInputChange(\"relationship\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"contactInfo\">Contact Information</Label>\r\n                <Input\r\n                  id=\"contactInfo\"\r\n                  value={formData.contactInfo}\r\n                  onChange={(e) => handleInputChange(\"contactInfo\", e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Checkbox\r\n                  id=\"isMainCaregiver\"\r\n                  checked={formData.isMainCaregiver}\r\n                  onCheckedChange={(checked) => \r\n                    handleInputChange(\"isMainCaregiver\", checked as boolean)\r\n                  }\r\n                />\r\n                <Label htmlFor=\"isMainCaregiver\">Primary Caregiver</Label>\r\n              </div>\r\n              <Button type=\"submit\" className=\"w-full\">Add Member</Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n\r\n      {state.familyMembers.length === 0 ? (\r\n        <Card>\r\n          <CardContent className=\"p-6 text-center\">\r\n            <p className=\"text-gray-600\">No family members added yet.</p>\r\n            <p className=\"text-sm text-gray-500 mt-2\">\r\n              Click \"Add Family Member\" to start building the support network.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          {state.familyMembers.map((member) => (\r\n            <Card key={member.id} className={member.isMainCaregiver ? \"border-l-4 border-l-blue-500\" : \"\"}>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex justify-between items-center\">\r\n                  <span>{member.name}</span>\r\n                  {member.isMainCaregiver && (\r\n                    <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\r\n                      Primary Caregiver\r\n                    </span>\r\n                  )}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Relationship</p>\r\n                    <p className=\"font-medium\">{member.relationship}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Contact</p>\r\n                    <p className=\"font-medium\">{member.contactInfo}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 mb-2\">Support Needs</p>\r\n                    <div className=\"space-y-2\">\r\n                      {supportNeeds.map((need, index) => (\r\n                        <div key={need} className=\"flex items-center space-x-2\">\r\n                          <Checkbox\r\n                            id={`${member.id}-${need}`}\r\n                            checked={member.needsSupport[index]}\r\n                            onCheckedChange={(checked) => \r\n                              updateNeedStatus(member.id, index, checked as boolean)\r\n                            }\r\n                          />\r\n                          <Label htmlFor={`${member.id}-${need}`}>{need}</Label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {state.familyMembers.some(member => member.needsSupport.includes(true)) && (\r\n        <Card className=\"bg-amber-50 border-amber-200\">\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-start gap-3\">\r\n              <AlertTriangle className=\"w-5 h-5 text-amber-600 flex-shrink-0 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-semibold text-amber-800\">Support Needs Identified</h4>\r\n                <p className=\"text-sm text-amber-700 mt-1\">\r\n                  One or more family members require support. Consider referral to social work or support services.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FamilySupport;\r\n","import React from \"react\";\r\nimport { usePalliativeCare } from \"../../context/PalliativeContext\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { FilePlus, Download, CheckCircle, Clock, XCircle } from \"lucide-react\";\r\nimport type { AdvanceDirective } from \"../../context/PalliativeContext\";\r\n\r\nconst directiveTypes = ['DNR', 'LivingWill', 'PowerOfAttorney', 'Other'] as const;\r\n\r\nconst statusColors = {\r\n  completed: \"text-green-600\",\r\n  pending: \"text-amber-600\",\r\n  notStarted: \"text-gray-600\"\r\n};\r\n\r\nconst statusIcons = {\r\n  completed: CheckCircle,\r\n  pending: Clock,\r\n  notStarted: XCircle\r\n};\r\n\r\nconst AdvanceDirectives = () => {\r\n  const { state, updateAdvanceDirective } = usePalliativeCare();\r\n  const [newDirective, setNewDirective] = React.useState<Omit<AdvanceDirective, \"id\">>({\r\n    type: \"DNR\",\r\n    status: \"notStarted\",\r\n    details: \"\",\r\n    documents: []\r\n  });\r\n\r\n  const handleDirectiveSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const directive: AdvanceDirective = {\r\n      id: crypto.randomUUID(),\r\n      ...newDirective,\r\n      dateCompleted: newDirective.status === \"completed\" ? new Date().toISOString() : undefined\r\n    };\r\n    updateAdvanceDirective(directive);\r\n    setNewDirective({\r\n      type: \"DNR\",\r\n      status: \"notStarted\",\r\n      details: \"\",\r\n      documents: []\r\n    });\r\n  };\r\n\r\n  const exportToPDF = async () => {\r\n    // For now, we'll create a simple JSON export as a placeholder\r\n    // In a production environment, this would use react-pdf to generate a proper PDF\r\n    const exportData = {\r\n      patientDirectives: state.advanceDirectives,\r\n      exportDate: new Date().toISOString(),\r\n      facilityInfo: \"OncoVista Medical Center\"\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"advance-directives.json\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const getStatusIcon = (status: AdvanceDirective[\"status\"]) => {\r\n    const Icon = statusIcons[status];\r\n    return <Icon className={`w-5 h-5 ${statusColors[status]}`} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold\">Advance Directives</h2>\r\n        <Button onClick={exportToPDF} variant=\"outline\">\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Export Documents\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>New Directive</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleDirectiveSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <Label>Type of Directive</Label>\r\n              <RadioGroup\r\n                value={newDirective.type}\r\n                onValueChange={(value: AdvanceDirective[\"type\"]) => \r\n                  setNewDirective(prev => ({ ...prev, type: value }))\r\n                }\r\n                className=\"grid grid-cols-2 gap-4 mt-2\"\r\n              >\r\n                {directiveTypes.map(type => (\r\n                  <div key={type} className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value={type} id={type} />\r\n                    <Label htmlFor={type}>{type.replace(/([A-Z])/g, ' $1').trim()}</Label>\r\n                  </div>\r\n                ))}\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Status</Label>\r\n              <RadioGroup\r\n                value={newDirective.status}\r\n                onValueChange={(value: AdvanceDirective[\"status\"]) =>\r\n                  setNewDirective(prev => ({ ...prev, status: value }))\r\n                }\r\n                className=\"flex gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"completed\" id=\"completed\" />\r\n                  <Label htmlFor=\"completed\">Completed</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"pending\" id=\"pending\" />\r\n                  <Label htmlFor=\"pending\">Pending</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"notStarted\" id=\"notStarted\" />\r\n                  <Label htmlFor=\"notStarted\">Not Started</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Details</Label>\r\n              <Textarea\r\n                value={newDirective.details}\r\n                onChange={(e) => \r\n                  setNewDirective(prev => ({ ...prev, details: e.target.value }))\r\n                }\r\n                className=\"mt-2\"\r\n                placeholder=\"Enter any relevant details or notes...\"\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\">\r\n              <FilePlus className=\"w-4 h-4 mr-2\" />\r\n              Add Directive\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2\">\r\n        {state.advanceDirectives.map((directive) => (\r\n          <Card key={directive.id}>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex justify-between items-center\">\r\n                <span>{directive.type.replace(/([A-Z])/g, ' $1').trim()}</span>\r\n                {getStatusIcon(directive.status)}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Status</p>\r\n                  <p className=\"font-medium capitalize\">{directive.status}</p>\r\n                </div>\r\n                {directive.dateCompleted && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Completed</p>\r\n                    <p className=\"font-medium\">\r\n                      {new Date(directive.dateCompleted).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {directive.details && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Details</p>\r\n                    <p className=\"text-sm mt-1\">{directive.details}</p>\r\n                  </div>\r\n                )}\r\n                {directive.documents.length > 0 && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 mb-2\">Documents</p>\r\n                    <ul className=\"list-disc list-inside text-sm\">\r\n                      {directive.documents.map((doc, index) => (\r\n                        <li key={index}>{doc}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceDirectives;\r\n","import { format, formatDistance, isValid } from 'date-fns';\r\n\r\nexport const getRelativeTime = (date: string | Date) => {\r\n  const parsedDate = typeof date === 'string' ? new Date(date) : date;\r\n  return isValid(parsedDate)\r\n    ? formatDistance(parsedDate, new Date(), { addSuffix: true })\r\n    : 'Invalid Date';\r\n};\r\n\r\n/**\r\n * Generates a unique ID with an optional prefix\r\n */\r\nexport const generateId = (prefix: string = ''): string => {\r\n  return `${prefix}${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\nexport const calculateSeverityLevel = (score: number): 'mild' | 'moderate' | 'severe' => {\r\n  if (score <= 3) return 'mild';\r\n  if (score <= 6) return 'moderate';\r\n  return 'severe';\r\n};\r\n\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timeout: NodeJS.Timeout;\r\n\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n};\r\n\r\n/**\r\n * Groups assessments by date for timeline view\r\n */\r\nexport const groupByDate = <T extends { date: string }>(\r\n  items: T[]\r\n): Record<string, T[]> => {\r\n  return items.reduce((groups, item) => {\r\n    const date = new Date(item.date).toISOString().split('T')[0];\r\n    return {\r\n      ...groups,\r\n      [date]: [...(groups[date] || []), item]\r\n    };\r\n  }, {} as Record<string, T[]>);\r\n};\r\n\r\n/**\r\n * Sorts an array of objects by date\r\n * @param items Array of objects with a date property\r\n * @param direction 'asc' or 'desc'\r\n */\r\nexport function sortByDate<T extends { date: string }>(\r\n  items: T[],\r\n  direction: 'asc' | 'desc' = 'desc'\r\n): T[] {\r\n  return [...items].sort((a, b) => {\r\n    const dateA = new Date(a.date).getTime();\r\n    const dateB = new Date(b.date).getTime();\r\n    return direction === 'asc' ? dateA - dateB : dateB - dateA;\r\n  });\r\n}\r\n\r\nexport const getInitials = (name: string): string => {\r\n  return name\r\n    .split(' ')\r\n    .map(part => part[0])\r\n    .join('')\r\n    .toUpperCase()\r\n    .slice(0, 2);\r\n};\r\n\r\nexport const truncateText = (text: string, maxLength: number): string => {\r\n  if (text.length <= maxLength) return text;\r\n  return text.slice(0, maxLength) + '...';\r\n};\r\n\r\nexport const downloadAsJson = (data: any, filename: string) => {\r\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nexport const formatFileSize = (bytes: number): string => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\r\n};","import { useState, useEffect } from 'react';\r\nimport { generateId } from '../../../utils/palliativeUtils';\r\n\r\nexport type AssessmentType = 'distress' | 'anxiety' | 'depression' | 'social';\r\n\r\nexport interface Assessment {\r\n  id: string;\r\n  type: AssessmentType;\r\n  score: number;\r\n  notes: string;\r\n  date: string;\r\n}\r\n\r\nconst STORAGE_KEY = 'palliative-psychosocial-assessments';\r\n\r\nexport const usePsychosocialData = () => {\r\n  const [assessments, setAssessments] = useState<Assessment[]>(() => {\r\n    const stored = localStorage.getItem(STORAGE_KEY);\r\n    return stored ? JSON.parse(stored) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(assessments));\r\n  }, [assessments]);\r\n\r\n  const addAssessment = (type: AssessmentType, score: number, notes: string) => {\r\n    const newAssessment: Assessment = {\r\n      id: generateId(),\r\n      type,\r\n      score,\r\n      notes,\r\n      date: new Date().toISOString(),\r\n    };\r\n    setAssessments(prev => [...prev, newAssessment]);\r\n  };\r\n\r\n  const deleteAssessment = (id: string) => {\r\n    setAssessments(prev => prev.filter(assessment => assessment.id !== id));\r\n  };\r\n\r\n  const updateAssessment = (id: string, updates: Partial<Assessment>) => {\r\n    setAssessments(prev => prev.map(assessment => \r\n      assessment.id === id ? { ...assessment, ...updates } : assessment\r\n    ));\r\n  };\r\n\r\n  const getAssessmentsByType = (type: AssessmentType) => {\r\n    return assessments.filter(assessment => assessment.type === type);\r\n  };\r\n\r\n  return {\r\n    assessments,\r\n    addAssessment,\r\n    deleteAssessment,\r\n    updateAssessment,\r\n    getAssessmentsByType,\r\n  };\r\n};","import { format, isValid } from 'date-fns';\r\n\r\n/**\r\n * Formats a date string to a readable format\r\n */\r\nexport const formatDate = (date: string | Date): string => {\r\n  const parsedDate = typeof date === 'string' ? new Date(date) : date;\r\n  return isValid(parsedDate) \r\n    ? format(parsedDate, 'PPP')\r\n    : 'Invalid Date';\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Brain, HeartHandshake } from 'lucide-react';\r\nimport { Area, AreaChart, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport { format, subDays } from 'date-fns';\r\nimport { Assessment } from '../hooks/usePsychosocialData';\r\nimport { sortByDate } from '../../../utils/palliativeUtils';\r\n\r\ninterface AssessmentTrendsProps {\r\n  assessments: Assessment[];\r\n  type: Assessment['type'];\r\n}\r\n\r\nconst AssessmentTrends: React.FC<AssessmentTrendsProps> = ({ assessments, type }) => {\r\n  const chartData = useMemo(() => {\r\n    const typeAssessments = assessments.filter(a => a.type === type);\r\n    const sortedAssessments = sortByDate(typeAssessments, 'asc');\r\n    \r\n    // Ensure we have data points for the last 30 days\r\n    const today = new Date();\r\n    const data = Array.from({ length: 30 }, (_, i) => {\r\n      const date = subDays(today, 29 - i);\r\n      const dateStr = format(date, 'yyyy-MM-dd');\r\n      const assessment = sortedAssessments.find(a => \r\n        format(new Date(a.date), 'yyyy-MM-dd') === dateStr\r\n      );\r\n\r\n      return {\r\n        date: dateStr,\r\n        score: assessment?.score ?? null\r\n      };\r\n    });\r\n\r\n    return data;\r\n  }, [assessments, type]);\r\n\r\n  const assessmentTitle = {\r\n    distress: \"Distress Level\",\r\n    anxiety: \"Anxiety Level\",\r\n    depression: \"Depression Level\",\r\n    social: \"Social Support\"\r\n  }[type];\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'distress':\r\n      case 'anxiety':\r\n      case 'depression':\r\n        return Brain;\r\n      case 'social':\r\n        return HeartHandshake;\r\n      default:\r\n        return Brain;\r\n    }\r\n  };\r\n\r\n  const Icon = getIcon();\r\n  const latestScore = chartData.filter(d => d.score !== null).slice(-1)[0]?.score;\r\n  const averageScore = useMemo(() => {\r\n    const scores = chartData.filter(d => d.score !== null).map(d => d.score!);\r\n    return scores.length ? (scores.reduce((a, b) => a + b, 0) / scores.length).toFixed(1) : 'N/A';\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n        <CardTitle className=\"text-sm font-medium\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Icon className=\"h-4 w-4\" />\r\n            {assessmentTitle}\r\n          </div>\r\n        </CardTitle>\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex flex-col items-end\">\r\n            <span className=\"text-xs text-muted-foreground\">Latest</span>\r\n            <span className=\"font-bold\">{latestScore ?? 'N/A'}</span>\r\n          </div>\r\n          <div className=\"flex flex-col items-end\">\r\n            <span className=\"text-xs text-muted-foreground\">Average</span>\r\n            <span className=\"font-bold\">{averageScore}</span>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[200px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <AreaChart data={chartData} margin={{ top: 5, right: 5, bottom: 5, left: 5 }}>\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"score\"\r\n                stroke=\"#8b5cf6\"\r\n                fill=\"#8b5cf680\"\r\n                strokeWidth={2}\r\n                dot={(props: any) => {\r\n                  if (props.payload.score === null) return null;\r\n                  return (\r\n                    <circle\r\n                      cx={props.cx}\r\n                      cy={props.cy}\r\n                      r={4}\r\n                      fill=\"#8b5cf6\"\r\n                      stroke=\"#fff\"\r\n                      strokeWidth={2}\r\n                      className=\"recharts-dot\"\r\n                    />\r\n                  ) as any;\r\n                }}\r\n              />\r\n              <XAxis\r\n                dataKey=\"date\"\r\n                tickFormatter={(date) => format(new Date(date), 'MMM d')}\r\n                fontSize={12}\r\n                tickMargin={8}\r\n              />\r\n              <YAxis\r\n                domain={[0, 10]}\r\n                ticks={[0, 2, 4, 6, 8, 10]}\r\n                fontSize={12}\r\n                tickMargin={8}\r\n              />\r\n              <Tooltip\r\n                contentStyle={{ background: '#fff', border: '1px solid #e2e8f0', borderRadius: '6px' }}\r\n                labelFormatter={(date) => format(new Date(date), 'MMM d, yyyy')}\r\n                formatter={(value: any) => [value || 'No data', assessmentTitle]}\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AssessmentTrends;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Brain, HeartHandshake, Plus } from 'lucide-react';\r\nimport { usePsychosocialData, AssessmentType } from './hooks/usePsychosocialData';\r\nimport { sortByDate } from '../../utils/palliativeUtils';\r\nimport { formatDate } from '@/utils/formatDate';\r\nimport AssessmentTrends from './components/AssessmentTrends';\r\n\r\nconst assessmentTypes: { type: AssessmentType; label: string; icon: React.FC }[] = [\r\n  { type: 'distress', label: 'Distress', icon: Brain },\r\n  { type: 'anxiety', label: 'Anxiety', icon: Brain },\r\n  { type: 'depression', label: 'Depression', icon: Brain },\r\n  { type: 'social', label: 'Social Support', icon: HeartHandshake },\r\n];\r\n\r\nconst NewAssessmentDialog: React.FC<{\r\n  onSubmit: (type: AssessmentType, score: number, notes: string) => void;\r\n}> = ({ onSubmit }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState<AssessmentType>('distress');\r\n  const [score, setScore] = useState(5);\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSubmit(type, score, notes);\r\n    setOpen(false);\r\n    setScore(5);\r\n    setNotes('');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          New Assessment\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>New Assessment</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Assessment Type</label>\r\n            <Tabs value={type} onValueChange={(value) => setType(value as AssessmentType)}>\r\n              <TabsList className=\"grid grid-cols-2 gap-2\">\r\n                {assessmentTypes.map(({ type, label }) => (\r\n                  <TabsTrigger key={type} value={type} className=\"w-full\">\r\n                    {label}\r\n                  </TabsTrigger>\r\n                ))}\r\n              </TabsList>\r\n            </Tabs>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Score (0-10)</label>\r\n            <div className=\"flex items-center gap-4\">\r\n              <Slider\r\n                value={[score]}\r\n                onValueChange={([value]) => setScore(value)}\r\n                max={10}\r\n                step={1}\r\n                className=\"flex-1\"\r\n              />\r\n              <span className=\"font-medium\">{score}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Notes</label>\r\n            <Textarea\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n              placeholder=\"Add any relevant notes...\"\r\n              className=\"h-24\"\r\n            />\r\n          </div>\r\n\r\n          <Button type=\"submit\" className=\"w-full\">\r\n            Save Assessment\r\n          </Button>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst PsychosocialCare: React.FC = () => {\r\n  const { assessments, addAssessment } = usePsychosocialData();\r\n  \r\n  const handleNewAssessment = (type: AssessmentType, score: number, notes: string) => {\r\n    addAssessment(type, score, notes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-2xl font-bold\">Psychosocial Assessment</h2>\r\n        <NewAssessmentDialog onSubmit={handleNewAssessment} />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {assessmentTypes.map(({ type }) => (\r\n          <AssessmentTrends\r\n            key={type}\r\n            assessments={assessments}\r\n            type={type}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Assessments</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            {sortByDate(assessments).slice(0, 5).map((assessment) => {\r\n              const { type, score, notes, date, id } = assessment;\r\n              const assessmentType = assessmentTypes.find(t => t.type === type);\r\n              const Icon = assessmentType?.icon || Brain;\r\n\r\n              return (\r\n                <div key={id} className=\"flex items-start gap-4 p-4 rounded-lg border\">\r\n                  <Icon className=\"w-5 h-5 mt-1 text-muted-foreground\" />\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center justify-between gap-2\">\r\n                      <p className=\"font-medium\">{assessmentType?.label}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {formatDate(date)}\r\n                      </p>\r\n                    </div>\r\n                    <p className=\"mt-1\">Score: {score}/10</p>\r\n                    {notes && (\r\n                      <p className=\"mt-2 text-sm text-muted-foreground\">{notes}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PsychosocialCare;"],"file":"assets/module-palliative-D6Lec8M4.js"}