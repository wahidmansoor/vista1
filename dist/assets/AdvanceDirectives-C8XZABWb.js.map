{"version":3,"file":"AdvanceDirectives-C8XZABWb.js","sources":["../../src/modules/palliative/sections/end_of_life/AdvanceDirectives.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { usePalliativeCare } from \"../../context/PalliativeContext\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { FilePlus, Download, CheckCircle, Clock, XCircle } from \"lucide-react\";\r\nimport type { AdvanceDirective } from \"../../context/PalliativeContext\";\r\n\r\nconst directiveTypes = ['DNR', 'LivingWill', 'PowerOfAttorney', 'Other'] as const;\r\n\r\nconst statusColors = {\r\n  completed: \"text-green-600\",\r\n  pending: \"text-amber-600\",\r\n  notStarted: \"text-gray-600\"\r\n};\r\n\r\nconst statusIcons = {\r\n  completed: CheckCircle,\r\n  pending: Clock,\r\n  notStarted: XCircle\r\n};\r\n\r\nconst AdvanceDirectives = () => {\r\n  const { state, updateAdvanceDirective } = usePalliativeCare();\r\n  const [newDirective, setNewDirective] = React.useState<Omit<AdvanceDirective, \"id\">>({\r\n    type: \"DNR\",\r\n    status: \"notStarted\",\r\n    details: \"\",\r\n    documents: []\r\n  });\r\n\r\n  const handleDirectiveSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const directive: AdvanceDirective = {\r\n      id: crypto.randomUUID(),\r\n      ...newDirective,\r\n      dateCompleted: newDirective.status === \"completed\" ? new Date().toISOString() : undefined\r\n    };\r\n    updateAdvanceDirective(directive);\r\n    setNewDirective({\r\n      type: \"DNR\",\r\n      status: \"notStarted\",\r\n      details: \"\",\r\n      documents: []\r\n    });\r\n  };\r\n\r\n  const exportToPDF = async () => {\r\n    // For now, we'll create a simple JSON export as a placeholder\r\n    // In a production environment, this would use react-pdf to generate a proper PDF\r\n    const exportData = {\r\n      patientDirectives: state.advanceDirectives,\r\n      exportDate: new Date().toISOString(),\r\n      facilityInfo: \"OncoVista Medical Center\"\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"advance-directives.json\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const getStatusIcon = (status: AdvanceDirective[\"status\"]) => {\r\n    const Icon = statusIcons[status];\r\n    return <Icon className={`w-5 h-5 ${statusColors[status]}`} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold\">Advance Directives</h2>\r\n        <Button onClick={exportToPDF} variant=\"outline\">\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Export Documents\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>New Directive</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleDirectiveSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <Label>Type of Directive</Label>\r\n              <RadioGroup\r\n                value={newDirective.type}\r\n                onValueChange={(value: AdvanceDirective[\"type\"]) => \r\n                  setNewDirective(prev => ({ ...prev, type: value }))\r\n                }\r\n                className=\"grid grid-cols-2 gap-4 mt-2\"\r\n              >\r\n                {directiveTypes.map(type => (\r\n                  <div key={type} className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value={type} id={type} />\r\n                    <Label htmlFor={type}>{type.replace(/([A-Z])/g, ' $1').trim()}</Label>\r\n                  </div>\r\n                ))}\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Status</Label>\r\n              <RadioGroup\r\n                value={newDirective.status}\r\n                onValueChange={(value: AdvanceDirective[\"status\"]) =>\r\n                  setNewDirective(prev => ({ ...prev, status: value }))\r\n                }\r\n                className=\"flex gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"completed\" id=\"completed\" />\r\n                  <Label htmlFor=\"completed\">Completed</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"pending\" id=\"pending\" />\r\n                  <Label htmlFor=\"pending\">Pending</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"notStarted\" id=\"notStarted\" />\r\n                  <Label htmlFor=\"notStarted\">Not Started</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Details</Label>\r\n              <Textarea\r\n                value={newDirective.details}\r\n                onChange={(e) => \r\n                  setNewDirective(prev => ({ ...prev, details: e.target.value }))\r\n                }\r\n                className=\"mt-2\"\r\n                placeholder=\"Enter any relevant details or notes...\"\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\">\r\n              <FilePlus className=\"w-4 h-4 mr-2\" />\r\n              Add Directive\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2\">\r\n        {state.advanceDirectives.map((directive) => (\r\n          <Card key={directive.id}>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex justify-between items-center\">\r\n                <span>{directive.type.replace(/([A-Z])/g, ' $1').trim()}</span>\r\n                {getStatusIcon(directive.status)}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Status</p>\r\n                  <p className=\"font-medium capitalize\">{directive.status}</p>\r\n                </div>\r\n                {directive.dateCompleted && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Completed</p>\r\n                    <p className=\"font-medium\">\r\n                      {new Date(directive.dateCompleted).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {directive.details && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Details</p>\r\n                    <p className=\"text-sm mt-1\">{directive.details}</p>\r\n                  </div>\r\n                )}\r\n                {directive.documents.length > 0 && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 mb-2\">Documents</p>\r\n                    <ul className=\"list-disc list-inside text-sm\">\r\n                      {directive.documents.map((doc, index) => (\r\n                        <li key={index}>{doc}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceDirectives;\r\n"],"names":["directiveTypes","statusColors","completed","pending","notStarted","statusIcons","CheckCircle","Clock","XCircle","AdvanceDirectives","state","updateAdvanceDirective","usePalliativeCare","newDirective","setNewDirective","React","useState","type","status","details","documents","getStatusIcon","Icon","className","fileName","lineNumber","columnNumber","this","jsxDEV","children","Button","onClick","async","exportData","patientDirectives","advanceDirectives","exportDate","Date","toISOString","facilityInfo","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","variant","Download","Card","CardHeader","CardTitle","CardContent","onSubmit","e","preventDefault","directive","id","crypto","randomUUID","dateCompleted","Label","jsxDevRuntimeExports","RadioGroup","value","onValueChange","prev","map","RadioGroupItem","htmlFor","replace","trim","Textarea","onChange","target","placeholder","FilePlus","toLocaleDateString","length","doc","index"],"mappings":"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"}