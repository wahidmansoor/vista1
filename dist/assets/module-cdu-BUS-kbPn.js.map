{"version":3,"file":"module-cdu-BUS-kbPn.js","sources":["../../src/lib/utils.ts","../../src/utils/environment.ts","../../src/utils/log.ts","../../src/components/ErrorBoundary.tsx","../../src/components/ui/button.tsx","../../src/components/ui/card.tsx","../../src/components/ui/badge.tsx","../../src/components/ui/tabs.tsx","../../src/components/ui/dialog.tsx","../../src/components/ui/use-toast.ts","../../src/lib/supabaseClient.ts","../../src/modules/cdu/treatmentProtocols/UnifiedProtocolCard.tsx","../../src/services/protocols.ts","../../src/modules/cdu/treatmentProtocols/ProtocolErrorState.tsx","../../src/components/ui/skeleton.tsx","../../src/modules/cdu/treatmentProtocols/ProtocolLoadingSkeleton.tsx","../../src/modules/cdu/treatmentProtocols/TreatmentProtocols.tsx","../../src/modules/cdu/treatmentProtocols/MonitoringTab.tsx","../../src/modules/cdu/treatmentProtocols/TreatmentTab.tsx","../../src/modules/cdu/treatmentProtocols/TestsSectionTab.tsx","../../src/modules/cdu/treatmentProtocols/DoseModificationsTab.tsx","../../src/modules/cdu/treatmentProtocols/SupportiveCareTab.tsx","../../src/modules/cdu/treatmentProtocols/components/ProtocolDetailsDialog.tsx","../../src/modules/cdu/treatmentProtocols/ProtocolDetailPage.tsx","../../src/modules/cdu/treatmentProtocols/ProtocolDetailPageContainer.tsx","../../src/services/toxicities.ts","../../src/components/ui/AlertBanner.tsx","../../src/modules/cdu/toxicity/Toxicity.tsx","../../src/modules/cdu/data/treatmentProtocolsData.ts","../../src/modules/cdu/sections/DiseaseProgressTracker.tsx","../../src/components/ui/scroll-area.tsx","../../src/modules/cdu/medications/MedicationDetailModal.tsx","../../src/utils/audioFeedback.ts","../../src/hooks/useDebounce.ts","../../src/components/MedicationErrorBoundary.tsx","../../src/modules/cdu/medications/MedicationsView.tsx","../../src/modules/cdu/CDU.tsx","../../src/components/ui/toggle.tsx","../../src/modules/cdu/components/ProtocolDashboard.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n \r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","/**\r\n * Utility functions for environment-specific code\r\n */\r\n\r\nexport const isServer = typeof window === 'undefined';\r\nexport const isBrowser = !isServer;\r\n\r\nexport function getEnvVar(key: string): string | undefined {\r\n  if (isBrowser) {\r\n    return import.meta.env[`VITE_${key}`];\r\n  }\r\n  return process.env[`VITE_${key}`];\r\n}\r\n\r\nexport function validateEnvVars(requiredVars: string[]): void {\r\n  const missing = requiredVars.filter(key => !getEnvVar(key));\r\n  if (missing.length > 0) {\r\n    console.warn(`⚠️ Missing required environment variables: ${missing.join(', ')}`);\r\n  }\r\n}","import LogRocket from 'logrocket';\r\nimport { getEnvVar } from './environment';\r\n\r\ninterface ErrorLoggingOptions {\r\n  moduleName?: string;\r\n  retryCount?: number;\r\n  extra?: Record<string, unknown>;\r\n}\r\n\r\n/**\r\n * Centralized error logging function that handles sending errors to multiple destinations\r\n * Currently supports LogRocket and console.error, can be extended for other services\r\n */\r\nexport function logError(\r\n  error: Error,\r\n  errorInfo?: React.ErrorInfo,\r\n  options: ErrorLoggingOptions = {}\r\n) {\r\n  const { moduleName = 'global', retryCount = 0, extra = {} } = options;\r\n\r\n  // Development logging with detailed information\r\n  if (getEnvVar('NODE_ENV') === 'development') {\r\n    console.group('Error logged by logError utility:');\r\n    console.error('Error:', error);\r\n    if (errorInfo) {\r\n      console.error('Component Stack:', errorInfo.componentStack);\r\n    }\r\n    console.error('Module:', moduleName);\r\n    console.error('Retry Count:', retryCount);\r\n    if (Object.keys(extra).length > 0) {\r\n      console.error('Extra Information:', extra);\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  // Send to LogRocket with all available context\r\n  LogRocket.captureException(error, {\r\n    tags: {\r\n      module: moduleName,\r\n      errorName: error.name,\r\n      errorType: error.constructor.name,\r\n      retryCount: retryCount.toString(),\r\n    },\r\n    extra: {\r\n      componentStack: errorInfo?.componentStack || 'No component stack available',\r\n      ...extra\r\n    },\r\n  });\r\n\r\n  // Here we can add more logging services as needed:\r\n  // - Sentry.captureException(error, { extra: { moduleName, retryCount, ...extra } });\r\n  // - Send to custom error tracking endpoint\r\n  // - Log to analytics service\r\n}\r\n","import React, { Component, ReactNode } from 'react';\r\nimport { AlertOctagon, ArrowLeft, RefreshCcw, ChevronDown, LifeBuoy } from 'lucide-react';\r\nimport { getEnvVar } from '@/utils/environment';\r\nimport { logError } from '@/utils/log';\r\nimport PropTypes from 'prop-types';\r\nimport LogRocket from 'logrocket';\r\nimport { Button, Typography, Box, Paper, Link as MuiLink } from '@mui/material';\r\n\r\n// ErrorBoundary: A React component to catch and handle errors in its child components.\r\n// Props:\r\n// - children: The child components wrapped by the ErrorBoundary.\r\n// - moduleName: Optional name of the module for error tracking.\r\n// - fallback: Optional fallback UI to display when an error occurs.\r\n//\r\n// State:\r\n// - hasError: Indicates if an error has been caught.\r\n// - error: The error object caught by the boundary.\r\n// - errorInfo: Additional error information, such as the component stack.\r\n// - isRetrying: Indicates if the user is attempting to retry after an error.\r\n// - isDetailsOpen: Toggles the visibility of error details in the UI.\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n  moduleName?: string;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n  errorInfo: React.ErrorInfo | null;\r\n  retryCount: number;\r\n  resetKey: number;\r\n  isDetailsOpen: boolean;\r\n  isRetrying: boolean;\r\n}\r\n\r\nlet errorCount = 0;\r\nconst ERROR_RATE_THRESHOLD = 5;\r\n\r\nfunction digestError(error: Error, errorInfo: React.ErrorInfo) {\r\n  return {\r\n    message: error?.message,\r\n    name: error?.name,\r\n    stack: error?.stack,\r\n    componentStack: errorInfo?.componentStack,\r\n  };\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, ErrorBoundaryState> {\r\n  private _recoveryTimeout?: ReturnType<typeof setTimeout>;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      retryCount: 0,\r\n      resetKey: 0,\r\n      isDetailsOpen: false,\r\n      isRetrying: false,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    moduleName: PropTypes.string,\r\n    fallback: PropTypes.node,\r\n  };\r\n\r\n  // Methods:\r\n  // - getDerivedStateFromError: Updates state when an error is caught.\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  // - componentDidCatch: Logs the error and updates state with error details.\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    this.setState({ error, errorInfo });\r\n\r\n    logError(error, errorInfo, {\r\n      moduleName: this.props.moduleName,\r\n      retryCount: this.state.retryCount,\r\n    });\r\n    // Error digestion for LogRocket\r\n    if (typeof LogRocket !== 'undefined' && LogRocket?.error) {\r\n      LogRocket.error('ErrorBoundary', digestError(error, errorInfo));\r\n    }\r\n    // Error rate monitoring\r\n    errorCount++;\r\n    if (errorCount >= ERROR_RATE_THRESHOLD && typeof LogRocket !== 'undefined' && LogRocket?.track) {\r\n      LogRocket.track('error-rate-threshold', { count: errorCount });\r\n    }\r\n  }\r\n\r\n  // - handleReset: Resets the error state to allow retrying.\r\n  handleReset = () => {\r\n    this.setState((prevState) => ({\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      retryCount: prevState.retryCount + 1,\r\n      resetKey: prevState.resetKey + 1,\r\n      isDetailsOpen: false,\r\n      isRetrying: true,\r\n    }));\r\n  };\r\n\r\n  // - handleNavigateHome: Redirects the user to the home page.\r\n  handleNavigateHome = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  // - handleToggleDetails: Toggles the visibility of error details in the UI.\r\n  handleToggleDetails = () => {\r\n    this.setState((prev) => ({\r\n      isDetailsOpen: !prev.isDetailsOpen,\r\n    }));\r\n  };\r\n\r\n  // - renderErrorUI: Renders the error UI with retry and home navigation options.\r\n  renderErrorUI = () => {\r\n    return (\r\n      <Box position=\"fixed\" top={0} left={0} width=\"100vw\" height=\"100vh\" zIndex={1300} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" p={4} bgcolor=\"rgba(255,255,255,0.8)\" style={{backdropFilter: 'blur(4px)'}}>\r\n        <Paper elevation={24} sx={{ maxWidth: 600, width: '100%', p: 6, borderRadius: 4, border: 1, borderColor: 'grey.100', bgcolor: 'background.paper' }}>\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gap={3}>\r\n            <Box width={80} height={80} mb={2} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" borderRadius=\"50%\" bgcolor=\"error.light\">\r\n              <AlertOctagon className=\"w-10 h-10\" color=\"#d32f2f\" />\r\n            </Box>\r\n            <Typography variant=\"h4\" fontWeight={700} color=\"text.primary\" mb={2} align=\"center\">\r\n              {this.props.moduleName ? `Error in ${this.props.moduleName}` : 'Something went wrong'}\r\n            </Typography>\r\n            <Typography color=\"text.secondary\" mb={3} align=\"center\">\r\n              We apologize for the inconvenience. Our team has been notified and is working to resolve this issue.\r\n            </Typography>\r\n            {this.state.error && (\r\n              <details open={this.state.isDetailsOpen} onToggle={this.handleToggleDetails} style={{ width: '100%', marginBottom: 24 }}>\r\n                <summary style={{ cursor: 'pointer', fontWeight: 500, color: '#616161' }}>\r\n                  <ChevronDown className={`w-4 h-4`} style={{ verticalAlign: 'middle', marginRight: 8, transition: 'transform 0.2s', transform: this.state.isDetailsOpen ? 'rotate(180deg)' : 'none' }} />\r\n                  Technical Details\r\n                </summary>\r\n                <Box mt={2} color=\"text.secondary\" data-testid=\"error-details-box\">\r\n                  <Typography variant=\"subtitle2\">Error:</Typography>\r\n                  <pre style={{ whiteSpace: 'pre-wrap', marginBottom: 16, paddingLeft: 16, borderLeft: '2px solid #f44336' }}>{this.state.error && this.state.error.toString()}</pre>\r\n                  {this.state.errorInfo && (\r\n                    <>\r\n                      <Typography variant=\"subtitle2\">Component Stack:</Typography>\r\n                      <pre style={{ whiteSpace: 'pre-wrap', paddingLeft: 16, borderLeft: '2px solid #90caf9' }}>{this.state.errorInfo.componentStack}</pre>\r\n                    </>\r\n                  )}\r\n                </Box>\r\n              </details>\r\n            )}\r\n            <Box display=\"flex\" gap={2} mt={2}>\r\n              <button type=\"button\" onClick={this.handleNavigateHome} className=\"MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-colorPrimary\">\r\n                <span className=\"MuiButton-icon MuiButton-startIcon MuiButton-iconSizeMedium\"><svg className=\"lucide lucide-arrow-left\" fill=\"none\" height=\"24\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"m12 19-7-7 7-7\"/><path d=\"M19 12H5\"/></svg></span>\r\n                Go Home\r\n              </button>\r\n              <button type=\"button\" onClick={this.handleReset} disabled={this.state.isRetrying} className={`MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedError MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorError${this.state.isRetrying ? ' Mui-disabled' : ''}`}>\r\n                <span className=\"MuiButton-icon MuiButton-startIcon MuiButton-iconSizeMedium\">\r\n                  <svg className={`lucide lucide-refresh-ccw${this.state.isRetrying ? ' animate-spin' : ''}`} fill=\"none\" height=\"24\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\"/><path d=\"M3 3v5h5\"/><path d=\"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16\"/><path d=\"M16 16h5v5\"/></svg>\r\n                </span>\r\n                {this.state.isRetrying ? 'Retrying...' : 'Try Again'}\r\n              </button>\r\n            </Box>\r\n            <a className=\"MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineHover\" href=\"mailto:support@oncovista.com\">\r\n              <svg className=\"lucide lucide-life-buoy w-4 h-4\" fill=\"none\" height=\"24\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" width=\"24\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"m4.93 4.93 4.24 4.24\"/><path d=\"m14.83 9.17 4.24-4.24\"/><path d=\"m14.83 14.83 4.24 4.24\"/><path d=\"m9.17 14.83-4.24 4.24\"/><circle cx=\"12\" cy=\"12\" r=\"4\"/></svg>\r\n              Contact technical support\r\n            </a>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: ErrorBoundaryState) {\r\n    // Recovery mechanism: auto-reset error after 10s\r\n    if (this.state.hasError && !prevState.hasError) {\r\n      this._recoveryTimeout = setTimeout(() => {\r\n        if (this.state.hasError) {\r\n          this.handleReset();\r\n        }\r\n      }, 10000);\r\n    }\r\n    if (!this.state.hasError && prevState.hasError && this._recoveryTimeout) {\r\n      clearTimeout(this._recoveryTimeout);\r\n      this._recoveryTimeout = undefined;\r\n    }\r\n    // Reset isRetrying after error is cleared\r\n    if (!this.state.hasError && prevState.hasError && this.state.isRetrying) {\r\n      this.setState({ isRetrying: false });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._recoveryTimeout) {\r\n      clearTimeout(this._recoveryTimeout);\r\n    }\r\n  }\r\n\r\n  // Fix the render method\r\n  render() {\r\n    // If a custom fallback is provided and error, render it\r\n    if (this.state.hasError && this.props.fallback) {\r\n      return this.props.fallback;\r\n    }\r\n    if (this.state.hasError) {\r\n      return this.renderErrorUI();\r\n    }\r\n    // Use resetKey to force remount children after reset\r\n    return <React.Fragment key={this.state.resetKey}>{this.props.children}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n","import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\"inline-flex items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all hover:text-primary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"./toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ninterface Toast extends Omit<ToasterToast, \"id\"> {}\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }","import { createClient, SupabaseClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';\r\nconst supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';\r\n\r\nlet supabaseInstance: SupabaseClient | null = null;\r\n\r\nexport const getSupabase = () => {\r\n  if (!supabaseUrl || !supabaseKey) {\r\n    console.error('❌ Missing Supabase environment variables.');\r\n    throw new Error('Supabase credentials are not configured.');\r\n  }\r\n\r\n  if (!supabaseInstance) {\r\n    try {\r\n      supabaseInstance = createClient(supabaseUrl, supabaseKey, {\r\n        auth: {\r\n          detectSessionInUrl: true,\r\n          persistSession: true,\r\n          autoRefreshToken: true,\r\n        },\r\n      });\r\n      console.info('✅ Supabase client initialized');\r\n    } catch (err) {\r\n      console.error('❌ Failed to create Supabase client:', err);\r\n      throw new Error('Failed to initialize Supabase client');\r\n    }\r\n  }\r\n\r\n  return supabaseInstance;\r\n};\r\n\r\n// For backward compatibility with existing code\r\nexport const supabase = getSupabase();\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardDescription,\r\n} from '@/components/ui/card';\r\n\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { ChevronDown, ChevronUp, AlertTriangle, Pill } from 'lucide-react';\r\n\r\nimport type { Protocol } from '@/types/protocol';\r\n\r\ninterface UnifiedProtocolCardProps {\r\n  protocol: Protocol;\r\n}\r\n\r\nconst UnifiedProtocolCard: React.FC<UnifiedProtocolCardProps> = ({ protocol }) => {\r\n  const [showAllDrugs, setShowAllDrugs] = useState(false);\r\n\r\n  const toggleShowAllDrugs = () => setShowAllDrugs(!showAllDrugs);\r\n\r\n  return (\r\n    <Card className=\"p-6 space-y-6 bg-white dark:bg-gray-900 shadow-md rounded-lg\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-start\">\r\n        <div>\r\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">{protocol.code}</h2>\r\n          <div className=\"flex flex-wrap gap-2 mt-2\">\r\n            <Badge variant=\"outline\" className=\"text-sm font-medium\">\r\n              {protocol.tumour_group}\r\n            </Badge>\r\n            {protocol.treatment_intent && (\r\n              <Badge variant=\"secondary\" className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\r\n                {protocol.treatment_intent}\r\n              </Badge>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Section 1: Summary, Version, Eligibility, Precautions */}\r\n      <div className=\"space-y-4\">\r\n        {protocol.summary && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Summary</h3>\r\n            <p className=\"text-sm text-gray-700 dark:text-gray-300\">{protocol.summary}</p>\r\n          </div>\r\n        )}\r\n        {protocol.notes && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Notes</h3>\r\n            <ul className=\"list-disc list-inside text-sm text-muted-foreground\">\r\n              {protocol.notes.map((note: any, index: number) => (\r\n                <li key={`note-${index}`} className=\"text-sm text-muted-foreground\">\r\n                  {typeof note === \"string\"\r\n                    ? note\r\n                    : `${note.title ?? \"Note\"}: ${note.description ?? \"\"}`}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {protocol.version && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Version</h3>\r\n            <p className=\"text-sm text-gray-700 dark:text-gray-300\">{protocol.version}</p>\r\n          </div>\r\n        )}\r\n            {protocol.eligibility && (\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Eligibility</h3>\r\n                <ul className=\"list-disc list-inside text-sm text-gray-700 dark:text-gray-300\">\r\n                  {protocol.eligibility.inclusion_criteria?.map((item, index) => (\r\n                    <li key={`inclusion-${index}`}>Inclusion: {item}</li>\r\n                  ))}\r\n                  {protocol.eligibility.exclusion_criteria?.map((item, index) => (\r\n                    <li key={`exclusion-${index}`}>Exclusion: {item}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n        {protocol.precautions && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Precautions</h3>\r\n            <ul className=\"list-disc list-inside text-sm text-muted-foreground\">\r\n              {protocol.precautions.map((item, index) => (\r\n                <li key={`precaution-${index}`} className=\"text-sm text-muted-foreground\">{item}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Section 2: Treatment */}\r\n      {protocol.treatment?.drugs && (\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Treatment</h3>\r\n          <ul className=\"space-y-2\">\r\n            {(showAllDrugs ? protocol.treatment.drugs : protocol.treatment.drugs.slice(0, 3)).map((drug, index) => (\r\n              <li key={`drug-${index}`} className=\"flex items-center gap-2 text-sm\">\r\n                <Pill className=\"w-4 h-4 text-indigo-600 dark:text-indigo-400\" />\r\n                <span className=\"font-medium text-gray-800 dark:text-gray-200\">{drug.name}</span>\r\n                {drug.dose && (\r\n                  <span className=\"text-gray-500 dark:text-gray-400 ml-2 text-xs\">\r\n                    {drug.dose}\r\n                    {drug.administration && <span> ({drug.administration})</span>}\r\n                  </span>\r\n                )}\r\n                {drug.special_notes && (\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 dark:text-gray-300 ml-4\">\r\n                    {drug.special_notes.map((note: any, index: number) => (\r\n                      <li key={`drug-special-note-${index}`} className=\"text-sm text-muted-foreground\">\r\n                        {typeof note === \"string\"\r\n                          ? note\r\n                          : `${note.title ?? \"Note\"}: ${note.description ?? \"\"}`}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n                {drug.supportiveCare && (\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 dark:text-gray-300 ml-4\">\r\n                    {drug.supportiveCare.map((care: any, index: number) => (\r\n                      <li key={`drug-supportive-care-${index}`} className=\"text-sm text-muted-foreground\">\r\n                        {typeof care === \"string\"\r\n                          ? care\r\n                          : `${care.title ?? \"Care\"}: ${care.description ?? \"\"}`}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {protocol.treatment.drugs.length > 3 && (\r\n            <button\r\n              onClick={toggleShowAllDrugs}\r\n              className=\"text-sm text-blue-600 dark:text-blue-400 mt-2 flex items-center gap-1\"\r\n            >\r\n              {showAllDrugs ? 'Show Less' : 'Show More'}\r\n              {showAllDrugs ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronDown className=\"w-4 h-4\" />}\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Section 3: Monitoring and Supportive Care */}\r\n      <div className=\"space-y-4\">\r\n        {protocol.monitoring && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Monitoring</h3>\r\n            {protocol.monitoring.baseline && (\r\n              <div>\r\n                <h4 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">Baseline</h4>\r\n                <ul className=\"list-disc list-inside text-sm text-gray-700 dark:text-gray-300\">\r\n                  {protocol.monitoring.baseline.map((item: any, index: number) => (\r\n                    <li key={`baseline-${index}`} className=\"text-sm text-muted-foreground\">\r\n                      {typeof item === \"string\"\r\n                        ? item\r\n                        : `${item.title ?? \"Item\"}: ${item.description ?? \"\"}`}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            {protocol.monitoring.ongoing && (\r\n              <div>\r\n                <h4 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">Ongoing</h4>\r\n                <ul className=\"list-disc list-inside text-sm text-gray-700 dark:text-gray-300\">\r\n                  {protocol.monitoring.ongoing.map((item: any, index: number) => (\r\n                    <li key={`ongoing-${index}`} className=\"text-sm text-muted-foreground\">\r\n                      {typeof item === \"string\"\r\n                        ? item\r\n                        : `${item.title ?? \"Item\"}: ${item.description ?? \"\"}`}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {protocol.supportive_care && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Supportive Care</h3>\r\n            <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n              Required: {protocol.supportive_care.required?.length || 0}, Optional: {protocol.supportive_care.optional?.length || 0}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Section 4: Toxicity, Rescue Agents, Dose Modifications */}\r\n      <div className=\"space-y-4\">\r\n        {protocol.toxicity_monitoring && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Toxicity Monitoring</h3>\r\n            <p className=\"text-sm text-gray-700 dark:text-gray-300\">Details available</p>\r\n          </div>\r\n        )}\r\n        {protocol.dose_modifications && (\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">Dose Modifications</h3>\r\n            <p className=\"text-sm text-gray-700 dark:text-gray-300\">Details available</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n        <p>Created by: {protocol.created_by || 'Unknown'}</p>\r\n        <p>Updated by: {protocol.updated_by || 'Unknown'}</p>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UnifiedProtocolCard;\r\n","import { supabase } from '@/lib/supabaseClient';\r\nimport type { \r\n  Protocol,\r\n  Drug,\r\n  Eligibility,\r\n  ToxicityMonitoring,\r\n  SupportiveCare,\r\n  Monitoring,\r\n  Interactions,\r\n  Medications,\r\n  DrugClass\r\n} from '@/types/protocol';\r\n\r\ninterface DatabaseProtocol {\r\n  id: string;\r\n  code: string;\r\n  tumour_group: string;\r\n  treatment_intent?: string;\r\n  treatment?: any;\r\n  eligibility?: any;\r\n  tests?: any;\r\n  dose_modifications?: any;\r\n  precautions?: any;\r\n  reference_list?: any;\r\n  toxicity_monitoring?: any;\r\n  supportive_care?: any;\r\n  monitoring?: any;\r\n  drug_class?: any;\r\n  interactions?: any;\r\n  administration_notes?: string[];\r\n  pre_medications?: any;\r\n  post_medications?: any;\r\n  rescue_agents?: any;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n// Type guard to check if an object matches DatabaseProtocol shape\r\nconst isDatabaseProtocol = (obj: unknown): obj is DatabaseProtocol => {\r\n  if (!obj || typeof obj !== 'object') return false;\r\n  const protocol = obj as Record<string, unknown>;\r\n  return (\r\n    typeof protocol.id === 'string' &&\r\n    typeof protocol.code === 'string' &&\r\n    typeof protocol.tumour_group === 'string'\r\n  );\r\n};\r\n\r\n// Convert DatabaseProtocol to Protocol type\r\nconst toProtocol = (dbProtocol: DatabaseProtocol): Protocol => {\r\n  // Safely parse a value as JSON only if it looks like JSON.\r\n  const safeJSONParse = (data: any): any => {\r\n    if (typeof data === 'string') {\r\n      const trimmed = data.trim();\r\n      if (\r\n        (trimmed.startsWith('{') && trimmed.endsWith('}')) ||\r\n        (trimmed.startsWith('[') && trimmed.endsWith(']'))\r\n      ) {\r\n        try {\r\n          return JSON.parse(trimmed);\r\n        } catch (err) {\r\n          console.warn('Invalid JSON:', data);\r\n          return data;\r\n        }\r\n      }\r\n      return data; // plain non-JSON string (e.g., \"CBC and LFTs\")\r\n    }\r\n    return data; // already an object, array, or other type\r\n  };\r\n\r\n  // Add debug logging\r\n  console.log('Raw treatment data:', dbProtocol.treatment);\r\n\r\n  const protocol: Protocol = {\r\n    id: dbProtocol.id,\r\n    code: dbProtocol.code,\r\n    tumour_group: dbProtocol.tumour_group,\r\n    treatment_intent: dbProtocol.treatment_intent || '',\r\n    eligibility: safeJSONParse(dbProtocol.eligibility),\r\n    treatment: safeJSONParse(dbProtocol.treatment),\r\n    tests: safeJSONParse(dbProtocol.tests),\r\n    dose_modifications: safeJSONParse(dbProtocol.dose_modifications),\r\n    precautions: safeJSONParse(dbProtocol.precautions),\r\n    reference_list: safeJSONParse(dbProtocol.reference_list),\r\n    toxicity_monitoring: safeJSONParse(dbProtocol.toxicity_monitoring),\r\n    supportive_care: safeJSONParse(dbProtocol.supportive_care),\r\n    drug_class: safeJSONParse(dbProtocol.drug_class),\r\n    interactions: safeJSONParse(dbProtocol.interactions),\r\n    administration_notes: dbProtocol.administration_notes || [],\r\n    pre_medications: safeJSONParse(dbProtocol.pre_medications),\r\n    post_medications: safeJSONParse(dbProtocol.post_medications),\r\n    rescue_agents: safeJSONParse(dbProtocol.rescue_agents)\r\n  };\r\n\r\n  // Add debug logging for transformed protocol\r\n  console.log('Transformed protocol:', {\r\n    id: protocol.id,\r\n    code: protocol.code,\r\n    treatment: protocol.treatment\r\n  });\r\n\r\n  return protocol;\r\n};\r\n\r\nexport const getTumorGroups = async (): Promise<string[]> => {\r\n  const { data, error } = await supabase\r\n    .from('cd_protocols') // MIGRATED\r\n    .select('tumour_group')\r\n    .order('tumour_group');\r\n\r\n  if (error) {\r\n    console.error('Error fetching tumor groups:', error);\r\n    throw new Error('Failed to fetch tumor groups.');\r\n  }\r\n\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid response format for tumor groups');\r\n    return [];\r\n  }\r\n\r\n  // Extract unique tumor groups and ensure they're strings\r\n  const uniqueGroups = [...new Set(data\r\n    .map(row => row.tumour_group)\r\n    .filter((group): group is string => typeof group === 'string')\r\n  )];\r\n\r\n  return uniqueGroups;\r\n};\r\n\r\nexport const getProtocolsByTumorGroup = async (tumorGroup: string): Promise<Protocol[]> => {\r\n  const { data, error } = await supabase\r\n    .from('cd_protocols') // MIGRATED\r\n    .select('*')\r\n    .eq('tumour_group', tumorGroup)\r\n    .order('code');\r\n\r\n  if (error) {\r\n    console.error('Error fetching protocols for tumor group', tumorGroup, ':', error);\r\n    throw new Error(`Failed to fetch protocols for tumor group ${tumorGroup}.`);\r\n  }\r\n\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid response format:', data);\r\n    return [];\r\n  }\r\n\r\n  // Validate and transform the data\r\n  const validProtocols: Protocol[] = [];\r\n  data.forEach((item, index) => {\r\n    if (isDatabaseProtocol(item)) {\r\n      try {\r\n        validProtocols.push(toProtocol(item));\r\n      } catch (err) {\r\n        console.warn(`Failed to process protocol at index ${index}:`, err);\r\n      }\r\n    } else {\r\n      console.warn(`Invalid protocol data at index ${index}`);\r\n    }\r\n  });\r\n\r\n  return validProtocols;\r\n};\r\n\r\nexport interface ProtocolFilters {\r\n  tumorGroup: string | null;\r\n  drugName: string | null;\r\n  treatmentIntent: string | null;\r\n}\r\n\r\nexport const getProtocols = async (filters: ProtocolFilters): Promise<Protocol[]> => {\r\n  try {\r\n    let query = supabase\r\n      .from('cd_protocols') // MIGRATED\r\n      .select('*');\r\n\r\n    if (filters) {\r\n      if (filters.tumorGroup) {\r\n        query = query.eq('tumour_group', filters.tumorGroup);\r\n      }\r\n      if (filters.treatmentIntent) {\r\n        query = query.eq('treatment_intent', filters.treatmentIntent);\r\n      }\r\n      if (filters.drugName) {\r\n        query = query.contains('treatment->>drugs', filters.drugName);\r\n      }\r\n    }\r\n\r\n    const { data, error } = await query;\r\n    console.log('[CDU] cd_protocols data:', data); // AUDIT\r\n    if (error) throw error;\r\n    if (!data?.length) return [];\r\n\r\n    // Warn in dev if required fields are missing\r\n    if (process.env.NODE_ENV === 'development') {\r\n      data.forEach((row, idx) => {\r\n        ['id', 'code', 'tumour_group', 'treatment'].forEach(field => {\r\n          if (!(field in row)) {\r\n            console.warn(`[CDU] cd_protocols row missing field: ${field} (row #${idx})`, row);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // Validate and transform the data\r\n    const validProtocols: Protocol[] = [];\r\n    data.forEach((item, index) => {\r\n      if (isDatabaseProtocol(item)) {\r\n        try {\r\n          const protocol = toProtocol(item);\r\n          validProtocols.push(protocol);\r\n        } catch (err) {\r\n          console.warn(`Failed to process protocol at index ${index}:`, err);\r\n        }\r\n      } else {\r\n        console.warn(`Invalid protocol data at index ${index}`);\r\n      }\r\n    });\r\n\r\n    return validProtocols;\r\n  } catch (error) {\r\n    console.error('Error fetching protocols:', error);\r\n    throw new Error(`Failed to fetch protocols: ${error instanceof Error ? error.message : String(error)}`);\r\n  }\r\n};\r\n\r\nexport const getProtocolById = async (id: string): Promise<Protocol | null> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('cd_protocols') // MIGRATED\r\n      .select(`\r\n        id,\r\n        code,\r\n        tumour_group,\r\n        treatment_intent,\r\n        eligibility,\r\n        treatment,\r\n        tests,\r\n        dose_modifications,\r\n        precautions,\r\n        reference_list,\r\n        toxicity_monitoring,\r\n        supportive_care,\r\n        monitoring,\r\n        drug_class,\r\n        interactions,\r\n        administration_notes,\r\n        pre_medications,\r\n        post_medications,\r\n        rescue_agents,\r\n        created_at,\r\n        updated_at,\r\n        pharmacokinetics,\r\n        comments,\r\n        tags,\r\n        clinical_scenario,\r\n        last_reviewed,\r\n        summary,\r\n        ai_notes,\r\n        natural_language_prompt,\r\n        supportive_meds,\r\n        cycle_info,\r\n        dose_reductions\r\n      `)\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error fetching protocol:', error);\r\n      throw error;\r\n    }\r\n\r\n    // Add debug logging for raw data\r\n    console.log('Raw protocol data:', JSON.stringify(data, null, 2));\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    if (!isDatabaseProtocol(data)) {\r\n      console.warn('Invalid protocol data structure:', data);\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const protocol = toProtocol(data);\r\n      console.log('Transformed protocol:', {\r\n        id: protocol.id,\r\n        code: protocol.code,\r\n        treatment: protocol.treatment\r\n      });\r\n      return protocol;\r\n    } catch (err) {\r\n      console.error('Failed to transform protocol:', err);\r\n      return null;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch protocol:', error);\r\n    throw error;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { AlertCircle, RefreshCw, Search } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface ProtocolErrorStateProps {\r\n  error?: string;\r\n  type?: 'not-found' | 'error' | 'no-results';\r\n  onRetry?: () => void;\r\n}\r\n\r\nexport const ProtocolErrorState: React.FC<ProtocolErrorStateProps> = ({\r\n  error = 'An error occurred while loading the protocol.',\r\n  type = 'error',\r\n  onRetry\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const errorConfig = {\r\n    'not-found': {\r\n      icon: Search,\r\n      title: 'Protocol Not Found',\r\n      message: 'The requested protocol could not be found.',\r\n      color: 'text-yellow-500',\r\n      actionText: 'Back to Protocols'\r\n    },\r\n    'error': {\r\n      icon: AlertCircle,\r\n      title: 'Error Loading Protocol',\r\n      message: error,\r\n      color: 'text-red-600',\r\n      actionText: 'Retry'\r\n    },\r\n    'no-results': {\r\n      icon: Search,\r\n      title: 'No Results Found',\r\n      message: 'No protocols match your search criteria.',\r\n      color: 'text-gray-500',\r\n      actionText: 'Clear Filters'\r\n    }\r\n  };\r\n\r\n  const config = errorConfig[type];\r\n  const Icon = config.icon;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-[400px] p-6\">\r\n      <Icon className={`w-12 h-12 mb-4 ${config.color}`} />\r\n      <h3 className=\"text-lg font-semibold mb-2\">{config.title}</h3>\r\n      <p className=\"text-gray-600 text-center mb-6\">{config.message}</p>\r\n      <div className=\"flex gap-4\">\r\n        {type === 'error' && onRetry ? (\r\n          <Button onClick={onRetry} variant=\"outline\">\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            {config.actionText}\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={() => navigate('/protocols')} variant=\"outline\">\r\n            {config.actionText}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtocolErrorState;\r\n","import React from 'react'\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface SkeletonProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport function Skeleton({\r\n  className,\r\n  ...props\r\n}: SkeletonProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"animate-pulse rounded-md bg-primary-foreground/10\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\n\r\nexport const ProtocolLoadingSkeleton = () => {\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      {/* Header Section */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"space-y-4\">\r\n          <Skeleton className=\"h-8 w-48\" /> {/* Protocol Code */}\r\n          <div className=\"flex gap-2\">\r\n            <Skeleton className=\"h-5 w-24\" /> {/* Tumor Group Badge */}\r\n            <Skeleton className=\"h-5 w-24\" /> {/* Intent Badge */}\r\n          </div>\r\n        </div>\r\n        <Skeleton className=\"h-9 w-32\" /> {/* View Details Button */}\r\n      </div>\r\n\r\n      {/* Content Preview */}\r\n      <div className=\"bg-white rounded-lg p-6 space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Overview Section */}\r\n          <div className=\"space-y-4\">\r\n            <Skeleton className=\"h-6 w-24\" /> {/* Overview Title */}\r\n            <div className=\"space-y-3\">\r\n              <Skeleton className=\"h-4 w-full\" />\r\n              <Skeleton className=\"h-4 w-3/4\" />\r\n              <Skeleton className=\"h-4 w-5/6\" />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Drugs Section */}\r\n          <div className=\"space-y-4\">\r\n            <Skeleton className=\"h-6 w-24\" /> {/* Drugs Title */}\r\n            <div className=\"space-y-3\">\r\n              {[1, 2].map((i) => (\r\n                <div key={i} className=\"p-2 bg-gray-50 rounded\">\r\n                  <Skeleton className=\"h-5 w-32 mb-2\" />\r\n                  <Skeleton className=\"h-4 w-48\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtocolLoadingSkeleton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport UnifiedProtocolCard from './UnifiedProtocolCard';\r\nimport { Protocol } from '@/types/protocol';\r\nimport { getProtocols } from '@/services/protocols';\r\nimport ProtocolErrorState from './ProtocolErrorState';\r\nimport ProtocolLoadingSkeleton from './ProtocolLoadingSkeleton';\r\n\r\nconst TreatmentProtocols: React.FC = () => {\r\n  const [protocols, setProtocols] = useState<Protocol[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProtocols = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        console.log('Fetching protocols...'); // Debug log\r\n        const data = await getProtocols({\r\n          tumorGroup: null,\r\n          drugName: null,\r\n          treatmentIntent: null\r\n        });\r\n        console.log('Protocols:', data); // Debug log\r\n        setProtocols(data);\r\n      } catch (err) {\r\n        console.error('Error fetching protocols:', err);\r\n        setError('Failed to load protocols. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProtocols();\r\n  }, []);\r\n\r\n  if (loading) return <ProtocolLoadingSkeleton />;\r\n  if (error) return <ProtocolErrorState error={error} type=\"error\" />;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"min-h-screen bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800 p-4\"\r\n    >\r\n      {protocols.length === 0 ? (\r\n        <div className=\"text-center text-gray-500 dark:text-gray-400 mt-8\">\r\n          No protocols found.\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {protocols.map((protocol) => (\r\n            <UnifiedProtocolCard key={protocol.code} protocol={protocol} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TreatmentProtocols;\r\n","import React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Plus } from \"lucide-react\";\r\n\r\ntype MonitoringTest = {\r\n  test: string;\r\n  purpose: string;\r\n  frequency: string;\r\n};\r\n\r\ntype MonitoringData = {\r\n  baseline?: MonitoringTest[];\r\n  ongoing?: MonitoringTest[];\r\n};\r\n\r\ninterface MonitoringTabProps {\r\n  monitoring?: MonitoringData;\r\n  onAddNew?: () => void;\r\n}\r\n\r\nconst MonitoringTab: React.FC<MonitoringTabProps> = ({ monitoring, onAddNew }) => {\r\n  const isEmpty =\r\n    !monitoring ||\r\n    (!monitoring.baseline?.length && !monitoring.ongoing?.length);\r\n  if (isEmpty) {\r\n    return (\r\n      <div className=\"text-muted-foreground space-y-4\">\r\n        <p>No monitoring tests defined.</p>\r\n        {onAddNew && (\r\n          <Button onClick={onAddNew} variant=\"outline\" className=\"text-sm\">\r\n            <Plus className=\"w-4 h-4 mr-1\" />\r\n            Add New Monitoring Test\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const hasBaselineTests = monitoring?.baseline && monitoring.baseline.length > 0;\r\n  const hasOngoingTests = monitoring?.ongoing && monitoring.ongoing.length > 0;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {hasBaselineTests && (\r\n        <div>\r\n          <h4 className=\"font-semibold text-sm text-muted-foreground\">\r\n            Baseline Tests\r\n          </h4>\r\n          <ul className=\"list-disc list-inside space-y-1\">\r\n            {monitoring.baseline.map((test, index) => (\r\n              <li key={`baseline-${index}`}>\r\n                <strong>Test:</strong> {test.test}, <strong>Purpose:</strong> {test.purpose}, <strong>Frequency:</strong> {test.frequency}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {hasOngoingTests && (\r\n        <div>\r\n          <h4 className=\"font-semibold text-sm text-muted-foreground\">\r\n            Ongoing Monitoring\r\n          </h4>\r\n          <ul className=\"list-disc list-inside space-y-1\">\r\n            {monitoring.ongoing.map((test, index) => (\r\n              <li key={`ongoing-${index}`}>\r\n                <strong>Test:</strong> {test.test}, <strong>Purpose:</strong> {test.purpose}, <strong>Frequency:</strong> {test.frequency}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonitoringTab;\r\n","import React from \"react\";\r\n\r\ninterface TreatmentTabProps {\r\n  treatment?: {\r\n    drugs?: Array<{\r\n      name: string;\r\n      dose?: string;\r\n      administration?: string;\r\n    }>;\r\n    schedule?: string;\r\n    cycles?: string;\r\n    notes?: string;\r\n  };\r\n}\r\n\r\nconst TreatmentTab: React.FC<TreatmentTabProps> = ({ treatment }) => {\r\n  if (!treatment) {\r\n    return <p className=\"text-muted-foreground\">No treatment information available.</p>;\r\n  }\r\n\r\n  const { drugs = [], schedule, cycles, notes } = treatment;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Drugs</h3>\r\n        {drugs && drugs.length > 0 ? (\r\n          <ul className=\"list-disc list-inside space-y-1\">\r\n            {drugs.map((drug, idx) => (\r\n              <li key={idx}>\r\n                <strong>{drug.name}</strong>\r\n                {drug.dose ? ` – ${drug.dose}` : \"\"}\r\n                {drug.administration ? ` (${drug.administration})` : \"\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className=\"text-muted-foreground\">No drugs specified.</p>\r\n        )}\r\n      </div>\r\n\r\n      {schedule && (\r\n        <div>\r\n          <h3 className=\"font-semibold text-lg mb-2\">Schedule</h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">{schedule}</p>\r\n        </div>\r\n      )}\r\n\r\n      {cycles && (\r\n        <div>\r\n          <h3 className=\"font-semibold text-lg mb-2\">Cycles</h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">{cycles}</p>\r\n        </div>\r\n      )}\r\n\r\n      {notes && (\r\n        <div>\r\n          <h3 className=\"font-semibold text-lg mb-2\">Notes</h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-line\">{notes}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreatmentTab;\r\n","import React from \"react\";\r\n\r\ntype Test = {\r\n  name?: string;\r\n  timing?: string;\r\n  notes?: string;\r\n};\r\n\r\ninterface TestsSectionTabProps {\r\n  tests?: Array<Test> | { baseline?: string[]; monitoring?: string[] };\r\n}\r\n\r\n// This component handles both test formats (array of test objects or object with baseline/monitoring arrays)\r\nconst TestsSectionTab: React.FC<TestsSectionTabProps> = ({ tests }) => {\r\n  if (!tests) {\r\n    return <p className=\"text-muted-foreground\">No tests information available.</p>;\r\n  }\r\n\r\n  // Handle baseline/monitoring structure\r\n  if (!Array.isArray(tests)) {\r\n    const { baseline = [], monitoring = [] } = tests;\r\n    \r\n    if (baseline.length === 0 && monitoring.length === 0) {\r\n      return <p className=\"text-muted-foreground\">No tests information available.</p>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"space-y-6\">\r\n        {baseline.length > 0 && (\r\n          <div>\r\n            <h3 className=\"font-semibold text-lg mb-2\">Baseline Tests</h3>\r\n            <ul className=\"list-disc list-inside space-y-1\">\r\n              {baseline.map((test, idx) => (\r\n                <li key={`baseline-${idx}`}>{test}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        \r\n        {monitoring.length > 0 && (\r\n          <div>\r\n            <h3 className=\"font-semibold text-lg mb-2\">Ongoing Tests</h3>\r\n            <ul className=\"list-disc list-inside space-y-1\">\r\n              {monitoring.map((test, idx) => (\r\n                <li key={`monitoring-${idx}`}>{test}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Handle array of test objects structure\r\n  if (tests.length === 0) {\r\n    return <p className=\"text-muted-foreground\">No tests information available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"font-semibold text-lg mb-2\">Required Tests</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Test\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Timing\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Notes\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {tests.map((test, index) => (\r\n              <tr key={index}>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\r\n                  {test.name || \"N/A\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                  {test.timing || \"N/A\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-pre-line text-sm text-gray-500 dark:text-gray-400\">\r\n                  {test.notes || \"N/A\"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestsSectionTab;\r\n","import React from \"react\";\r\n\r\ninterface DoseModificationsTabProps {\r\n  doseModifications?: Array<{\r\n    condition?: string;\r\n    modification?: string;\r\n  }>;\r\n}\r\n\r\nconst DoseModificationsTab: React.FC<DoseModificationsTabProps> = ({ doseModifications = [] }) => {\r\n  if (!doseModifications || doseModifications.length === 0) {\r\n    return <p className=\"text-muted-foreground\">No dose modification information available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"font-semibold text-lg mb-2\">Dose Modification Guidelines</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Condition\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Recommended Modification\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {doseModifications.map((item, index) => (\r\n              <tr key={index}>\r\n                <td className=\"px-6 py-4 whitespace-pre-line text-sm text-gray-900 dark:text-gray-100\">\r\n                  {item.condition || \"N/A\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-pre-line text-sm text-gray-500 dark:text-gray-400\">\r\n                  {item.modification || \"N/A\"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoseModificationsTab;\r\n","import React from \"react\";\r\n\r\ninterface SupportiveCareTabProps {\r\n  supportiveCare?: Array<{\r\n    type?: string;\r\n    description?: string;\r\n    timing?: string;\r\n  }>;\r\n}\r\n\r\nconst SupportiveCareTab: React.FC<SupportiveCareTabProps> = ({ supportiveCare = [] }) => {\r\n  if (!supportiveCare || supportiveCare.length === 0) {\r\n    return <p className=\"text-muted-foreground\">No supportive care information available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"font-semibold text-lg mb-2\">Supportive Care Guidelines</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Type\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Description\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                Timing\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {supportiveCare.map((care, index) => (\r\n              <tr key={index}>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\r\n                  {care.type || \"N/A\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-pre-line text-sm text-gray-500 dark:text-gray-400\">\r\n                  {care.description || \"N/A\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                  {care.timing || \"N/A\"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportiveCareTab;\r\n","import React from \"react\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\r\nimport { Protocol, Test } from \"@/types/protocol\";\r\nimport MonitoringTab from \"../MonitoringTab\";\r\nimport TreatmentTab from \"../TreatmentTab\";\r\nimport TestsSectionTab from \"../TestsSectionTab\";\r\nimport DoseModificationsTab from \"../DoseModificationsTab\";\r\nimport SupportiveCareTab from \"../SupportiveCareTab\";\r\n\r\ninterface ProtocolDetailsDialogProps {\r\n  protocol: Protocol;\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n}\r\n\r\ninterface OverviewSectionProps {\r\n  overview?: string;\r\n}\r\n\r\nconst OverviewSection: React.FC<OverviewSectionProps> = ({ overview }) => (\r\n  <div>\r\n    <h3 className=\"font-semibold text-lg mb-2\">Overview</h3>\r\n    {overview ? (\r\n      <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-line\">{overview}</p>\r\n    ) : (\r\n      <p className=\"text-muted-foreground\">No overview information.</p>\r\n    )}\r\n  </div>\r\n);\r\n\r\ninterface InfoTabProps {\r\n  lastReviewed?: string;\r\n  version?: string;\r\n  status?: string;\r\n  createdBy?: string;\r\n  updatedBy?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nconst InfoTab: React.FC<InfoTabProps> = ({\r\n  lastReviewed,\r\n  version,\r\n  status,\r\n  createdBy,\r\n  updatedBy,\r\n  createdAt,\r\n  updatedAt\r\n}) => (\r\n  <div className=\"space-y-4\">\r\n    {version && (\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Version</h3>\r\n        <p>{version}</p>\r\n      </div>\r\n    )}\r\n    {status && (\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Status</h3>\r\n        <p>{status}</p>\r\n      </div>\r\n    )}\r\n    {lastReviewed && (\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Last Reviewed</h3>\r\n        <p>{new Date(lastReviewed).toLocaleDateString()}</p>\r\n      </div>\r\n    )}\r\n    {(createdBy || createdAt) && (\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Created</h3>\r\n        {createdBy && <p>By: {createdBy}</p>}\r\n        {createdAt && <p>On: {new Date(createdAt).toLocaleDateString()}</p>}\r\n      </div>\r\n    )}\r\n    {(updatedBy || updatedAt) && (\r\n      <div>\r\n        <h3 className=\"font-semibold text-lg mb-2\">Last Updated</h3>\r\n        {updatedBy && <p>By: {updatedBy}</p>}\r\n        {updatedAt && <p>On: {new Date(updatedAt).toLocaleDateString()}</p>}\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst ProtocolDetailsDialog: React.FC<ProtocolDetailsDialogProps> = ({ protocol, open, onOpenChange }) => {\r\n  // Set up data with fallbacks for each section\r\n  const monitoring = React.useMemo(() => protocol.monitoring || { baseline: [], ongoing: [] }, [protocol.monitoring]);\r\n  const treatment = React.useMemo(() => protocol.treatment || { drugs: [] }, [protocol.treatment]);\r\n  const tests = React.useMemo(() => {\r\n    if (Array.isArray(protocol.tests)) {\r\n      return { baseline: [], monitoring: [] };\r\n    }\r\n    return protocol.tests || { baseline: [], monitoring: [] };\r\n  }, [protocol.tests]);\r\n  \r\n  const doseModifications = React.useMemo(() => \r\n    protocol.dose_modifications || {\r\n      hematological: [],\r\n      nonHematological: [],\r\n      renal: [],\r\n      hepatic: []\r\n    }, \r\n    [protocol.dose_modifications]\r\n  );\r\n\r\n  const toxicityMonitoring = React.useMemo(() => \r\n    protocol.toxicity_monitoring || {\r\n      expected_toxicities: [],\r\n      monitoring_parameters: '',\r\n      frequency_details: '',\r\n      thresholds_for_action: {}\r\n    },\r\n    [protocol.toxicity_monitoring]\r\n  );\r\n\r\n  const supportiveCare = React.useMemo(() => \r\n    protocol.supportive_care || {\r\n      required: [],\r\n      optional: [],\r\n      monitoring: []\r\n    },\r\n    [protocol.supportive_care]\r\n  );\r\n\r\n  const interactions = React.useMemo(() => \r\n    protocol.interactions || {\r\n      drugs_to_avoid: [],\r\n      contraindications: [],\r\n      precautions_with_other_drugs: []\r\n    },\r\n    [protocol.interactions]\r\n  );\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle>{protocol.code || \"Protocol Details\"}</DialogTitle>\r\n          <DialogDescription>\r\n            {protocol.summary || \"Treatment protocol details\"}\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <Tabs defaultValue=\"overview\" className=\"w-full\">\r\n          <TabsList className=\"mb-4 flex flex-wrap\">\r\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n            <TabsTrigger value=\"treatment\">Treatment</TabsTrigger>\r\n            <TabsTrigger value=\"tests\">Tests</TabsTrigger>\r\n            <TabsTrigger value=\"monitoring\">Monitoring</TabsTrigger>\r\n            <TabsTrigger value=\"doseModifications\">Dose Modifications</TabsTrigger>\r\n            <TabsTrigger value=\"toxicity\">Toxicity</TabsTrigger>\r\n            <TabsTrigger value=\"interactions\">Interactions</TabsTrigger>\r\n            <TabsTrigger value=\"supportiveCare\">Supportive Care</TabsTrigger>\r\n            <TabsTrigger value=\"info\">Info</TabsTrigger>\r\n          </TabsList>\r\n          <TabsContent value=\"overview\">\r\n            <div className=\"space-y-6\">\r\n              <OverviewSection overview={protocol.summary} />\r\n              {protocol.eligibility && (\r\n                <div className=\"mt-4\">\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Eligibility Criteria</h3>\r\n                  {Array.isArray(protocol.eligibility) ? (\r\n                    <ul className=\"list-disc list-inside\">\r\n                      {protocol.eligibility.map((item: string, idx: number) => (\r\n                        <li key={idx}>{item}</li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    <>\r\n                      <h4 className=\"font-medium mb-1\">Inclusion Criteria</h4>\r\n                      <ul className=\"list-disc list-inside mb-2\">\r\n                        {protocol.eligibility.inclusion_criteria?.map((item: string, idx: number) => (\r\n                          <li key={idx}>{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                      <h4 className=\"font-medium mb-1\">Exclusion Criteria</h4>\r\n                      <ul className=\"list-disc list-inside\">\r\n                        {protocol.eligibility.exclusion_criteria?.map((item: string, idx: number) => (\r\n                          <li key={idx}>{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n          <TabsContent value=\"treatment\">\r\n            <TreatmentTab treatment={treatment} />\r\n          </TabsContent>\r\n          <TabsContent value=\"tests\">\r\n            <TestsSectionTab tests={tests} />\r\n          </TabsContent>\r\n          <TabsContent value=\"monitoring\">\r\n            <MonitoringTab monitoring={monitoring} />\r\n          </TabsContent>\r\n          <TabsContent value=\"doseModifications\">\r\n            <DoseModificationsTab doseModifications={doseModifications} />\r\n          </TabsContent>\r\n          <TabsContent value=\"toxicity\">\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <h3 className=\"font-semibold text-lg mb-2\">Expected Toxicities</h3>\r\n                {toxicityMonitoring.expected_toxicities?.length > 0 ? (\r\n                  <ul className=\"list-disc list-inside\">\r\n                    {toxicityMonitoring.expected_toxicities.map((toxicity: string, idx: number) => (\r\n                      <li key={idx}>{toxicity}</li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p className=\"text-muted-foreground\">No expected toxicities specified.</p>\r\n                )}\r\n              </div>\r\n              \r\n              {toxicityMonitoring.monitoring_parameters && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Monitoring Parameters</h3>\r\n                  <p className=\"whitespace-pre-line\">{toxicityMonitoring.monitoring_parameters}</p>\r\n                </div>\r\n              )}\r\n\r\n              {toxicityMonitoring.frequency_details && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Monitoring Frequency</h3>\r\n                  <p className=\"whitespace-pre-line\">{toxicityMonitoring.frequency_details}</p>\r\n                </div>\r\n              )}\r\n\r\n              {Object.keys(toxicityMonitoring.thresholds_for_action || {}).length > 0 && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Action Thresholds</h3>\r\n                  <div className=\"grid gap-2\">\r\n                    {Object.entries(toxicityMonitoring.thresholds_for_action).map(([condition, action]: [string, string], idx: number) => (\r\n                      <div key={idx} className=\"bg-muted p-2 rounded-md\">\r\n                        <span className=\"font-medium\">{condition}:</span> {action}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n          <TabsContent value=\"interactions\">\r\n            <div className=\"space-y-6\">\r\n              {interactions.drugs_to_avoid?.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Drugs to Avoid</h3>\r\n                  <ul className=\"list-disc list-inside\">\r\n                    {interactions.drugs_to_avoid.map((drug: string, idx: number) => (\r\n                      <li key={idx}>{drug}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {interactions.contraindications?.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Contraindications</h3>\r\n                  <ul className=\"list-disc list-inside\">\r\n                    {interactions.contraindications.map((item: string, idx: number) => (\r\n                      <li key={idx}>{item}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {interactions.precautions_with_other_drugs?.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"font-semibold text-lg mb-2\">Precautions with Other Drugs</h3>\r\n                  <ul className=\"list-disc list-inside\">\r\n                    {interactions.precautions_with_other_drugs.map((item: string, idx: number) => (\r\n                      <li key={idx}>{item}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n          <TabsContent value=\"supportiveCare\">\r\n            <SupportiveCareTab supportiveCare={supportiveCare} />\r\n          </TabsContent>\r\n          <TabsContent value=\"info\">\r\n            <InfoTab\r\n              lastReviewed={protocol.last_reviewed}\r\n              version={protocol.version}\r\n              status={protocol.status}\r\n              createdBy={protocol.created_by}\r\n              updatedBy={protocol.updated_by}\r\n              createdAt={protocol.created_at}\r\n              updatedAt={protocol.updated_at}\r\n            />\r\n          </TabsContent>\r\n        </Tabs>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProtocolDetailsDialog;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ChevronLeft, Info, Check, Pill, AlertTriangle } from 'lucide-react';\r\nimport { Protocol } from '@/types/protocol';\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport ProtocolDetailsDialog from './components/ProtocolDetailsDialog';\r\n\r\ninterface ProtocolDetailPageProps {\r\n  protocol: Protocol;\r\n}\r\n\r\nconst ProtocolDetailPage: React.FC<ProtocolDetailPageProps> = ({ protocol }) => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'drugs' | 'monitoring' | 'precautions'>('overview');\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'overview', label: 'Overview', color: 'bg-blue-500', icon: <Info className=\"w-4 h-4\" /> },\r\n    { id: 'drugs', label: 'Drugs', color: 'bg-green-500', icon: <Pill className=\"w-4 h-4\" /> },\r\n    { id: 'monitoring', label: 'Monitoring', color: 'bg-purple-500', icon: <Check className=\"w-4 h-4\" /> },\r\n    { id: 'precautions', label: 'Precautions', color: 'bg-yellow-500', icon: <AlertTriangle className=\"w-4 h-4\" /> },\r\n  ] as const;\r\n\r\n  const content = {\r\n    overview: (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n          <h4 className=\"text-lg font-semibold text-blue-900 mb-2\">Protocol Details</h4>\r\n          <div className=\"space-y-2\">\r\n            <p className=\"text-blue-800\">\r\n              <span className=\"font-medium\">Code:</span> {protocol.code}\r\n            </p>\r\n            <p className=\"text-blue-800\">\r\n              <span className=\"font-medium\">Tumor Group:</span> {protocol.tumour_group}\r\n            </p>\r\n            {protocol.treatment_intent && (\r\n              <p className=\"text-blue-800\">\r\n                <span className=\"font-medium\">Intent:</span> {protocol.treatment_intent}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {protocol.eligibility && (\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold mb-2\">Eligibility Criteria</h4>\r\n            <ul className=\"list-disc pl-5 space-y-2\">\r\n              {Array.isArray(protocol.eligibility) \r\n                ? protocol.eligibility.map((item, index) => (\r\n                    <li key={index}>{item}</li>\r\n                  ))\r\n                : Object.entries(protocol.eligibility).map(([key, value]) => (\r\n                    <li key={key}>\r\n                      <strong>{key}:</strong>{\" \"}\r\n                      {Array.isArray(value) ? value.join(\", \") : value}\r\n                    </li>\r\n                  ))\r\n              }\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ),\r\n    drugs: (\r\n      <div className=\"space-y-6\">\r\n        {protocol.treatment?.drugs && protocol.treatment.drugs.length > 0 ? (\r\n          <div className=\"space-y-4\">\r\n            {protocol.treatment.drugs.map((drug, index) => (\r\n              <div key={index} className=\"bg-white p-4 rounded-lg border border-slate-200 hover:border-slate-300 transition-colors\">\r\n                <h3 className=\"font-semibold text-lg text-indigo-700 dark:text-indigo-400\">\r\n                  {drug.name}\r\n                </h3>\r\n                <div className=\"mt-3 space-y-3\">\r\n                  {drug.dose && (\r\n                    <div className=\"flex items-start gap-2 text-sm\">\r\n                      <span className=\"font-medium min-w-[80px]\">Dose:</span>\r\n                      <span className=\"text-gray-700\">{drug.dose}</span>\r\n                    </div>\r\n                  )}\r\n                  {drug.administration && (\r\n                    <div className=\"flex items-start gap-2 text-sm\">\r\n                      <span className=\"font-medium min-w-[80px]\">Administration:</span>\r\n                      <span className=\"text-gray-700\">{drug.administration}</span>\r\n                    </div>\r\n                  )}\r\n                  {drug.timing && (\r\n                    <div className=\"flex items-start gap-2 text-sm\">\r\n                      <span className=\"font-medium min-w-[80px]\">Timing:</span>\r\n                      <span className=\"text-gray-700\">{drug.timing}</span>\r\n                    </div>\r\n                  )}\r\n                  {drug.alternative_switches && drug.alternative_switches.length > 0 && (\r\n                    <div className=\"flex items-start gap-2 text-sm\">\r\n                      <span className=\"font-medium min-w-[80px]\">Alternatives:</span>\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {drug.alternative_switches.map((alt, idx) => (\r\n                          <Badge key={idx} variant=\"secondary\">{alt}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {drug.special_notes && drug.special_notes.length > 0 && (\r\n                    <div className=\"mt-3 bg-blue-50 p-3 rounded-lg\">\r\n                      <div className=\"font-medium text-blue-800 mb-2\">Special Notes</div>\r\n                      <ul className=\"list-disc pl-4 space-y-1\">\r\n                        {drug.special_notes.map((note, idx) => (\r\n                          <li key={idx} className=\"text-sm text-blue-700\">{note}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center p-8 bg-gray-50 rounded-lg\">\r\n            <Pill className=\"w-12 h-12 text-gray-400 mx-auto mb-3\" />\r\n            <p className=\"text-gray-500\">No drugs have been specified for this protocol.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ),\r\n    monitoring: (\r\n      <div className=\"space-y-6\">\r\n        {protocol.tests ? (\r\n          <>\r\n            {protocol.tests.baseline && protocol.tests.baseline.length > 0 && (\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold mb-2\">Baseline Tests</h4>\r\n                <ul className=\"list-disc pl-5 space-y-2\">\r\n                  {protocol.tests.baseline.map((test, index) => (\r\n                    <li key={index} className=\"text-gray-700\">{test}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            {protocol.tests.monitoring && protocol.tests.monitoring.length > 0 && (\r\n              <div className=\"mt-6\">\r\n                <h4 className=\"text-lg font-semibold mb-2\">Ongoing Monitoring</h4>\r\n                <ul className=\"list-disc pl-5 space-y-2\">\r\n                  {protocol.tests.monitoring.map((test, index) => (\r\n                    <li key={index}>\r\n                      <strong>Test:</strong> {test.test}, <strong>Purpose:</strong> {test.purpose}, <strong>Frequency:</strong> {test.frequency}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <p className=\"text-gray-500 italic\">No monitoring information specified</p>\r\n        )}\r\n        \r\n        {/* Toxicity Monitoring Section */}\r\n        {protocol.toxicity_monitoring && (\r\n          <div className=\"mt-6 bg-amber-50 p-4 rounded-lg\">\r\n            <h4 className=\"text-lg font-semibold mb-2 text-amber-900\">Toxicity Monitoring</h4>\r\n            {protocol.toxicity_monitoring.expected_toxicities && protocol.toxicity_monitoring.expected_toxicities.length > 0 && (\r\n              <div className=\"mb-4\">\r\n                <h5 className=\"font-medium text-amber-800 mb-2\">Expected Toxicities</h5>\r\n                <ul className=\"list-disc pl-5 space-y-2\">\r\n                  {protocol.toxicity_monitoring.expected_toxicities.map((toxicity, index) => (\r\n                    <li key={index} className=\"text-amber-700\">{toxicity}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    ),\r\n    precautions: (\r\n      <div className=\"space-y-6\">\r\n        {protocol.precautions && protocol.precautions.length > 0 ? (\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold mb-2\">Precautions</h4>\r\n            <ul className=\"list-disc pl-5 space-y-2\">\r\n              {protocol.precautions.map((precaution, index) => (\r\n                <li key={index} className=\"text-red-600\">{precaution}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-gray-500 italic\">No precautions specified</p>\r\n        )}\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto max-w-7xl p-6\">\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <Button variant=\"ghost\" onClick={handleBack}>\r\n              <ChevronLeft className=\"h-4 w-4 mr-2\" />\r\n              Back\r\n            </Button>\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold\">{protocol.code}</h1>\r\n              <div className=\"flex gap-2 mt-1\">\r\n                <Badge variant=\"outline\">{protocol.tumour_group}</Badge>\r\n                {protocol.treatment_intent && (\r\n                  <Badge>{protocol.treatment_intent}</Badge>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button onClick={() => setDialogOpen(true)}>\r\n            View Full Details\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Protocol Details Dialog */}\r\n        <ProtocolDetailsDialog \r\n          protocol={protocol}\r\n          open={dialogOpen}\r\n          onOpenChange={setDialogOpen}\r\n        />\r\n\r\n        {/* Content Preview */}\r\n        <div className=\"bg-white rounded-lg p-6 space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Basic Info */}\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"text-lg font-semibold\">Overview</h3>\r\n              <div className=\"space-y-2\">\r\n                <p><span className=\"font-medium\">Code:</span> {protocol.code}</p>\r\n                <p><span className=\"font-medium\">Tumor Group:</span> {protocol.tumour_group}</p>\r\n                {protocol.treatment_intent && (\r\n                  <p><span className=\"font-medium\">Intent:</span> {protocol.treatment_intent}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Drug Preview */}\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"text-lg font-semibold\">Drugs</h3>\r\n              <div className=\"space-y-2\">\r\n                {protocol.treatment?.drugs && protocol.treatment.drugs.length > 0 ? (\r\n                  protocol.treatment.drugs.slice(0, 2).map((drug, index) => (\r\n                    <div key={index} className=\"p-2 bg-gray-50 rounded\">\r\n                      <p className=\"font-medium text-indigo-600\">{drug.name}</p>\r\n                      {drug.dose && <p className=\"text-sm text-gray-600\">{drug.dose}</p>}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-gray-500\">No drugs specified</p>\r\n                )}\r\n                {protocol.treatment?.drugs && protocol.treatment.drugs.length > 2 && (\r\n                  <Button variant=\"link\" onClick={() => setDialogOpen(true)}>\r\n                    View all drugs...\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtocolDetailPage;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { getProtocols } from \"../../../services/protocols\";\r\nimport { Protocol } from '../../../types/protocol';\r\nimport ProtocolDetailPage from './ProtocolDetailPage';\r\nimport ProtocolLoadingSkeleton from './ProtocolLoadingSkeleton';\r\nimport ProtocolErrorState from './ProtocolErrorState';\r\n\r\n\r\nconst ProtocolDetailPageContainer: React.FC = () => {\r\n  // State management\r\n  const location = useLocation();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [protocol, setProtocol] = useState<Protocol | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchProtocol = useCallback(async () => {\r\n    console.log('🔍 Protocol Detail Container - Fetching protocol:', {\r\n      id,\r\n      hasLocationState: !!location.state,\r\n      locationProtocol: location.state?.protocol\r\n    });\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // First try to use protocol from location state\r\n      if (location.state?.protocol) {\r\n        console.log('📋 Using protocol from location state');\r\n        setProtocol(location.state.protocol);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Validate ID\r\n      if (!id) {\r\n        throw new Error('No protocol ID provided');\r\n      }\r\n\r\n      const data = await getProtocols(id);\r\n      \r\n      if (!data) {\r\n        setProtocol(null);\r\n        setError('Protocol not found');\r\n        return;\r\n      }\r\n      \r\nconsole.log('📋 Protocol loaded:', {\r\n        id: data.id,\r\n        code: data.code,\r\n        hasDrugs: (data.treatment?.drugs || []).length > 0\r\n      });\r\n\r\n      setProtocol(data);\r\n\r\n    } catch (err) {\r\n      console.error('❌ Error loading protocol:', err);\r\n      setProtocol(null);\r\n      setError(err instanceof Error ? err.message : 'Failed to load protocol');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [id, location.state]);\r\n\r\n  // Effect to fetch protocol\r\n  useEffect(() => {\r\n    fetchProtocol();\r\n  }, [fetchProtocol]);\r\n\r\n  if (isLoading) return <ProtocolLoadingSkeleton />;\r\n\r\n  if (error) {\r\n    return (\r\n      <ProtocolErrorState \r\n        error={error} \r\n        type={error === 'Protocol not found' ? 'not-found' : 'error'} \r\n        onRetry={fetchProtocol} \r\n      />\r\n    );\r\n  }\r\n\r\n  if (!protocol) {\r\n    return <ProtocolErrorState type=\"not-found\" />;\r\n  }\r\n\r\n  return <ProtocolDetailPage protocol={protocol} />;\r\n};\r\n\r\nexport default ProtocolDetailPageContainer;\r\n","import { supabase } from '../lib/supabaseClient';\r\n\r\nexport interface ToxicityData {\r\n  // Basic fields\r\n  id: string;\r\n  name: string;\r\n  severity: string;\r\n  grading_scale: string;\r\n  recognition: string;\r\n  symptoms: string[];\r\n  signs: string[];\r\n  imaging: string[];\r\n  labs: string[];\r\n  clinical_category: string;\r\n  symptom_onset: string;\r\n  expected_onset: string;\r\n  onset_timing_days: number;\r\n  reversibility: string;\r\n  toxicity_type: string;\r\n  is_dose_limiting: boolean;\r\n  requires_hospitalization: boolean;\r\n  toxicity_risk_factors: string[];\r\n\r\n  // Arrays\r\n  management: string[];\r\n  dose_guidance: string[];\r\n  culprit_drugs: string[];\r\n  culprit_classes: string[];\r\n  intervention_required: string[];\r\n  monitoring_recommendations: string[];\r\n  lab_triggers: string[];\r\n  related_toxicity_ids: string[];\r\n\r\n  // Special formats\r\n  monitoring_frequency: {\r\n    initial: string;\r\n    followup: string;\r\n    longterm: string;\r\n  };\r\n  reference_data: Record<string, any>;\r\n  source_reference: string;\r\n  notes: string;\r\n  notes_clinical_pearls: string;\r\n  notes_ui_display: string;\r\n  toxicity_score_weight: number;\r\n\r\n  // Timestamps\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\n/**\r\n * Sanitizes toxicity data to ensure it has expected structure and types\r\n * @param data Partial toxicity data that may be missing fields\r\n * @returns Complete toxicity data with defaults for missing fields\r\n */\r\nexport const sanitizeToxicity = (data: Partial<ToxicityData>): ToxicityData => ({\r\n  // Basic fields\r\n  id: data.id || crypto.randomUUID(),\r\n  name: data.name || 'Not specified',\r\n  severity: data.severity || 'Not specified',\r\n  grading_scale: data.grading_scale || 'CTCAE v5.0',\r\n  recognition: data.recognition || '',\r\n  symptoms: Array.isArray(data.symptoms) ? data.symptoms : [],\r\n  signs: Array.isArray(data.signs) ? data.signs : [],\r\n  imaging: Array.isArray(data.imaging) ? data.imaging : [],\r\n  labs: Array.isArray(data.labs) ? data.labs : [],\r\n  clinical_category: data.clinical_category || 'Uncategorized',\r\n  symptom_onset: data.symptom_onset || '',\r\n  expected_onset: data.expected_onset || '',\r\n  onset_timing_days: data.onset_timing_days || 0,\r\n  reversibility: data.reversibility || 'Unknown',\r\n  toxicity_type: data.toxicity_type || 'Unknown',\r\n  is_dose_limiting: !!data.is_dose_limiting,\r\n  requires_hospitalization: !!data.requires_hospitalization,\r\n  toxicity_risk_factors: Array.isArray(data.toxicity_risk_factors) ? data.toxicity_risk_factors : [],\r\n\r\n  // Arrays\r\n  management: Array.isArray(data.management) ? data.management : [],\r\n  dose_guidance: Array.isArray(data.dose_guidance) ? data.dose_guidance : [],\r\n  culprit_drugs: Array.isArray(data.culprit_drugs) ? data.culprit_drugs : [],\r\n  culprit_classes: Array.isArray(data.culprit_classes) ? data.culprit_classes : [],\r\n  intervention_required: Array.isArray(data.intervention_required) ? data.intervention_required : [],\r\n  monitoring_recommendations: Array.isArray(data.monitoring_recommendations) ? data.monitoring_recommendations : [],\r\n  lab_triggers: Array.isArray(data.lab_triggers) ? data.lab_triggers : [],\r\n  related_toxicity_ids: Array.isArray(data.related_toxicity_ids) ? data.related_toxicity_ids : [],\r\n\r\n  // Special formats\r\n  monitoring_frequency: {\r\n    initial: data.monitoring_frequency?.initial || 'Not specified',\r\n    followup: data.monitoring_frequency?.followup || 'Not specified',\r\n    longterm: data.monitoring_frequency?.longterm || 'Not specified'\r\n  },\r\n  reference_data: data.reference_data || {},\r\n  source_reference: data.source_reference || '',\r\n  notes: data.notes || '',\r\n  notes_clinical_pearls: data.notes_clinical_pearls || '',\r\n  notes_ui_display: data.notes_ui_display || '',\r\n  toxicity_score_weight: data.toxicity_score_weight || 0,\r\n\r\n  // Timestamps\r\n  created_at: data.created_at || new Date().toISOString(),\r\n  updated_at: data.updated_at || new Date().toISOString()\r\n});\r\n\r\n/**\r\n * Fetches all toxicity data from the database\r\n * @returns Promise resolving to array of toxicity data\r\n */\r\nexport const getAllToxicities = async (): Promise<ToxicityData[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('toxicities')\r\n      .select(`\r\n        id, name, severity, grading_scale, recognition,\r\n        symptoms, signs, imaging, labs, clinical_category,\r\n        symptom_onset, expected_onset, onset_timing_days,\r\n        reversibility, toxicity_type, is_dose_limiting,\r\n        requires_hospitalization, toxicity_risk_factors,\r\n        management, dose_guidance, culprit_drugs,\r\n        culprit_classes, intervention_required,\r\n        monitoring_recommendations, lab_triggers,\r\n        related_toxicity_ids, monitoring_frequency,\r\n        reference_data, source_reference, notes,\r\n        notes_clinical_pearls, notes_ui_display,\r\n        toxicity_score_weight, created_at, updated_at\r\n      `);\r\n    \r\n    if (error) {\r\n      throw new Error(`Toxicity fetch error: ${error.message}`);\r\n    }\r\n    \r\n    return (data || []).map((item: Partial<ToxicityData>) => sanitizeToxicity(item));\r\n  } catch (err) {\r\n    console.error('Error fetching toxicities:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches toxicities related to a specific medication\r\n * @param medicationId Medication ID to filter toxicities by\r\n * @returns Promise resolving to array of toxicity data\r\n */\r\nexport const getToxicitiesByMedication = async (medicationId: string): Promise<ToxicityData[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('medication_toxicities')\r\n      .select('toxicity_id')\r\n      .eq('medication_id', medicationId);\r\n    \r\n    if (error) {\r\n      throw new Error(`Medication toxicity relation fetch error: ${error.message}`);\r\n    }\r\n    \r\n    if (!data || data.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    const toxicityIds = data.map(item => item.toxicity_id);\r\n    \r\n    const { data: toxicities, error: toxicitiesError } = await supabase\r\n      .from('toxicities')\r\n      .select('*')\r\n      .in('id', toxicityIds);\r\n    \r\n    if (toxicitiesError) {\r\n      throw new Error(`Toxicity fetch error: ${toxicitiesError.message}`);\r\n    }\r\n    \r\n    return (toxicities || []).map((item: Partial<ToxicityData>) => sanitizeToxicity(item));\r\n  } catch (err) {\r\n    console.error('Error fetching toxicities by medication:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Add error handling and logging for Supabase queries\r\nexport const fetchToxicities = async (): Promise<ToxicityData[]> => {\r\n  try {\r\n    const { data, error } = await supabase.from('toxicities').select('*');\r\n    if (error) {\r\n      console.error('Error fetching toxicities:', error);\r\n      throw error;\r\n    }\r\n    return data.map(sanitizeToxicity);\r\n  } catch (err) {\r\n    console.error('Unexpected error fetching toxicities:', err);\r\n    return [];\r\n  }\r\n};","import React from 'react';\r\nimport { AlertTriangle, X, Check, Info } from 'lucide-react';\r\n\r\n/**\r\n * Props for the AlertBanner component\r\n */\r\nexport interface AlertBannerProps {\r\n  /**\r\n   * Type of alert\r\n   */\r\n  type: 'warning' | 'error' | 'success' | 'info';\r\n  \r\n  /**\r\n   * Title of the alert\r\n   */\r\n  title: string;\r\n  \r\n  /**\r\n   * Message to display in the alert\r\n   */\r\n  message: string | string[];\r\n  \r\n  /**\r\n   * Optional className for custom styling\r\n   */\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * A reusable alert banner component that displays different types of alerts\r\n */\r\nconst AlertBanner: React.FC<AlertBannerProps> = ({ \r\n  type, \r\n  title, \r\n  message,\r\n  className = ''\r\n}) => {\r\n  const colors = {\r\n    warning: 'bg-yellow-50 border-yellow-400 text-yellow-800',\r\n    error: 'bg-red-50 border-red-400 text-red-800',\r\n    success: 'bg-green-50 border-green-400 text-green-800',\r\n    info: 'bg-blue-50 border-blue-400 text-blue-800'\r\n  };\r\n\r\n  const icons = {\r\n    warning: <AlertTriangle className=\"w-5 h-5 mr-2\" />,\r\n    error: <X className=\"w-5 h-5 mr-2\" />,\r\n    success: <Check className=\"w-5 h-5 mr-2\" />,\r\n    info: <Info className=\"w-5 h-5 mr-2\" />\r\n  };\r\n\r\n  const messageArray = Array.isArray(message) ? message : [message];\r\n\r\n  return (\r\n    <div className={`p-4 mb-4 border-l-4 rounded-r ${colors[type]} ${className}`}>\r\n      <div className=\"flex items-center\">\r\n        {icons[type]}\r\n        <h3 className=\"font-semibold\">{title}</h3>\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        {messageArray.map((msg, i) => (\r\n          <p key={i} className=\"text-sm leading-snug\">{msg}</p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertBanner; ","import React, { useState, useEffect } from 'react';\r\nimport { ChevronDown, AlertCircle, Loader2 } from 'lucide-react';\r\nimport { getAllToxicities, ToxicityData } from '@/services/toxicities';\r\nimport AlertBanner from '@/components/ui/AlertBanner';\r\n\r\nconst getSeverityColor = (severity: string) => {\r\n  if (severity.includes('4')) return 'bg-red-100 text-red-800';\r\n  if (severity.includes('3')) return 'bg-orange-100 text-orange-800';\r\n  if (severity.includes('2')) return 'bg-yellow-100 text-yellow-800';\r\n  return 'bg-green-100 text-green-800';\r\n};\r\n\r\nconst getSeverityBorderColor = (severity: string) => {\r\n  if (severity.includes('4')) return 'border-red-500';\r\n  if (severity.includes('3')) return 'border-orange-500';\r\n  if (severity.includes('2')) return 'border-yellow-500';\r\n  return 'border-green-500';\r\n};\r\n\r\nconst sanitizeToxicity = (data: Partial<ToxicityData>): ToxicityData => ({\r\n  id: data.id || crypto.randomUUID(),\r\n  name: data.name || 'Not specified',\r\n  severity: data.severity || 'Not specified',\r\n  recognition: data.recognition || 'Not specified',\r\n  management: Array.isArray(data.management) ? data.management : [],\r\n  doseGuidance: Array.isArray(data.doseGuidance) ? data.doseGuidance : [],\r\n  culpritDrugs: Array.isArray(data.culpritDrugs) ? data.culpritDrugs : []\r\n});\r\n\r\nconst AccordionItem = ({ toxicity, isOpen, onToggle }: {\r\n  toxicity: ToxicityData;\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}) => (\r\n  <div className={`bg-white/90 rounded-lg shadow-sm border-l-4 transition-all duration-200 ${getSeverityBorderColor(toxicity.severity)}`}>\r\n    <button\r\n      onClick={onToggle}\r\n      className=\"flex items-center justify-between w-full px-3 py-2 text-left hover:bg-gray-50/50\"\r\n      aria-expanded={isOpen}\r\n    >\r\n      <div className=\"flex items-center gap-2\">\r\n        <span className=\"text-base font-medium text-gray-900\">{toxicity.name}</span>\r\n        <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(toxicity.severity)}`}>\r\n          {toxicity.severity}\r\n        </span>\r\n        {toxicity.is_dose_limiting && (\r\n          <span className=\"px-2 py-0.5 rounded-full text-xs font-medium bg-red-50 text-red-700\">\r\n            DLT\r\n          </span>\r\n        )}\r\n      </div>\r\n      <ChevronDown \r\n        className={`h-4 w-4 text-gray-500 transform transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`} \r\n      />\r\n    </button>\r\n    \r\n    {isOpen && (\r\n      <div className=\"px-3 pb-3 text-sm\">\r\n        <div className=\"space-y-3 pt-1\">\r\n          {/* Clinical Details */}\r\n          <section>\r\n            <h3 className=\"font-medium text-gray-900 mb-1\">Clinical Details</h3>\r\n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n              <div>\r\n                <span className=\"text-gray-500\">Category:</span>\r\n                <span className=\"ml-1 text-gray-900\">{toxicity.clinical_category}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-500\">Grade:</span>\r\n                <span className=\"ml-1 text-gray-900\">{toxicity.grading_scale}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-500\">Onset:</span>\r\n                <span className=\"ml-1 text-gray-900\">{toxicity.expected_onset}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-500\">Reversibility:</span>\r\n                <span className=\"ml-1 text-gray-900\">{toxicity.reversibility}</span>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* Recognition & Symptoms */}\r\n          <section>\r\n            <h3 className=\"font-medium text-gray-900 mb-1\">Recognition</h3>\r\n            <p className=\"leading-snug text-gray-700 mb-2\">{toxicity.recognition}</p>\r\n            \r\n            {toxicity.symptoms.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <h4 className=\"text-sm font-medium text-gray-700\">Symptoms</h4>\r\n                <ul className=\"list-disc pl-4 space-y-0.5\">\r\n                  {toxicity.symptoms.map((symptom, i) => (\r\n                    <li key={i} className=\"text-gray-600\">{symptom}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          {/* Management */}\r\n          <section>\r\n            <h3 className=\"font-medium text-gray-900 mb-1\">Management</h3>\r\n            <ul className=\"list-disc pl-4 space-y-0.5\">\r\n              {toxicity.management.map((step, i) => (\r\n                <li key={i} className=\"text-gray-700 leading-snug\">{step}</li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n\r\n          {/* Monitoring */}\r\n          {toxicity.monitoring_recommendations.length > 0 && (\r\n            <section>\r\n              <h3 className=\"font-medium text-gray-900 mb-1\">Monitoring</h3>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"grid grid-cols-3 gap-2 text-sm\">\r\n                  <div>\r\n                    <span className=\"text-gray-500 block\">Initial:</span>\r\n                    <span className=\"text-gray-900\">{toxicity.monitoring_frequency.initial}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-gray-500 block\">Follow-up:</span>\r\n                    <span className=\"text-gray-900\">{toxicity.monitoring_frequency.followup}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-gray-500 block\">Long-term:</span>\r\n                    <span className=\"text-gray-900\">{toxicity.monitoring_frequency.longterm}</span>\r\n                  </div>\r\n                </div>\r\n                <ul className=\"list-disc pl-4 space-y-0.5 mt-2\">\r\n                  {toxicity.monitoring_recommendations.map((rec, i) => (\r\n                    <li key={i} className=\"text-gray-700 leading-snug\">{rec}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </section>\r\n          )}\r\n\r\n          {/* Laboratory & Imaging */}\r\n          {(toxicity.labs.length > 0 || toxicity.imaging.length > 0) && (\r\n            <section>\r\n              <h3 className=\"font-medium text-gray-900 mb-1\">Investigations</h3>\r\n              {toxicity.labs.length > 0 && (\r\n                <div className=\"mb-2\">\r\n                  <h4 className=\"text-sm font-medium text-gray-700\">Laboratory Tests</h4>\r\n                  <ul className=\"list-disc pl-4 space-y-0.5\">\r\n                    {toxicity.labs.map((lab, i) => (\r\n                      <li key={i} className=\"text-gray-600\">{lab}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {toxicity.imaging.length > 0 && (\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-gray-700\">Imaging</h4>\r\n                  <ul className=\"list-disc pl-4 space-y-0.5\">\r\n                    {toxicity.imaging.map((img, i) => (\r\n                      <li key={i} className=\"text-gray-600\">{img}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </section>\r\n          )}\r\n\r\n          {/* Dose Modification */}\r\n          {toxicity.dose_guidance.length > 0 && (\r\n            <section>\r\n              <h3 className=\"font-medium text-gray-900 mb-1\">Dose Modification</h3>\r\n              <div className=\"space-y-0.5\">\r\n                {toxicity.dose_guidance.map((guide, i) => (\r\n                  <p key={i} className=\"leading-snug text-gray-700\">{guide}</p>\r\n                ))}\r\n              </div>\r\n            </section>\r\n          )}\r\n\r\n          {/* Causative Agents */}\r\n          {(toxicity.culprit_drugs.length > 0 || toxicity.culprit_classes.length > 0) && (\r\n            <section>\r\n              <h3 className=\"font-medium text-gray-900 mb-1\">Causative Agents</h3>\r\n              {toxicity.culprit_drugs.length > 0 && (\r\n                <div className=\"flex flex-wrap gap-1 mb-1\">\r\n                  {toxicity.culprit_drugs.map((drug, i) => (\r\n                    <span key={i} className=\"px-2 py-0.5 text-xs bg-purple-50 text-purple-700 rounded-full\">\r\n                      {drug}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {toxicity.culprit_classes.length > 0 && (\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                  {toxicity.culprit_classes.map((cls, i) => (\r\n                    <span key={i} className=\"px-2 py-0.5 text-xs bg-blue-50 text-blue-700 rounded-full\">\r\n                      {cls}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </section>\r\n          )}\r\n\r\n          {/* Clinical Notes */}\r\n          {toxicity.notes_clinical_pearls && (\r\n            <section>\r\n              <h3 className=\"font-medium text-gray-900 mb-1\">Clinical Pearls</h3>\r\n              <p className=\"text-gray-700 leading-snug whitespace-pre-wrap\">\r\n                {toxicity.notes_clinical_pearls}\r\n              </p>\r\n            </section>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\n/**\r\n * Toxicity component displays information about various toxicities\r\n * related to oncology treatments and provides management guidance\r\n */\r\nconst Toxicity = () => {\r\n  const [toxicities, setToxicities] = useState<ToxicityData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openItem, setOpenItem] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchToxicities() {\r\n      try {\r\n        const data = await getAllToxicities();\r\n        setToxicities(data);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Unknown error';\r\n        setError(`Failed to load toxicity data: ${errorMessage}`);\r\n        console.error('Error fetching toxicities:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchToxicities();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col\">\r\n      <div className=\"sticky top-0 z-10 bg-white/90 backdrop-blur-sm border-b px-4 py-2\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900\">Toxicity Management</h2>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-hidden\">\r\n        <div className=\"h-full p-4\">\r\n          {loading ? (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n              <Loader2 className=\"h-6 w-6 text-indigo-600 animate-spin\" />\r\n            </div>\r\n          ) : error ? (\r\n            <AlertBanner \r\n              type=\"error\"\r\n              title=\"Error Loading Data\"\r\n              message={error}\r\n            />\r\n          ) : toxicities.length === 0 ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-gray-500\">\r\n              <AlertCircle className=\"h-8 w-8 mb-2\" />\r\n              <p>No toxicity data available</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-full overflow-y-auto scrollbar-thin pr-2\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                {toxicities.map((toxicity, index) => (\r\n                  <AccordionItem\r\n                    key={toxicity.id}\r\n                    toxicity={toxicity}\r\n                    isOpen={openItem === index}\r\n                    onToggle={() => setOpenItem(openItem === index ? null : index)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toxicity;\r\n","export const TREATMENT_PROTOCOLS = [\r\n  { diagnosis: \"Breast Cancer\", stage: \"I\", name: \"AC-T Protocol\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Diphenhydramine\", \"Fosaprepitant\"] },\r\n  { diagnosis: \"Breast Cancer\", stage: \"II\", name: \"FEC-T Protocol\", premedications: [\"Dexamethasone\", \"Aprepitant\", \"Ondansetron\", \"Lorazepam\"] },\r\n  { diagnosis: \"Breast Cancer\", stage: \"III\", name: \"TCHP Protocol\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Diphenhydramine\", \"Famotidine\"] },\r\n  { diagnosis: \"Breast Cancer\", stage: \"IV\", name: \"Palliative Capecitabine\", premedications: [\"Dexamethasone\", \"Ondansetron\"] },\r\n  { diagnosis: \"Colorectal Cancer\", stage: \"II\", name: \"FOLFOX6\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Calcium gluconate\", \"Magnesium sulfate\"] },\r\n  { diagnosis: \"Colorectal Cancer\", stage: \"III\", name: \"FOLFOX + Avastin\", premedications: [\"Dexamethasone\", \"Ranitidine\", \"Ondansetron\", \"Calcium gluconate\"] },\r\n  { diagnosis: \"Colorectal Cancer\", stage: \"IV\", name: \"FOLFIRI + Avastin\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Atropine\", \"Diphenhydramine\"] },\r\n  { diagnosis: \"Lung Cancer\", stage: \"I\", name: \"Surgery + Observation\", premedications: [] },\r\n  { diagnosis: \"Lung Cancer\", stage: \"III\", name: \"Concurrent Chemoradiation\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Fosaprepitant\"] },\r\n  { diagnosis: \"Lung Cancer\", stage: \"IV\", name: \"Platinum Doublet\", premedications: [\"Dexamethasone\", \"Granisetron\", \"Fosaprepitant\", \"Lorazepam\"] },\r\n  { diagnosis: \"Ovarian Cancer\", stage: \"III\", name: \"Carboplatin + Paclitaxel\", premedications: [\"Dexamethasone\", \"Diphenhydramine\", \"Ranitidine\", \"Ondansetron\"] },\r\n  { diagnosis: \"Lymphoma\", stage: \"Any\", name: \"R-CHOP\", premedications: [\"Acetaminophen\", \"Diphenhydramine\", \"Ondansetron\", \"Mesna\"] },\r\n  { diagnosis: \"Leukemia\", stage: \"Any\", name: \"7+3 Induction\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Allopurinol\"] },\r\n  { diagnosis: \"Melanoma\", stage: \"IV\", name: \"Immunotherapy (PD-1)\", premedications: [\"Acetaminophen\", \"Diphenhydramine\"] },\r\n  { diagnosis: \"Prostate Cancer\", stage: \"IV\", name: \"ADT + Docetaxel\", premedications: [\"Dexamethasone\", \"Ondansetron\", \"Famotidine\"] },\r\n  { diagnosis: \"Other\", stage: \"Any\", name: \"Consider Clinical Trial\", premedications: [] }\r\n];","import React, { useState, useEffect } from 'react';\r\nimport { Tab } from '@headlessui/react';\r\nimport { BarChart2, Activity, FolderOpen, Syringe, Bot, AlertTriangle } from 'lucide-react';\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { TREATMENT_PROTOCOLS } from \"../data/treatmentProtocolsData\";\r\n\r\nconst STORAGE_KEY = \"disease-progress-tracker-data\";\r\n\r\nconst DIAGNOSIS_PROTOCOL_MAP: { [key: string]: string[] } = {\r\n  \"Breast Cancer\": [\"AC→T\", \"FEC→D\", \"T-DM1\", \"Kadcyla\"],\r\n  \"Colorectal Cancer\": [\"FOLFOX\", \"FOLFIRI\", \"FOLFOXIRI\", \"CAPOX\"],\r\n  \"Lung Cancer\": [\"Carbo + Pemetrexed\", \"Osimertinib\", \"Durvalumab\"],\r\n  \"Prostate Cancer\": [\"Docetaxel\", \"Abiraterone\", \"Enzalutamide\"],\r\n  \"Lymphoma\": [\"R-CHOP\", \"ABVD\", \"Bendamustine + Rituximab\"],\r\n  \"Leukemia\": [\"7+3 Regimen\", \"FLAG-IDA\", \"Blinatumomab\"],\r\n  \"Melanoma\": [\"Nivolumab + Ipilimumab\", \"Pembrolizumab\"],\r\n  \"Ovarian Cancer\": [\"Carboplatin + Paclitaxel\", \"Bevacizumab\"],\r\n  \"Other\": []\r\n};\r\n\r\nconst PRIMARY_DIAGNOSES = [\r\n  \"Breast Cancer\",\r\n  \"Colorectal Cancer\",\r\n  \"Lung Cancer\",\r\n  \"Prostate Cancer\",\r\n  \"Ovarian Cancer\",\r\n  \"Lymphoma\",\r\n  \"Leukemia\",\r\n  \"Melanoma\",\r\n  \"Other\"\r\n] as const;\r\n\r\nconst HISTOLOGY_MUTATIONS = [\r\n  \"HER2 Positive\",\r\n  \"KRAS Mutant\",\r\n  \"EGFR Mutant\",\r\n  \"ALK Rearrangement\",\r\n  \"MSI-High\",\r\n  \"PD-L1 Positive\",\r\n  \"BRAF V600E\",\r\n  \"TP53 Mutant\",\r\n  \"Other\"\r\n] as const;\r\n\r\nconst tabs = [\r\n  { title: 'Disease Status', icon: BarChart2 },\r\n  { title: 'Performance Status', icon: Activity },\r\n  { title: 'Progression', icon: FolderOpen },\r\n  { title: 'Lines of Treatment', icon: Syringe },\r\n  { title: 'AI Assistant', icon: Bot }\r\n];\r\n\r\nconst DiseaseProgressTracker: React.FC = () => {\r\n  const { toast } = useToast();\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [isAiLoading, setIsAiLoading] = useState(false);\r\n  const [suggestedProtocols, setSuggestedProtocols] = useState<string[]>([]);\r\n\r\n  // Add helper functions before state declarations\r\n  const getSuggestedProtocols = () => {\r\n    if (!primaryDiagnosis || !stageAtDiagnosis) return [];\r\n    return TREATMENT_PROTOCOLS.filter(protocol => \r\n      protocol.diagnosis === (primaryDiagnosis === \"Other\" ? otherPrimaryDiagnosis : primaryDiagnosis) && \r\n      (protocol.stage === stageAtDiagnosis || protocol.stage === \"Any\")\r\n    );\r\n  };\r\n\r\n  const getSuggestedPremeds = () => {\r\n    const protocols = getSuggestedProtocols();\r\n    if (!protocols.length) return [];\r\n    return [...new Set(protocols.flatMap(p => p.premedications || []))];\r\n  };\r\n\r\n  // Disease Status\r\n  const [primaryDiagnosis, setPrimaryDiagnosis] = useState('');\r\n  const [otherPrimaryDiagnosis, setOtherPrimaryDiagnosis] = useState('');\r\n  const [stageAtDiagnosis, setStageAtDiagnosis] = useState('');\r\n  const [histologyMutation, setHistologyMutation] = useState('');\r\n  const [otherHistologyMutation, setOtherHistologyMutation] = useState('');\r\n  const [dateOfDiagnosis, setDateOfDiagnosis] = useState('');\r\n  const [diseaseNotes, setDiseaseNotes] = useState('');\r\n\r\n  // Performance Status\r\n  const [assessmentDate, setAssessmentDate] = useState('');\r\n  const [performanceScale, setPerformanceScale] = useState('');\r\n  const [performanceScore, setPerformanceScore] = useState('');\r\n  const [performanceNotes, setPerformanceNotes] = useState('');\r\n\r\n  // Progression\r\n  const [reassessmentDate, setReassessmentDate] = useState('');\r\n  const [imagingType, setImagingType] = useState('');\r\n  const [findingsSummary, setFindingsSummary] = useState('');\r\n  const [markerType, setMarkerType] = useState('');\r\n  const [markerValue, setMarkerValue] = useState('');\r\n  const [progressionNotes, setProgressionNotes] = useState('');\r\n\r\n  // Lines of Treatment\r\n  const [treatmentLine, setTreatmentLine] = useState('');\r\n  const [treatmentRegimen, setTreatmentRegimen] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [treatmentResponse, setTreatmentResponse] = useState('');\r\n  const [treatmentNotes, setTreatmentNotes] = useState('');\r\n\r\n  // AI Assistant\r\n  const [aiInput, setAiInput] = useState('');\r\n  const [aiResponse, setAiResponse] = useState<string | null>(null);\r\n\r\n  const generateAiSuggestions = () => {\r\n    const mutationContext = histologyMutation === 'Other' ? otherHistologyMutation : histologyMutation;\r\n    let suggestions = '🧠 Smart Treatment Suggestions:\\n';\r\n\r\n    // Use histology to suggest targeted therapies\r\n    if (mutationContext) {\r\n      switch(mutationContext) {\r\n        case 'HER2 Positive':\r\n          suggestions += '- Consider T-DM1 or Trastuzumab-based therapy\\n';\r\n          suggestions += '- Dual HER2 blockade may be appropriate\\n';\r\n          break;\r\n        case 'KRAS Mutant':\r\n          suggestions += '- KRAS mutation limits anti-EGFR therapy options\\n';\r\n          suggestions += '- Consider MEK inhibitor clinical trials\\n';\r\n          break;\r\n        case 'EGFR Mutant':\r\n          suggestions += '- EGFR TKI therapy recommended\\n';\r\n          suggestions += '- Monitor for T790M resistance mutation\\n';\r\n          break;\r\n        case 'PD-L1 Positive':\r\n          suggestions += '- Consider immunotherapy as monotherapy\\n';\r\n          suggestions += '- Evaluate combination chemo-immunotherapy\\n';\r\n          break;\r\n        default:\r\n          suggestions += '- Consider molecular profiling for targetable mutations\\n';\r\n      }\r\n    }\r\n\r\n    // Add performance status based recommendations\r\n    if (performanceScore) {\r\n      suggestions += '\\n💪 Performance Status Considerations:\\n';\r\n      const score = parseInt(performanceScore, 10);\r\n      \r\n      if (isNaN(score)) {\r\n        suggestions += '- Performance score invalid, please reassess\\n';\r\n      } else if (score <= 1) {\r\n        suggestions += '- Patient fit for full dose therapy\\n';\r\n      } else if (score === 2) {\r\n        suggestions += '- Consider dose reduction or weekly regimens\\n';\r\n        suggestions += '- Close monitoring for toxicity needed\\n';\r\n      } else {\r\n        suggestions += '- Best supportive care may be most appropriate\\n';\r\n        suggestions += '- Avoid aggressive therapy due to poor PS\\n';\r\n      }\r\n    }\r\n\r\n    // Treatment line specific suggestions\r\n    if (treatmentLine) {\r\n      suggestions += '\\n🎯 Line of Therapy Recommendations:\\n';\r\n      switch(treatmentLine) {\r\n        case '1st Line':\r\n          suggestions += '- Standard first-line protocols preferred\\n';\r\n          suggestions += '- Consider clinical trial enrollment\\n';\r\n          break;\r\n        case '2nd Line':\r\n          suggestions += '- Review first-line response duration\\n';\r\n          suggestions += '- Consider alternative drug class\\n';\r\n          break;\r\n        case '3rd Line':\r\n          suggestions += '- Molecular profiling guided therapy\\n';\r\n          suggestions += '- Early palliative care integration\\n';\r\n          break;\r\n        case 'Maintenance':\r\n          suggestions += '- Less intensive continuation approach\\n';\r\n          suggestions += '- Monitor tolerability closely\\n';\r\n          break;\r\n      }\r\n    }\r\n\r\n    return suggestions;\r\n  };\r\n\r\n  const handleAskAi = async () => {\r\n    try {\r\n      setIsAiLoading(true);\r\n      const aiSuggestions = generateAiSuggestions();\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Add warning if insufficient data\r\n      if (!primaryDiagnosis || !stageAtDiagnosis) {\r\n        toast({\r\n          title: \"Warning\",\r\n          description: \"Please provide diagnosis and stage for better suggestions\",\r\n          variant: \"destructive\"\r\n        });\r\n      }\r\n\r\n      setAiResponse(aiSuggestions);\r\n    } catch (error) {\r\n      console.error(\"AI Suggestion Error:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to generate AI suggestions\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setIsAiLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadFromLocalStorage = () => {\r\n    try {\r\n      const data = localStorage.getItem(STORAGE_KEY);\r\n      if (data) {\r\n        const parsed = JSON.parse(data);\r\n\r\n        // Disease Status\r\n        setPrimaryDiagnosis(parsed.diseaseStatus?.primaryDiagnosis || '');\r\n        setOtherPrimaryDiagnosis(parsed.diseaseStatus?.otherPrimaryDiagnosis || '');\r\n        setStageAtDiagnosis(parsed.diseaseStatus?.stageAtDiagnosis || '');\r\n        setHistologyMutation(parsed.diseaseStatus?.histologyMutation || '');\r\n        setOtherHistologyMutation(parsed.diseaseStatus?.otherHistologyMutation || '');\r\n        setDateOfDiagnosis(parsed.diseaseStatus?.dateOfDiagnosis || '');\r\n        setDiseaseNotes(parsed.diseaseStatus?.diseaseNotes || '');\r\n\r\n        // Performance Status\r\n        setAssessmentDate(parsed.performanceStatus?.assessmentDate || '');\r\n        setPerformanceScale(parsed.performanceStatus?.performanceScale || '');\r\n        setPerformanceScore(parsed.performanceStatus?.performanceScore || '');\r\n        setPerformanceNotes(parsed.performanceStatus?.performanceNotes || '');\r\n\r\n        // Progression\r\n        setReassessmentDate(parsed.progression?.reassessmentDate || '');\r\n        setImagingType(parsed.progression?.imagingType || '');\r\n        setFindingsSummary(parsed.progression?.findingsSummary || '');\r\n        setMarkerType(parsed.progression?.markerType || '');\r\n        setMarkerValue(parsed.progression?.markerValue || '');\r\n        setProgressionNotes(parsed.progression?.progressionNotes || '');\r\n\r\n        // Lines of Treatment\r\n        setTreatmentLine(parsed.linesOfTreatment?.treatmentLine || '');\r\n        setTreatmentRegimen(parsed.linesOfTreatment?.treatmentRegimen || '');\r\n        setStartDate(parsed.linesOfTreatment?.startDate || '');\r\n        setEndDate(parsed.linesOfTreatment?.endDate || '');\r\n        setTreatmentResponse(parsed.linesOfTreatment?.treatmentResponse || '');\r\n        setTreatmentNotes(parsed.linesOfTreatment?.treatmentNotes || '');\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Previous session data loaded!\",\r\n          variant: \"default\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to load from localStorage\", error);\r\n      toast({\r\n        title: \"Warning\", \r\n        description: \"Failed to load previous data\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveToLocalStorage = () => {\r\n    const payload = {\r\n      diseaseStatus: {\r\n        primaryDiagnosis,\r\n        otherPrimaryDiagnosis,\r\n        stageAtDiagnosis,\r\n        histologyMutation,\r\n        otherHistologyMutation,\r\n        dateOfDiagnosis,\r\n        diseaseNotes,\r\n      },\r\n      performanceStatus: {\r\n        assessmentDate,\r\n        performanceScale,\r\n        performanceScore,\r\n        performanceNotes,\r\n      },\r\n      progression: {\r\n        reassessmentDate,\r\n        imagingType,\r\n        findingsSummary,\r\n        markerType,\r\n        markerValue,\r\n        progressionNotes,\r\n      },\r\n      linesOfTreatment: {\r\n        treatmentLine,\r\n        treatmentRegimen,\r\n        startDate,\r\n        endDate,\r\n        treatmentResponse,\r\n        treatmentNotes,\r\n      }\r\n    };\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(payload));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFromLocalStorage();\r\n  }, []);\r\n\r\n  // Save Handlers\r\n  const handleSaveDiseaseStatus = () => {\r\n    saveToLocalStorage();\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Disease Status Saved!\",\r\n      variant: \"default\"\r\n    });\r\n  };\r\n\r\n  const handleSavePerformanceStatus = () => {\r\n    saveToLocalStorage();\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Performance Status Saved!\",\r\n      variant: \"default\"\r\n    });\r\n  };\r\n\r\n  const handleSaveProgression = () => {\r\n    saveToLocalStorage();\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Progression Record Saved!\",\r\n      variant: \"default\"\r\n    });\r\n  };\r\n\r\n  const handleSaveTreatmentLines = () => {\r\n    saveToLocalStorage();\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Line of Treatment Saved!\",\r\n      variant: \"default\"\r\n    });\r\n  };\r\n\r\n  const handleClearAllData = () => {\r\n    localStorage.removeItem(STORAGE_KEY);\r\n\r\n    // Disease Status\r\n    setPrimaryDiagnosis('');\r\n    setOtherPrimaryDiagnosis('');\r\n    setStageAtDiagnosis('');\r\n    setHistologyMutation('');\r\n    setOtherHistologyMutation('');\r\n    setDateOfDiagnosis('');\r\n    setDiseaseNotes('');\r\n\r\n    // Performance Status\r\n    setAssessmentDate('');\r\n    setPerformanceScale('');\r\n    setPerformanceScore('');\r\n    setPerformanceNotes('');\r\n\r\n    // Progression\r\n    setReassessmentDate('');\r\n    setImagingType('');\r\n    setFindingsSummary('');\r\n    setMarkerType('');\r\n    setMarkerValue('');\r\n    setProgressionNotes('');\r\n\r\n    // Lines of Treatment\r\n    setTreatmentLine('');\r\n    setTreatmentRegimen('');\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setTreatmentResponse('');\r\n    setTreatmentNotes('');\r\n\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"All data cleared!\",\r\n      variant: \"default\"\r\n    });\r\n  };\r\n\r\n  // Add effect for auto-updating protocol suggestions\r\n  useEffect(() => {\r\n    if (primaryDiagnosis) {\r\n      const protocols = DIAGNOSIS_PROTOCOL_MAP[primaryDiagnosis] || [];\r\n      setSuggestedProtocols(protocols);\r\n    } else {\r\n      setSuggestedProtocols([]);\r\n    }\r\n  }, [primaryDiagnosis]);\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white dark:bg-gray-900 rounded-2xl shadow-lg\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-indigo-600 dark:text-indigo-400\">📈 Disease & Progress Tracker</h2>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleClearAllData}\r\n          className=\"px-6 py-3 bg-gradient-to-r from-red-500 to-pink-500 text-white font-semibold rounded-lg hover:opacity-90 transition\"\r\n        >\r\n          🗑️ Clear All Data\r\n        </button>\r\n      </div>\r\n\r\n      <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\r\n        {/* Tab List */}\r\n        <Tab.List className=\"flex space-x-4 border-b pb-3 mb-6\">\r\n          {tabs.map((tab, index) => (\r\n            <Tab key={index} className={({ selected }) => `\r\n              flex items-center gap-2 cursor-pointer py-2 px-4 rounded-lg shadow transition-all duration-300\r\n              ${selected \r\n                ? \"bg-gradient-to-r from-indigo-500 to-teal-500 text-white\" \r\n                : \"bg-white text-gray-600 hover:text-indigo-500 hover:shadow-md\"}\r\n            `}>\r\n              <tab.icon className=\"w-5 h-5\" />\r\n              {tab.title}\r\n            </Tab>\r\n          ))}\r\n        </Tab.List>\r\n\r\n        <Tab.Panels className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-6\">\r\n\r\n          {/* Disease Status */}\r\n          <Tab.Panel>\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"primary-diagnosis\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Primary Diagnosis\r\n                </label>\r\n                <select \r\n                  id=\"primary-diagnosis\"\r\n                  value={primaryDiagnosis} \r\n                  onChange={(e) => setPrimaryDiagnosis(e.target.value)} \r\n                  className=\"w-full input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                  aria-label=\"Primary Diagnosis\"\r\n                >\r\n                  <option value=\"\">Select Primary Diagnosis</option>\r\n                  {PRIMARY_DIAGNOSES.map((diagnosis) => (\r\n                    <option key={diagnosis} value={diagnosis}>{diagnosis}</option>\r\n                  ))}\r\n                </select>\r\n                {primaryDiagnosis === 'Other' && (\r\n                  <div className=\"mt-2\">\r\n                    <label htmlFor=\"other-diagnosis\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Specify Other Diagnosis\r\n                    </label>\r\n                    <input\r\n                      id=\"other-diagnosis\"\r\n                      type=\"text\"\r\n                      value={otherPrimaryDiagnosis}\r\n                      onChange={(e) => setOtherPrimaryDiagnosis(e.target.value)}\r\n                      placeholder=\"Specify Other Primary Diagnosis\"\r\n                      className=\"w-full input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"stage-diagnosis\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Stage at Diagnosis\r\n                </label>\r\n                <select \r\n                  id=\"stage-diagnosis\"\r\n                  value={stageAtDiagnosis} \r\n                  onChange={(e) => setStageAtDiagnosis(e.target.value)} \r\n                  className=\"input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                  aria-label=\"Stage at Diagnosis\"\r\n                >\r\n                  <option value=\"\">Select Stage</option>\r\n                  <option value=\"I\">Stage I</option>\r\n                  <option value=\"II\">Stage II</option>\r\n                  <option value=\"III\">Stage III</option>\r\n                  <option value=\"IV\">Stage IV</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"histology-mutation\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Histology/Mutation\r\n                </label>\r\n                <select \r\n                  id=\"histology-mutation\"\r\n                  value={histologyMutation} \r\n                  onChange={(e) => setHistologyMutation(e.target.value)} \r\n                  className=\"w-full input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                  aria-label=\"Histology or Mutation\"\r\n                >\r\n                  <option value=\"\">Select Histology/Mutation</option>\r\n                  {HISTOLOGY_MUTATIONS.map((mutation) => (\r\n                    <option key={mutation} value={mutation}>{mutation}</option>\r\n                  ))}\r\n                </select>\r\n                {histologyMutation === 'Other' && (\r\n                  <div className=\"mt-2\">\r\n                    <label htmlFor=\"other-mutation\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Specify Other Mutation\r\n                    </label>\r\n                    <input\r\n                      id=\"other-mutation\"\r\n                      type=\"text\"\r\n                      value={otherHistologyMutation}\r\n                      onChange={(e) => setOtherHistologyMutation(e.target.value)}\r\n                      placeholder=\"Specify Other Histology/Mutation\"\r\n                      className=\"w-full input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"date-diagnosis\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Date of Diagnosis\r\n                </label>\r\n                <input \r\n                  id=\"date-diagnosis\"\r\n                  type=\"date\" \r\n                  value={dateOfDiagnosis} \r\n                  onChange={(e) => setDateOfDiagnosis(e.target.value)} \r\n                  className=\"input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\" \r\n                  aria-label=\"Date of Diagnosis\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"md:col-span-2\">\r\n                <label htmlFor=\"disease-notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Disease Notes\r\n                </label>\r\n                <textarea \r\n                  id=\"disease-notes\"\r\n                  value={diseaseNotes} \r\n                  onChange={(e) => setDiseaseNotes(e.target.value)} \r\n                  placeholder=\"Disease Notes...\" \r\n                  rows={4} \r\n                  className=\"textarea-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"flex justify-end mt-6\">\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleSaveDiseaseStatus} \r\n                className=\"save-button bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-4 py-2 rounded-lg hover:shadow-lg transition-all duration-200\"\r\n              >\r\n                Save Disease Status\r\n              </button>\r\n            </div>\r\n          </Tab.Panel>\r\n\r\n          {/* Performance Status */}\r\n          <Tab.Panel>\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label htmlFor=\"assessment-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Assessment Date\r\n                </label>\r\n                <input \r\n                  id=\"assessment-date\"\r\n                  type=\"date\" \r\n                  value={assessmentDate} \r\n                  onChange={(e) => setAssessmentDate(e.target.value)} \r\n                  className=\"input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\" \r\n                  aria-label=\"Assessment Date\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"performance-scale\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Performance Scale\r\n                </label>\r\n                <select \r\n                  id=\"performance-scale\"\r\n                  value={performanceScale} \r\n                  onChange={(e) => setPerformanceScale(e.target.value)} \r\n                  className=\"input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                  aria-label=\"Performance Scale\"\r\n                >\r\n                  <option value=\"\">Select Scale</option>\r\n                  <option value=\"ecog\">ECOG</option>\r\n                  <option value=\"karnofsky\">Karnofsky</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"performance-score\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Performance Score\r\n                </label>\r\n                <select \r\n                  id=\"performance-score\"\r\n                  value={performanceScore} \r\n                  onChange={(e) => setPerformanceScore(e.target.value)} \r\n                  className=\"input-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\r\n                  aria-label=\"Performance Score\"\r\n                >\r\n                  <option value=\"\">Select Score</option>\r\n                  <option value=\"0\">0 - Fully active</option>\r\n                  <option value=\"1\">1 - Restricted in strenuous activity</option>\r\n                  <option value=\"2\">2 - Ambulatory but unable to work</option>\r\n                  <option value=\"3\">3 - Limited self-care</option>\r\n                  <option value=\"4\">4 - Completely disabled</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"performance-notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Performance Notes\r\n                </label>\r\n                <textarea \r\n                  id=\"performance-notes\"\r\n                  value={performanceNotes} \r\n                  onChange={(e) => setPerformanceNotes(e.target.value)} \r\n                  placeholder=\"Performance Notes...\" \r\n                  rows={4} \r\n                  className=\"textarea-field focus:ring-2 focus:ring-indigo-500 transition-all duration-200\" \r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"flex justify-end mt-6\">\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleSavePerformanceStatus} \r\n                className=\"save-button bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-4 py-2 rounded-lg hover:shadow-lg transition-all duration-200\"\r\n              >\r\n                Save Performance Status\r\n              </button>\r\n            </div>\r\n          </Tab.Panel>\r\n\r\n          {/* Progression */}\r\n          <Tab.Panel>\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <input \r\n                type=\"date\" \r\n                value={reassessmentDate} \r\n                onChange={(e) => setReassessmentDate(e.target.value)} \r\n                className=\"input-field\" \r\n                aria-label=\"Reassessment Date\"\r\n                placeholder=\"Reassessment Date\"\r\n              />\r\n              <select \r\n                value={imagingType} \r\n                onChange={(e) => setImagingType(e.target.value)} \r\n                className=\"input-field\"\r\n                aria-label=\"Imaging Type\"\r\n              >\r\n                <option value=\"\">Select Imaging Type</option>\r\n                <option value=\"CT\">CT Scan</option>\r\n                <option value=\"MRI\">MRI</option>\r\n                <option value=\"PET\">PET Scan</option>\r\n                <option value=\"XRay\">X-Ray</option>\r\n              </select>\r\n              <textarea value={findingsSummary} onChange={(e) => setFindingsSummary(e.target.value)} placeholder=\"Findings Summary...\" rows={4} className=\"textarea-field\" />\r\n              <input type=\"text\" value={markerType} onChange={(e) => setMarkerType(e.target.value)} placeholder=\"Tumor Marker Type\" className=\"input-field\" />\r\n              <input type=\"number\" value={markerValue} onChange={(e) => setMarkerValue(e.target.value)} placeholder=\"Tumor Marker Value\" className=\"input-field\" />\r\n              <textarea value={progressionNotes} onChange={(e) => setProgressionNotes(e.target.value)} placeholder=\"Progression Notes...\" rows={4} className=\"textarea-field\" />\r\n            </form>\r\n\r\n            <div className=\"flex justify-end mt-6\">\r\n              <button type=\"button\" onClick={handleSaveProgression} className=\"save-button\">Save Progression</button>\r\n            </div>\r\n          </Tab.Panel>\r\n\r\n          {/* Lines of Treatment */}\r\n          <Tab.Panel>\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <select \r\n                value={treatmentLine} \r\n                onChange={(e) => setTreatmentLine(e.target.value)} \r\n                className=\"input-field\"\r\n                aria-label=\"Treatment Line\"\r\n              >\r\n                <option value=\"\">Select Line</option>\r\n                <option value=\"1st Line\">1st Line</option>\r\n                <option value=\"2nd Line\">2nd Line</option>\r\n                <option value=\"3rd Line\">3rd Line</option>\r\n                <option value=\"Maintenance\">Maintenance</option>\r\n              </select>\r\n              <input type=\"text\" value={treatmentRegimen} onChange={(e) => setTreatmentRegimen(e.target.value)} placeholder=\"Treatment Regimen\" className=\"input-field\" />\r\n              <input \r\n                type=\"date\" \r\n                value={startDate} \r\n                onChange={(e) => setStartDate(e.target.value)} \r\n                className=\"input-field\" \r\n                aria-label=\"Start Date\"\r\n                placeholder=\"Start Date\"\r\n              />\r\n              <input \r\n                type=\"date\" \r\n                value={endDate} \r\n                onChange={(e) => setEndDate(e.target.value)} \r\n                className=\"input-field\" \r\n                aria-label=\"End Date\"\r\n                placeholder=\"End Date\"\r\n              />\r\n              <select \r\n                value={treatmentResponse} \r\n                onChange={(e) => setTreatmentResponse(e.target.value)} \r\n                className=\"input-field\"\r\n                aria-label=\"Treatment Response\"\r\n              >\r\n                <option value=\"\">Select Response</option>\r\n                <option value=\"Complete Response\">Complete Response (CR)</option>\r\n                <option value=\"Partial Response\">Partial Response (PR)</option>\r\n                <option value=\"Stable Disease\">Stable Disease (SD)</option>\r\n                <option value=\"Progressive Disease\">Progressive Disease (PD)</option>\r\n              </select>\r\n              <textarea value={treatmentNotes} onChange={(e) => setTreatmentNotes(e.target.value)} placeholder=\"Treatment Notes...\" rows={4} className=\"textarea-field\" />\r\n            </form>\r\n\r\n            <div className=\"flex justify-end mt-6\">\r\n              <button type=\"button\" onClick={handleSaveTreatmentLines} className=\"save-button\">Save Line of Treatment</button>\r\n            </div>\r\n          </Tab.Panel>\r\n\r\n          {/* AI Assistant Panel */}\r\n          <Tab.Panel>\r\n            <div className=\"space-y-6\">\r\n              {/* Protocol Suggestions */}\r\n              {getSuggestedProtocols().length > 0 && (\r\n                <div className=\"p-6 bg-gradient-to-r from-indigo-50 to-blue-50 dark:from-indigo-900 dark:to-blue-900 rounded-xl shadow-sm mb-6 transform transition-all duration-300 hover:shadow-md hover:scale-[1.01]\">\r\n                  <h4 className=\"text-lg font-bold mb-3 text-indigo-700 dark:text-indigo-300 flex items-center\">\r\n                    <span className=\"mr-2 p-1 bg-indigo-100 dark:bg-indigo-800 rounded-full\">\r\n                      🎯\r\n                    </span>\r\n                    Matched Treatment Protocols\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 space-y-1.5\">\r\n                    {getSuggestedProtocols().map((protocol, index) => (\r\n                      <li key={index} className=\"flex items-start\">\r\n                        <span className=\"inline-block w-4 h-4 mr-2 mt-1 bg-indigo-400 dark:bg-indigo-600 rounded-full\"></span>\r\n                        <span>{protocol.name}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {/* Disease-Based Protocol Suggestions */}\r\n              {suggestedProtocols.length > 0 && (\r\n                <div className=\"p-6 bg-gradient-to-r from-purple-50 to-indigo-50 dark:from-purple-900 dark:to-indigo-900 rounded-xl shadow-sm mb-6 transform transition-all duration-300 hover:shadow-md hover:scale-[1.01]\">\r\n                  <h4 className=\"text-lg font-bold mb-3 text-purple-600 dark:text-purple-400 flex items-center\">\r\n                    <span className=\"mr-2 p-1 bg-purple-100 dark:bg-purple-800 rounded-full\">\r\n                      🎯\r\n                    </span>\r\n                    Standard Protocols for {primaryDiagnosis}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 space-y-1.5\">\r\n                    {suggestedProtocols.map((protocol, idx) => (\r\n                      <li key={idx} className=\"flex items-start\">\r\n                        <span className=\"inline-block w-4 h-4 mr-2 mt-1 bg-purple-400 dark:bg-purple-600 rounded-full\"></span>\r\n                        <span>{protocol}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {/* Premedication Suggestions */}\r\n              {getSuggestedPremeds().length > 0 && (\r\n                <div className=\"p-6 bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900 dark:to-teal-900 rounded-xl shadow-sm mb-6 transform transition-all duration-300 hover:shadow-md hover:scale-[1.01]\">\r\n                  <h4 className=\"text-lg font-bold mb-3 text-emerald-700 dark:text-emerald-300 flex items-center\">\r\n                    <span className=\"mr-2 p-1 bg-emerald-100 dark:bg-emerald-800 rounded-full\">\r\n                      💉\r\n                    </span>\r\n                    Suggested Pre-Medications\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 space-y-1.5\">\r\n                    {getSuggestedPremeds().map((premed, index) => (\r\n                      <li key={index} className=\"flex items-start\">\r\n                        <span className=\"inline-block w-4 h-4 mr-2 mt-1 bg-emerald-400 dark:bg-emerald-600 rounded-full\"></span>\r\n                        <span>{premed}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"p-6 bg-white dark:bg-gray-800 rounded-xl shadow-md border border-gray-100 dark:border-gray-700\">\r\n                <h4 className=\"text-lg font-bold mb-4 text-gray-800 dark:text-gray-200\">\r\n                  AI Treatment Assistant\r\n                </h4>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <label htmlFor=\"ai-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Case Summary (Optional)\r\n                  </label>\r\n                  <textarea \r\n                    id=\"ai-input\"\r\n                    value={aiInput} \r\n                    onChange={(e) => setAiInput(e.target.value)} \r\n                    placeholder=\"Enter case summary (e.g., Metastatic CRC after FOLFIRI)\" \r\n                    rows={4} \r\n                    className=\"w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400\"\r\n                  />\r\n                </div>\r\n\r\n                <button \r\n                  onClick={handleAskAi} \r\n                  disabled={isAiLoading}\r\n                  className=\"w-full px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-semibold rounded-lg shadow-md hover:shadow-lg transition-all duration-300 flex items-center justify-center\"\r\n                >\r\n                  {isAiLoading ? (\r\n                    <>\r\n                      <div className=\"w-5 h-5 border-3 border-t-transparent border-white rounded-full animate-spin mr-3\" />\r\n                      <span>Analyzing Patient Data...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span className=\"mr-2\">🧠</span>\r\n                      <span>Ask AI for Personalized Suggestions</span>\r\n                    </>\r\n                  )}\r\n                </button>\r\n\r\n                {aiResponse && (\r\n                  <div className=\"p-6 mt-6 bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-800 dark:to-blue-900 rounded-xl shadow-lg border border-blue-100 dark:border-blue-800 transform transition-all duration-500 animate-in fade-in-0 slide-in-from-bottom-4\">\r\n                    <h4 className=\"text-lg font-bold mb-3 text-blue-600 dark:text-blue-300 flex items-center\">\r\n                      <span className=\"mr-2 p-1 bg-blue-100 dark:bg-blue-800 rounded-full\">\r\n                        🧠\r\n                      </span>\r\n                      AI Personalized Recommendations\r\n                    </h4>\r\n                    <p className=\"text-gray-700 dark:text-gray-300 whitespace-pre-line leading-relaxed\">{aiResponse}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Tab.Panel>\r\n\r\n        </Tab.Panels>\r\n      </Tab.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseaseProgressTracker;\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-slate-200 dark:bg-slate-800\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }","import React, { useState } from 'react';\r\nimport {\r\n  X, AlertTriangle, Pill, Brain, Activity,\r\n  Beaker, Heart, Clock, Scale, BarChart,\r\n  Loader2\r\n} from 'lucide-react';\r\nimport type { Medication } from './../types';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Props interface for the main component\r\ninterface Props {\r\n  medication: Medication | null;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n// Types for array elements\r\ninterface SideEffect {\r\n  type: string;\r\n  description: string;\r\n  severity?: string;\r\n}\r\n\r\n// Loading skeleton component with DialogContent wrapper\r\nconst MedicationDetailSkeleton = () => (\r\n  <DialogContent className=\"w-[95vw] max-w-4xl h-[95vh] flex flex-col bg-white dark:bg-gray-900 p-0 gap-0\">\r\n    <div className=\"animate-pulse\">\r\n      <DialogHeader className=\"px-6 py-4 border-b dark:border-gray-800\">\r\n        <div className=\"space-y-3\">\r\n          <div className=\"h-8 w-64 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n          <div className=\"h-4 w-48 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n        </div>\r\n      </DialogHeader>\r\n      <div className=\"p-6 space-y-6\">\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <div className=\"h-6 w-24 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\r\n          <div className=\"h-6 w-32 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\r\n          <div className=\"h-6 w-28 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\r\n        </div>\r\n        {[...Array(3)].map((_, i) => (\r\n          <div key={i} className=\"space-y-4\">\r\n            <div className=\"h-6 w-48 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"h-4 w-full bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n              <div className=\"h-4 w-5/6 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n              <div className=\"h-4 w-4/6 bg-gray-200 dark:bg-gray-700 rounded\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </DialogContent>\r\n);\r\n\r\n// Error state component\r\nconst ErrorState = ({ error, onRetry }: { error: string; onRetry: () => void }) => (\r\n  <DialogContent className=\"w-[95vw] max-w-4xl h-[95vh] flex flex-col bg-white dark:bg-gray-900 p-0 gap-0\">\r\n    <div className=\"flex-1 flex items-center justify-center\">\r\n      <div className=\"p-6 flex flex-col items-center justify-center text-center space-y-4\">\r\n        <div className=\"p-3 rounded-full bg-red-100 text-red-600 dark:bg-red-900/30 dark:text-red-400\">\r\n          <AlertTriangle className=\"h-6 w-6\" />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Error Loading Medication Details</h3>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n        <button\r\n          onClick={onRetry}\r\n          className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 rounded-lg transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </DialogContent>\r\n);\r\n\r\n// Reusable section component\r\nconst Section: React.FC<{\r\n  title: string;\r\n  children: React.ReactNode;\r\n  icon?: React.ReactNode;\r\n}> = ({ title, icon, children }) => (\r\n  <div className=\"relative border border-gray-100 dark:border-gray-800 rounded-xl bg-gradient-to-b from-white/50 to-gray-50/50 dark:from-gray-900/50 dark:to-gray-800/50 p-6 backdrop-blur shadow-sm\">\r\n    <div className=\"flex items-center gap-3 mb-4\">\r\n      {icon && <div className=\"p-2 bg-gray-100/80 dark:bg-gray-800/80 rounded-lg\">{icon}</div>}\r\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-50\">\r\n        {title}\r\n      </h3>\r\n    </div>\r\n    {children}\r\n  </div>\r\n);\r\n\r\n// Reusable subsection component\r\nconst SubSection: React.FC<{\r\n  title: string;\r\n  children: React.ReactNode;\r\n  variant?: 'default' | 'warning' | 'danger';\r\n}> = ({ title, children, variant = 'default' }) => (\r\n  <div className={cn(\r\n    'rounded-lg p-4 backdrop-blur-sm',\r\n    variant === 'warning' && 'bg-yellow-100/30 dark:bg-yellow-900/30 border border-yellow-200/50 dark:border-yellow-700/50',\r\n    variant === 'danger' && 'bg-red-100/30 dark:bg-red-900/30 border border-red-200/50 dark:border-red-700/50',\r\n    variant === 'default' && 'bg-gray-100/30 dark:bg-gray-800/30 border border-gray-200/50 dark:border-gray-700/50'\r\n  )}>\r\n    <div className=\"flex items-center gap-2 mb-3\">\r\n      <h4 className={cn(\r\n        'text-sm font-medium',\r\n        variant === 'warning' && 'text-yellow-800 dark:text-yellow-200',\r\n        variant === 'danger' && 'text-red-800 dark:text-red-200',\r\n        variant === 'default' && 'text-gray-900 dark:text-gray-100'\r\n      )}>\r\n        {title}\r\n      </h4>\r\n    </div>\r\n    <div className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// Main modal component\r\nexport default function MedicationDetailModal({ medication, isOpen, onClose }: Props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Handle retry\r\n  const handleRetry = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    // Implement retry logic here if needed\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!medication) return null;\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Dialog open={isOpen} onOpenChange={onClose}>\r\n        <MedicationDetailSkeleton />\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Dialog open={isOpen} onOpenChange={onClose}>\r\n        <ErrorState error={error} onRetry={handleRetry} />\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  return (    <Dialog \r\n      open={isOpen} \r\n      onOpenChange={onClose}\r\n      aria-label={`${medication.name} Details`}\r\n    >\r\n      <DialogContent \r\n        className=\"w-[95vw] max-w-4xl h-[95vh] flex flex-col bg-white dark:bg-gray-900 p-0 gap-0\"\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        aria-labelledby=\"medication-title\"\r\n        aria-describedby=\"medication-description\"\r\n      >\r\n        <DialogHeader className=\"px-6 py-4 border-b dark:border-gray-800 sticky top-0 z-10 bg-white dark:bg-gray-900 backdrop-blur-sm bg-opacity-90\">\r\n          <div className=\"flex items-start justify-between gap-4\">\r\n            <div className=\"flex-1 min-w-0\">              <DialogTitle \r\n                id=\"medication-title\"\r\n                className=\"text-2xl font-bold text-gray-900 dark:text-gray-50 truncate\"\r\n              >\r\n                {medication.name}\r\n              </DialogTitle>\r\n              <p id=\"medication-description\" className=\"sr-only\">Detailed information about the medication, including dosing, side effects, and monitoring.</p>\r\n              {medication.brand_names?.length > 0 && (\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">\r\n                  {medication.brand_names.join(', ')}\r\n                </p>\r\n              )}\r\n            </div>            <button\r\n              onClick={onClose}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  e.preventDefault();\r\n                  onClose();\r\n                }\r\n              }}\r\n              className=\"absolute right-4 top-4 text-gray-400 hover:text-gray-700 dark:text-gray-500 dark:hover:text-gray-300 transition-colors rounded-full p-2 hover:bg-gray-100/50 dark:hover:bg-gray-800/50 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900\"\r\n              aria-label=\"Close medication details\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </DialogHeader>        <ScrollArea className=\"flex-1 h-[calc(95vh-4rem)] overflow-y-auto\" role=\"region\" aria-label=\"Medication details\">\r\n          <div className=\"p-6 space-y-8\">\r\n            {/* Header Tags */}\r\n            <div className=\"flex flex-wrap items-center gap-2\">\r\n              <Badge variant=\"outline\" className=\"px-2.5 py-1 whitespace-nowrap\">\r\n                {medication.classification}\r\n              </Badge>\r\n              {medication.is_chemotherapy && (\r\n                <Badge variant=\"secondary\" className=\"bg-yellow-500/10 text-yellow-700 dark:bg-yellow-500/20 dark:text-yellow-300\">\r\n                  <Activity className=\"w-3.5 h-3.5 mr-1\" />\r\n                  Chemotherapy\r\n                </Badge>\r\n              )}\r\n              {medication.is_immunotherapy && (\r\n                <Badge variant=\"secondary\" className=\"bg-green-500/10 text-green-700 dark:bg-green-500/20 dark:text-green-300\">\r\n                  <Brain className=\"w-3.5 h-3.5 mr-1\" />\r\n                  Immunotherapy\r\n                </Badge>\r\n              )}\r\n              {medication.is_targeted_therapy && (\r\n                <Badge variant=\"secondary\" className=\"bg-purple-500/10 text-purple-700 dark:bg-purple-500/20 dark:text-purple-300\">\r\n                  <Pill className=\"w-3.5 h-3.5 mr-1\" />\r\n                  Targeted Therapy\r\n                </Badge>\r\n              )}\r\n              {medication.is_orphan_drug && (\r\n                <Badge variant=\"secondary\" className=\"bg-blue-500/10 text-blue-700 dark:bg-blue-500/20 dark:text-blue-300\">\r\n                  <Beaker className=\"w-3.5 h-3.5 mr-1\" />\r\n                  Orphan Drug\r\n                </Badge>\r\n              )}\r\n            </div>            {/* Black Box Warning */}\r\n            {medication.black_box_warning && (\r\n              <div className=\"relative p-6 border-2 border-red-500 dark:border-red-700 bg-gradient-to-br from-red-50 to-red-100/50 dark:from-red-950/50 dark:to-red-900/30 rounded-xl shadow-lg backdrop-blur-sm\">\r\n                <div className=\"absolute -top-3 left-4 px-2 py-0.5 bg-red-500 text-white text-xs font-bold uppercase tracking-wider rounded\">\r\n                  Black Box Warning\r\n                </div>\r\n                <div className=\"flex gap-3 items-start mt-2\">\r\n                  <AlertTriangle className=\"w-5 h-5 flex-shrink-0 text-red-500 dark:text-red-400\" />\r\n                  <div className=\"flex-1 text-red-800 dark:text-red-200 whitespace-pre-wrap\">\r\n                    {medication.black_box_warning}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Overview */}\r\n            {medication.mechanism && (\r\n              <Section title=\"Mechanism of Action\" icon={<Beaker className=\"h-5 w-5 text-blue-500\" />}>\r\n                <p className=\"text-gray-700 dark:text-gray-300\">{medication.mechanism}</p>\r\n                {medication.summary && (\r\n                  <p className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">{medication.summary}</p>\r\n                )}\r\n              </Section>\r\n            )}\r\n\r\n            {/* Indications */}\r\n            {medication.indications && (\r\n              <Section title=\"Indications\" icon={<Activity className=\"h-5 w-5 text-green-500\" />}>\r\n                <div className=\"grid gap-6 sm:grid-cols-2\">\r\n                  {medication.indications?.cancer_types?.length > 0 && (\r\n                    <SubSection title=\"Cancer Types\">\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {medication.indications.cancer_types.map((type, index) => (\r\n                          <Badge key={index} variant=\"secondary\">{type}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.indications?.biomarkers?.length > 0 && (\r\n                    <SubSection title=\"Biomarkers\">\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {medication.indications.biomarkers.map((marker, index) => (\r\n                          <Badge key={index} variant=\"outline\">{marker}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.indications?.staging?.length > 0 && (\r\n                    <SubSection title=\"Disease Stage\">\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {medication.indications.staging.map((stage, index) => (\r\n                          <Badge key={index} variant=\"secondary\">{stage}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.indications?.line_of_therapy?.length > 0 && (\r\n                    <SubSection title=\"Line of Therapy\">\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {medication.indications.line_of_therapy.map((line, index) => (\r\n                          <Badge key={index} variant=\"secondary\">{line}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Dosing */}\r\n            {(medication.dosing || medication.administration) && (\r\n              <Section title=\"Dosing & Administration\" icon={<Scale className=\"h-5 w-5 text-blue-500\" />}>\r\n                <div className=\"space-y-4\">\r\n                  {medication.dosing?.standard && (\r\n                    <SubSection title=\"Standard Dose\">\r\n                      <div className=\"space-y-2\">\r\n                        <p className=\"text-gray-700 dark:text-gray-300\">{medication.dosing.standard}</p>\r\n                        {medication.administration && (\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            Administration: {medication.administration}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.dosing?.schedule && (\r\n                    <SubSection title=\"Schedule\">\r\n                      <div className=\"space-y-2\">\r\n                        <p className=\"text-gray-700 dark:text-gray-300\">{medication.dosing.schedule}</p>\r\n                        {medication.dosing.cycle_length && (\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            Cycle Length: {medication.dosing.cycle_length}\r\n                          </p>\r\n                        )}\r\n                        {medication.dosing.duration && (\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            Duration: {medication.dosing.duration}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.dosing?.adjustments?.length > 0 && (\r\n                    <SubSection title=\"Dose Adjustments\" variant=\"warning\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.dosing.adjustments.map((adjustment, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{adjustment}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Side Effects */}\r\n            {medication.side_effects && (\r\n              <Section title=\"Side Effects\" icon={<Heart className=\"h-5 w-5 text-red-500\" />}>\r\n                <div className=\"grid gap-6 sm:grid-cols-2\">\r\n                  {medication.side_effects.common?.length > 0 && (\r\n                    <SubSection title=\"Common Side Effects\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.side_effects.common.map((effect, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{effect}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.side_effects.severe?.length > 0 && (\r\n                    <SubSection title=\"Severe Side Effects\" variant=\"danger\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.side_effects.severe.map((effect, index) => (\r\n                          <li key={index} className=\"text-red-700 dark:text-red-300\">{effect}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.side_effects.monitoring?.length > 0 && (\r\n                    <SubSection title=\"Monitoring Required\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.side_effects.monitoring.map((item, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.side_effects.management?.length > 0 && (\r\n                    <SubSection title=\"Management\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.side_effects.management.map((item, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Monitoring */}\r\n            {medication.monitoring && (\r\n              <Section title=\"Monitoring\" icon={<BarChart className=\"h-5 w-5 text-indigo-500\" />}>\r\n                <div className=\"space-y-4\">\r\n                  {medication.pre_treatment_tests?.length > 0 && (\r\n                    <SubSection title=\"Pre-Treatment Tests\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.pre_treatment_tests.map((test, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{test}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.monitoring.baseline?.length > 0 && (\r\n                    <SubSection title=\"Baseline Tests\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.monitoring.baseline.map((test, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{test}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.monitoring.ongoing?.length > 0 && (\r\n                    <SubSection title=\"Ongoing Monitoring\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.monitoring.ongoing.map((test, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{test}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}                  {medication.monitoring?.parameters?.length > 0 && (\r\n                    <SubSection title=\"Parameters\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.monitoring.parameters.map((param, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{param}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.monitoring?.frequency && (\r\n                    <SubSection title=\"Frequency\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">{medication.monitoring.frequency}</p>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Interactions */}\r\n            {(medication.interactions || medication.contraindications?.length > 0) && (\r\n              <Section title=\"Drug Interactions\" icon={<Activity className=\"h-5 w-5 text-amber-500\" />}>\r\n                <div className=\"space-y-4\">\r\n                  {(medication.interactions?.contraindications?.length > 0 || medication.contraindications?.length > 0) && (\r\n                    <SubSection title=\"Contraindications\" variant=\"danger\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {[\r\n                          ...(medication.interactions?.contraindications || []),\r\n                          ...(medication.contraindications || [])\r\n                        ].map((item, index) => (\r\n                          <li key={index} className=\"text-red-700 dark:text-red-300\">{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}                  {medication.interactions?.drugs?.length > 0 && (\r\n                    <SubSection title=\"Interacting Medications\">\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {medication.interactions?.drugs?.map((drug, index) => (\r\n                          <Badge key={index} variant=\"outline\">{drug}</Badge>\r\n                        ))}\r\n                      </div>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.interactions?.precautions?.length > 0 && (\r\n                    <SubSection title=\"Precautions\" variant=\"warning\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.interactions?.precautions?.map((precaution, index) => (\r\n                          <li key={index} className=\"text-amber-700 dark:text-amber-300\">\r\n                            {precaution}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Special Considerations */}\r\n            {medication.special_considerations && (\r\n              <Section title=\"Special Considerations\" icon={<AlertTriangle className=\"h-5 w-5 text-orange-500\" />}>\r\n                <div className=\"space-y-4\">\r\n                  {medication.special_considerations.pregnancy && (\r\n                    <SubSection title=\"Pregnancy\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.special_considerations.pregnancy}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.special_considerations.elderly && (\r\n                    <SubSection title=\"Elderly\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.special_considerations.elderly}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.special_considerations.renal && (\r\n                    <SubSection title=\"Renal Impairment\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.special_considerations.renal}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.special_considerations.hepatic && (\r\n                    <SubSection title=\"Hepatic Impairment\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.special_considerations.hepatic}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}                  {medication.special_considerations?.other?.length > 0 && (\r\n                    <SubSection title=\"Other Considerations\">\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        {medication.special_considerations?.other?.map((item, index) => (\r\n                          <li key={index} className=\"text-gray-700 dark:text-gray-300\">{item}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Pharmacokinetics */}\r\n            {medication.pharmacokinetics && (\r\n              <Section title=\"Pharmacokinetics\" icon={<Clock className=\"h-5 w-5 text-purple-500\" />}>\r\n                <div className=\"grid gap-4 sm:grid-cols-2\">                  {medication.pharmacokinetics?.half_life && (\r\n                    <SubSection title=\"Half-Life\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.pharmacokinetics.half_life}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.pharmacokinetics.metabolism && (\r\n                    <SubSection title=\"Metabolism\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.pharmacokinetics.metabolism}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.pharmacokinetics.excretion && (\r\n                    <SubSection title=\"Excretion\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.pharmacokinetics.excretion}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.pharmacokinetics.bioavailability && (\r\n                    <SubSection title=\"Bioavailability\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.pharmacokinetics.bioavailability}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                  {medication.pharmacokinetics.protein_binding && (\r\n                    <SubSection title=\"Protein Binding\">\r\n                      <p className=\"text-gray-700 dark:text-gray-300\">\r\n                        {medication.pharmacokinetics.protein_binding}\r\n                      </p>\r\n                    </SubSection>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n            )}\r\n\r\n            {/* Sources and Routine Monitoring */}\r\n            <div className=\"grid gap-6 sm:grid-cols-2\">\r\n              {medication.reference_sources?.length > 0 && (\r\n                <Section title=\"References\" icon={<Pill className=\"h-5 w-5 text-gray-500\" />}>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {medication.reference_sources.map((source, index) => (\r\n                      <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                        {source}\r\n                      </Badge>\r\n                    ))}\r\n                  </div>\r\n                </Section>\r\n              )}\r\n              {medication.routine_monitoring?.length > 0 && (\r\n                <Section title=\"Routine Testing\" icon={<BarChart className=\"h-5 w-5 text-gray-500\" />}>\r\n                  <ul className=\"list-disc list-inside space-y-1\">\r\n                    {medication.routine_monitoring.map((test, index) => (\r\n                      <li key={index} className=\"text-gray-700 dark:text-gray-300\">{test}</li>\r\n                    ))}\r\n                  </ul>\r\n                </Section>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </ScrollArea>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}","/**\r\n * Audio Feedback Utility\r\n * \r\n * Provides consistent audio feedback throughout the application.\r\n * Uses the Web Audio API to generate sounds for different user interactions.\r\n */\r\n\r\ntype SoundType = 'sort' | 'select' | 'error' | 'success' | 'warning';\r\n\r\n/**\r\n * Plays a sound effect based on the specified type\r\n * @param type The type of sound to play\r\n */\r\nexport const playSound = (type: SoundType) => {\r\n  try {\r\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n    const oscillator = audioContext.createOscillator();\r\n    const gainNode = audioContext.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(audioContext.destination);\r\n\r\n    // Configure sound based on type\r\n    switch (type) {\r\n      case 'sort':\r\n        oscillator.type = 'sine';\r\n        oscillator.frequency.setValueAtTime(440, audioContext.currentTime); // A4 note\r\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + 0.1);\r\n        break;\r\n      case 'select':\r\n        oscillator.type = 'sine';\r\n        oscillator.frequency.setValueAtTime(520, audioContext.currentTime);\r\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.05);\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + 0.05);\r\n        break;\r\n      case 'success':\r\n        oscillator.type = 'sine';\r\n        oscillator.frequency.setValueAtTime(780, audioContext.currentTime);\r\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.15);\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + 0.15);\r\n        break;\r\n      case 'warning':\r\n        oscillator.type = 'triangle';\r\n        oscillator.frequency.setValueAtTime(320, audioContext.currentTime);\r\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + 0.3);\r\n        break;\r\n      case 'error':\r\n        oscillator.type = 'square';\r\n        oscillator.frequency.setValueAtTime(220, audioContext.currentTime);\r\n        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.2);\r\n        oscillator.start(audioContext.currentTime);\r\n        oscillator.stop(audioContext.currentTime + 0.2);\r\n        break;\r\n    }\r\n  } catch (e) {\r\n    console.warn('Audio feedback not supported', e);\r\n  }\r\n};\r\n\r\n/**\r\n * Checks if audio feedback is supported in the current browser\r\n * @returns boolean indicating if audio is supported\r\n */\r\nexport const isAudioSupported = (): boolean => {\r\n  return typeof window !== 'undefined' && \r\n         (typeof window.AudioContext !== 'undefined' || \r\n          typeof (window as any).webkitAudioContext !== 'undefined');\r\n}; ","import { useEffect, useState } from 'react';\r\n\r\nexport function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React from 'react';\r\nimport { AlertTriangle } from 'lucide-react';\r\n\r\nexport class MedicationErrorBoundary extends React.Component<{\r\n  children: React.ReactNode;\r\n  fallback?: React.ReactNode;\r\n}> {\r\n  state = { hasError: false, error: null };\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('Medication component error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback || (\r\n        <div className=\"p-6 text-center\">\r\n          <div className=\"flex items-center justify-center gap-2 text-red-600 font-medium mb-2\">\r\n            <AlertTriangle className=\"h-5 w-5\" />\r\n            <h2>Error loading medication data</h2>\r\n          </div>\r\n          <p className=\"text-gray-600 text-sm\">\r\n            Please try refreshing the page. If the problem persists, contact support.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { Search, Filter, X, Pill, Link } from 'lucide-react';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport MedicationDetailModal from './MedicationDetailModal';\r\nimport type { Medication, SortConfig, SortField } from './../types';\r\nimport { playSound, isAudioSupported } from '@/utils/audioFeedback';\r\nimport { useDebounce } from '@/hooks/useDebounce';\r\nimport { MedicationErrorBoundary } from '@/components/MedicationErrorBoundary';\r\n\r\n// Utility function for string comparison in sorting\r\nconst compareStrings = (a: string, b: string) => a.localeCompare(b);\r\n\r\n// Memoized filter and sort function\r\nconst useMedicationsFilter = (\r\n  medications: Medication[],\r\n  searchQuery: string,\r\n  selectedClass: string,\r\n  showPremedsOnly: boolean,\r\n  sort: SortConfig\r\n) => {\r\n  return useMemo(() => {\r\n    // First apply filters\r\n    const filtered = medications.filter(med => {\r\n      if (searchQuery) {\r\n        const searchLower = searchQuery.toLowerCase();\r\n        const matchesName = (med.name || '').toLowerCase().includes(searchLower);\r\n        const matchesBrand = (med.brand_names || []).some(name => \r\n          (name || '').toLowerCase().includes(searchLower)\r\n        );\r\n        const matchesClassification = (med.classification || '').toLowerCase().includes(searchLower);\r\n        const matchesCancerTypes = (med.indications?.cancer_types || []).some(type =>\r\n          (type || '').toLowerCase().includes(searchLower)\r\n        );\r\n\r\n        if (!matchesName && !matchesBrand && !matchesClassification && !matchesCancerTypes) {\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      // Check classification filter\r\n      if (selectedClass && !med.classification?.includes(selectedClass)) {\r\n        return false;\r\n      }\r\n      \r\n      // Check for premeds only filter\r\n      if (showPremedsOnly) {\r\n        const premedClasses = ['Antiemetic', 'Anxiolytic', 'Antihistamine', 'Corticosteroid'];\r\n        return premedClasses.some(cls => med.classification?.includes(cls));\r\n      }\r\n      \r\n      return true;\r\n    });\r\n\r\n    // Then apply sorting\r\n    return [...filtered].sort((a, b) => {\r\n      const order = sort.order === 'asc' ? 1 : -1;\r\n      \r\n      switch (sort.field) {\r\n        case 'name':\r\n          return compareStrings(a.name, b.name) * order;\r\n        case 'classification':\r\n          return compareStrings(a.classification, b.classification) * order;\r\n        case 'updated_at':\r\n          return (\r\n            (new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime()) * \r\n            order\r\n          );\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }, [medications, searchQuery, selectedClass, showPremedsOnly, sort]);\r\n};\r\n\r\n// Create a loading and error state interface\r\ninterface MedicationLoadingProps {\r\n  text: string;\r\n}\r\n\r\nconst MedicationSkeleton = () => (\r\n  <div className=\"bg-white/30 backdrop-blur-md border border-white/20 rounded-xl shadow-lg p-6 animate-pulse\" data-testid=\"medication-skeleton\">\r\n    <div className=\"flex justify-between items-start\">\r\n      <div className=\"space-y-3\">\r\n        <div className=\"h-6 w-48 bg-gray-200 rounded-md\"></div>\r\n        <div className=\"h-4 w-32 bg-gray-200 rounded-md\"></div>\r\n      </div>\r\n      <div className=\"h-6 w-24 bg-gray-200 rounded-full\"></div>\r\n    </div>\r\n    <div className=\"mt-4 flex gap-2\">\r\n      <div className=\"h-5 w-20 bg-gray-200 rounded-md\"></div>\r\n      <div className=\"h-5 w-24 bg-gray-200 rounded-md\"></div>\r\n      <div className=\"h-5 w-16 bg-gray-200 rounded-md\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\ninterface MedicationsViewProps {\r\n  initialData?: Medication[];\r\n}\r\n\r\nconst getClassificationStyle = (classification: string): string => {\r\n  // Add pre-medication styles\r\n  if (classification.includes('Antiemetic')) {\r\n    return 'bg-teal-100 text-teal-800 border border-teal-200';\r\n  }\r\n  if (classification.includes('Antihistamine')) {\r\n    return 'bg-cyan-100 text-cyan-800 border border-cyan-200';\r\n  }\r\n  if (classification.includes('Corticosteroid')) {\r\n    return 'bg-emerald-100 text-emerald-800 border border-emerald-200';\r\n  }\r\n  if (classification.includes('Anxiolytic')) {\r\n    return 'bg-indigo-100 text-indigo-800 border border-indigo-200';\r\n  }\r\n  // Existing medication styles\r\n  if (classification.includes('Chemotherapy')) {\r\n    return 'bg-yellow-100 text-yellow-800 border border-yellow-200';\r\n  }\r\n  if (classification.includes('Checkpoint Inhibitor')) {\r\n    return 'bg-green-100 text-green-800 border border-green-200';\r\n  }\r\n  if (classification.includes('Monoclonal Antibody')) {\r\n    return 'bg-purple-100 text-purple-800 border border-purple-200';\r\n  }\r\n  if (classification.includes('Conjugate')) {\r\n    return 'bg-pink-100 text-pink-800 border border-pink-200';\r\n  }\r\n  if (classification.includes('Inhibitor')) {\r\n    return 'bg-blue-100 text-blue-800 border border-blue-200';\r\n  }\r\n  if (classification.includes('SERM')) {\r\n    return 'bg-orange-100 text-orange-800 border border-orange-200';\r\n  }\r\n  return 'bg-gray-100 text-gray-800 border border-gray-200';\r\n};\r\n\r\nconst getShortClassification = (classification: string): string => {\r\n  // Add pre-medication abbreviations\r\n  if (classification.includes('5-HT3 Receptor Antagonist')) {\r\n    return '5-HT3 RA';\r\n  }\r\n  if (classification.includes('NK1 Receptor Antagonist')) {\r\n    return 'NK1 RA';\r\n  }\r\n  // Existing abbreviations\r\n  if (classification.includes('Checkpoint Inhibitor')) {\r\n    return classification.replace('Checkpoint Inhibitor', 'Inhibitor');\r\n  }\r\n  if (classification.includes('Monoclonal Antibody')) {\r\n    return classification.replace('Monoclonal Antibody', 'mAb');\r\n  }\r\n  if (classification.includes('Tyrosine Kinase Inhibitor')) {\r\n    return classification.replace('Tyrosine Kinase Inhibitor', 'TKI');\r\n  }\r\n  if (classification.includes('Antibody-Drug Conjugate')) {\r\n    return classification.replace('Targeted Antibody-Drug Conjugate', 'ADC');\r\n  }\r\n  if (classification === 'Selective Estrogen Receptor Modulator (SERM)') {\r\n    return 'SERM';\r\n  }\r\n  return classification;\r\n};\r\n\r\nconst STORAGE_KEY = 'medications-sort-preference';\r\n\r\nconst getSavedSort = (): SortConfig => {\r\n  try {\r\n    const saved = localStorage.getItem(STORAGE_KEY);\r\n    if (saved) {\r\n      const parsed = JSON.parse(saved) as SortConfig;\r\n      if (\r\n        parsed.field &&\r\n        ['name', 'classification', 'updated_at'].includes(parsed.field) &&\r\n        parsed.order &&\r\n        ['asc', 'desc'].includes(parsed.order)\r\n      ) {\r\n        return parsed;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to parse saved sort preference');\r\n  }\r\n  return { field: 'name', order: 'asc' };\r\n};\r\n\r\nexport default function MedicationsView({ initialData }: MedicationsViewProps) {\r\n  const searchInputRef = React.useRef<HTMLInputElement>(null);\r\n  const [medications, setMedications] = useState<Medication[]>(initialData || []);\r\n  const [loading, setLoading] = useState(!initialData);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const debouncedSearch = useDebounce(searchQuery, 300);\r\n  const [selectedClass, setSelectedClass] = useState<string>('');\r\n  const [showPremedsOnly, setShowPremedsOnly] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedMedication, setSelectedMedication] = useState<Medication | null>(null);\r\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1);\r\n  const [sort, setSort] = useState<SortConfig>(getSavedSort());\r\n  const [sortFeedback, setSortFeedback] = useState<string>('');\r\n\r\n  // Use memoized filter/sort function\r\n  const filteredMedications = useMedicationsFilter(\r\n    medications,\r\n    debouncedSearch,\r\n    selectedClass,\r\n    showPremedsOnly,\r\n    sort\r\n  );\r\n\r\n  // Handle index changes with URL updates\r\n  const handleIndexChange = (newIndex: number) => {\r\n    if (newIndex !== focusedIndex) {\r\n      setFocusedIndex(newIndex);\r\n      playSound('select');\r\n      if (medications[newIndex]) {\r\n        const url = new URL(window.location.href);\r\n        url.searchParams.set('med', medications[newIndex].id);\r\n        window.history.replaceState({}, '', url);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Show temporary feedback when using keyboard shortcuts\r\n  const showSortFeedback = (message: string) => {\r\n    setSortFeedback(message);\r\n    setTimeout(() => setSortFeedback(''), 1000);\r\n  };\r\n\r\n  // Update URL parameters when state changes\r\n  const updateUrlParams = (params: {\r\n    search?: string;\r\n    class?: string;\r\n    sort?: string;\r\n    order?: string;\r\n    med?: string;\r\n  }) => {\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    const url = new URL(window.location.href);\r\n    Object.entries(params).forEach(([key, value]) => {\r\n      if (value) {\r\n        url.searchParams.set(key === 'search' ? 'q' : key, value);\r\n      } else {\r\n        url.searchParams.delete(key === 'search' ? 'q' : key);\r\n      }\r\n    });\r\n    window.history.replaceState({}, '', url);\r\n  };\r\n\r\n  // Update sort and show feedback\r\n  const updateSort = (newSort: SortConfig, feedback: string) => {\r\n    setSort(newSort);\r\n    showSortFeedback(feedback);\r\n    updateUrlParams({\r\n      sort: newSort.field,\r\n      order: newSort.order\r\n    });\r\n  };\r\n\r\n  // Persist sort preferences\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(sort));\r\n    } catch (e) {\r\n      console.warn('Failed to save sort preference');\r\n    }\r\n  }, [sort]);\r\n\r\n  const handleKeyNavigation = (e: KeyboardEvent) => {\r\n    if (document.activeElement?.tagName === 'INPUT') return;\r\n    \r\n    switch (e.key) {\r\n      case 'ArrowDown':\r\n      case 'j': {\r\n        e.preventDefault();\r\n        const nextIndex = focusedIndex < medications.length - 1 ? focusedIndex + 1 : focusedIndex;\r\n        handleIndexChange(nextIndex);\r\n        break;\r\n      }\r\n      case 'ArrowUp':\r\n      case 'k': {\r\n        e.preventDefault();\r\n        const nextIndex = focusedIndex > 0 ? focusedIndex - 1 : focusedIndex;\r\n        handleIndexChange(nextIndex);\r\n        break;\r\n      }\r\n      case 'Enter':\r\n        e.preventDefault();\r\n        if (focusedIndex >= 0 && focusedIndex < medications.length) {\r\n          setSelectedMedication(medications[focusedIndex]);\r\n          playSound('select');\r\n        }\r\n        break;\r\n      case 'Home':\r\n        e.preventDefault();\r\n        setFocusedIndex(0);\r\n        break;\r\n      case 'End':\r\n        e.preventDefault();\r\n        setFocusedIndex(medications.length - 1);\r\n        break;\r\n      // Sort shortcuts\r\n      case 'n':\r\n      case 'c':\r\n      case 'u':\r\n      case 's':\r\n      case 'l':\r\n        if (e.altKey) {\r\n          e.preventDefault();\r\n          \r\n          // Copy URL (Alt + L)\r\n          if (e.key === 'l') {\r\n            const url = new URL(window.location.href);\r\n            navigator.clipboard.writeText(url.toString());\r\n            showSortFeedback('URL copied to clipboard! ✓');\r\n            playSound('select');\r\n            return;\r\n          }\r\n\r\n          // Handle field changes and toggle sort order\r\n          if (e.key === 'n') {\r\n            const newSort = {\r\n              field: 'name' as const,\r\n              order: sort.field === 'name' \r\n                ? (sort.order === 'asc' ? 'desc' as const : 'asc' as const)\r\n                : 'asc' as const\r\n            };\r\n            updateSort(newSort, `Sorted by name ${newSort.order === 'asc' ? '↑' : '↓'}`);\r\n          } else if (e.key === 'c') {\r\n            const newSort = {\r\n              field: 'classification' as const,\r\n              order: sort.field === 'classification'\r\n                ? (sort.order === 'asc' ? 'desc' as const : 'asc' as const)\r\n                : 'asc' as const\r\n            };\r\n            updateSort(newSort, `Sorted by classification ${newSort.order === 'asc' ? '↑' : '↓'}`);\r\n          } else if (e.key === 'u') {\r\n            const newSort = {\r\n              field: 'updated_at' as const,\r\n              order: sort.field === 'updated_at'\r\n                ? (sort.order === 'asc' ? 'desc' as const : 'asc' as const)\r\n                : 'asc' as const\r\n            };\r\n            updateSort(newSort, `Sorted by date ${newSort.order === 'asc' ? '↑' : '↓'}`);\r\n          }\r\n          \r\n          // Toggle sort order (Alt + S)\r\n          if (e.key === 's') {\r\n            const newSort = {\r\n              ...sort,\r\n              order: sort.order === 'asc' ? 'desc' as const : 'asc' as const\r\n            };\r\n            updateSort(newSort, `Sort order: ${newSort.order === 'asc' ? 'ascending ↑' : 'descending ↓'}`);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Memoize the fetch function\r\n  const fetchMedications = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);      let query = supabase\r\n        .from('oncology_medications')\r\n        .select('*')\r\n        .order(sort.field, { ascending: sort.order === 'asc' });\r\n\r\n      if (debouncedSearch) {\r\n        query = query.or(`name.ilike.%${debouncedSearch}%,classification.ilike.%${debouncedSearch}%`);\r\n      }\r\n\r\n      if (selectedClass) {\r\n        query = query.eq('classification', selectedClass);\r\n      }\r\n\r\n      if (showPremedsOnly) {\r\n        query = query.eq('is_premedication', true);\r\n      }\r\n\r\n      const { data, error } = await query;      if (error) {\r\n        console.error(\"❌ Error fetching from oncology_medications:\", error);\r\n        throw error;\r\n      }\r\n      console.log(\"✅ Medications fetched:\", data);\r\n      setMedications(data);\r\n\r\n    } catch (error) {\r\n      const typedError = error as Error;\r\n      console.error(\"❌ Error fetching medications:\", typedError); \r\n      const errorMsg = typedError.message || 'Failed to fetch medications. Please try again.';\r\n      setError(errorMsg);\r\n      if (isAudioSupported()) playSound('error');\r\n      showSortFeedback(`Error: ${errorMsg}`);\r\n      setMedications([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [debouncedSearch, selectedClass, showPremedsOnly, sort]);\r\n\r\n  useEffect(() => {\r\n    if (!initialData) {\r\n      fetchMedications();\r\n    }\r\n  }, [initialData]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (searchQuery || selectedClass) {\r\n        fetchMedications();\r\n      } else if (!initialData) {\r\n        fetchMedications();\r\n      }\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [searchQuery, selectedClass, initialData]);\r\n\r\n  // Reset focus when results change\r\n  useEffect(() => {\r\n    setFocusedIndex(-1);\r\n  }, [medications]);\r\n\r\n  // Handle initial URL parameters\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const url = new URL(window.location.href);\r\n      \r\n      // Restore search query\r\n      const search = url.searchParams.get('q');\r\n      if (search) setSearchQuery(search);\r\n\r\n      // Restore classification filter\r\n      const classification = url.searchParams.get('class');\r\n      if (classification) setSelectedClass(classification);\r\n\r\n      // Restore sort preferences\r\n      const sortField = url.searchParams.get('sort') as SortField;\r\n      const sortOrder = url.searchParams.get('order') as 'asc' | 'desc';\r\n      if (sortField && sortOrder) {\r\n        setSort({ field: sortField, order: sortOrder });\r\n      }\r\n\r\n      // Restore focused medication\r\n      const medId = url.searchParams.get('med');\r\n      if (medId && medications.length > 0) {\r\n        const index = medications.findIndex(med => med.id === medId);\r\n        if (index !== -1) {\r\n          setFocusedIndex(index);\r\n          setTimeout(() => {\r\n            const element = document.getElementById(`medication-${index}`);\r\n            element?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n          }, 100);\r\n        }\r\n      }\r\n    }\r\n  }, [medications]);\r\n\r\n  // Keyboard shortcuts and navigation\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      // '/' key focuses search input\r\n      if (e.key === '/' && document.activeElement?.tagName !== 'INPUT') {\r\n        e.preventDefault();\r\n        searchInputRef.current?.focus();\r\n      }\r\n\r\n      // 'Escape' clears filters or focused item\r\n      if (e.key === 'Escape') {\r\n        if (searchQuery || selectedClass) {\r\n          setSearchQuery('');\r\n          setSelectedClass('');\r\n        } else {\r\n          setFocusedIndex(-1);\r\n        }\r\n      }\r\n\r\n      // Handle navigation keys\r\n      handleKeyNavigation(e);\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [searchQuery, selectedClass, medications.length]);\r\n\r\n  // Scroll focused item into view\r\n  useEffect(() => {\r\n    if (focusedIndex >= 0) {\r\n      const element = document.getElementById(`medication-${focusedIndex}`);\r\n      element?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\r\n    }\r\n  }, [focusedIndex]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        <MedicationSkeleton />\r\n        <MedicationSkeleton />\r\n        <MedicationSkeleton />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MedicationErrorBoundary>\r\n      <div className=\"space-y-6 relative\">\r\n        {/* Sort Feedback Overlay */}\r\n        {sortFeedback && (\r\n          <div\r\n            className={`\r\n              fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 \r\n              bg-gray-900/90 text-white px-4 py-2 rounded-lg shadow-xl \r\n              backdrop-blur-sm z-50\r\n              animate-in fade-in-0 zoom-in-95 duration-200\r\n              data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95\r\n              flex items-center gap-2 font-medium\r\n            `}\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n          >\r\n            {sortFeedback}\r\n          </div>\r\n        )}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"p-2 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-lg shadow-lg\">\r\n              <Pill className=\"h-6 w-6 text-white\" />\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">\r\n              Oncology Medications\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              const url = new URL(window.location.href);\r\n              navigator.clipboard.writeText(url.toString());\r\n              showSortFeedback('URL copied to clipboard! ✓');\r\n              playSound('select');\r\n            }}\r\n            className=\"px-3 py-2 flex items-center gap-2 text-sm text-gray-600 hover:text-gray-800 bg-white/30 backdrop-blur-md border border-white/20 rounded-lg shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 transition-all duration-300\"\r\n            title=\"Copy link to clipboard (Alt+L)\"\r\n          >\r\n            <Link className=\"h-4 w-4\" />\r\n            Share View\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Premedications Filter Toggle */}\r\n        <div className=\"flex gap-4 items-center\">\r\n          <button\r\n            onClick={() => {\r\n              setShowPremedsOnly(!showPremedsOnly);\r\n              setSelectedClass('');\r\n            }}\r\n            className={`\r\n              px-4 py-2 rounded-lg text-sm font-medium \r\n              transition-all duration-300\r\n              ${showPremedsOnly \r\n                ? 'bg-indigo-600 text-white shadow-lg' \r\n                : 'bg-white/30 text-gray-600 hover:bg-indigo-50'\r\n              }\r\n            `}\r\n          >\r\n            {showPremedsOnly ? '✓ Pre-Medications Only' : 'Show Pre-Medications'}\r\n          </button>\r\n          \r\n          <div className=\"flex-1 relative\">\r\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n            <input\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              placeholder=\"Search medications, classifications, or cancer types... (Press '/' to focus)\"\r\n              value={searchQuery}\r\n              onChange={(e) => {\r\n                setSearchQuery(e.target.value);\r\n                updateUrlParams({\r\n                  search: e.target.value || undefined\r\n                });\r\n              }}\r\n              className=\"pl-10 pr-4 py-2 w-full bg-white/30 backdrop-blur-md border border-white/20 rounded-lg shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n            />\r\n          </div>\r\n\r\n          {/* Only show classification filter when not in premedications mode */}\r\n          {!showPremedsOnly && (\r\n            <div className=\"relative\">\r\n              <select\r\n                value={selectedClass}\r\n                onChange={(e) => setSelectedClass(e.target.value)}\r\n                className=\"pl-4 pr-10 py-2 bg-white/30 backdrop-blur-md border border-white/20 rounded-lg shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 appearance-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-300\"\r\n                aria-label=\"Filter by classification\"\r\n              >\r\n                <option value=\"\">All Classifications</option>\r\n                <optgroup label=\"Pre-Medications\">\r\n                  <option value=\"5-HT3 Receptor Antagonist Antiemetic\">5-HT3 RA Antiemetic</option>\r\n                  <option value=\"NK1 Receptor Antagonist Antiemetic\">NK1 RA Antiemetic</option>\r\n                  <option value=\"D2 Receptor Antagonist Antiemetic\">D2 RA Antiemetic</option>\r\n                  <option value=\"H1 Antihistamine\">H1 Antihistamine</option>\r\n                  <option value=\"H2 Antihistamine\">H2 Antihistamine</option>\r\n                  <option value=\"Corticosteroid\">Corticosteroid</option>\r\n                  <option value=\"Benzodiazepine Anxiolytic\">Benzodiazepine Anxiolytic</option>\r\n                </optgroup>\r\n                <optgroup label=\"Traditional Chemotherapy\">\r\n                  <option value=\"Platinum Chemotherapy\">Platinum Chemotherapy</option>\r\n                  <option value=\"Anthracycline Chemotherapy\">Anthracycline Chemotherapy</option>\r\n                  <option value=\"Taxane Chemotherapy\">Taxane Chemotherapy</option>\r\n                </optgroup>\r\n                <optgroup label=\"Immunotherapy\">\r\n                  <option value=\"PD-1 Checkpoint Inhibitor\">PD-1 Inhibitor</option>\r\n                  <option value=\"PD-L1 Checkpoint Inhibitor\">PD-L1 Inhibitor</option>\r\n                </optgroup>\r\n                <optgroup label=\"Antibody-Drug Conjugates\">\r\n                  <option value=\"HER2-Targeted Antibody-Drug Conjugate\">HER2 ADC</option>\r\n                  <option value=\"Trop-2-Targeted Antibody-Drug Conjugate\">Trop-2 ADC</option>\r\n                  <option value=\"CD79b-Targeted Antibody-Drug Conjugate\">CD79b ADC</option>\r\n                </optgroup>\r\n                <optgroup label=\"Monoclonal Antibodies\">\r\n                  <option value=\"HER2 Monoclonal Antibody\">HER2 mAb</option>\r\n                </optgroup>\r\n                <optgroup label=\"Targeted Therapies\">\r\n                  <option value=\"EGFR Tyrosine Kinase Inhibitor\">EGFR TKI</option>\r\n                  <option value=\"ALK Tyrosine Kinase Inhibitor\">ALK TKI</option>\r\n                  <option value=\"ALK/ROS1 Tyrosine Kinase Inhibitor\">ALK/ROS1 TKI</option>\r\n                  <option value=\"KRAS Inhibitor\">KRAS Inhibitor</option>\r\n                  <option value=\"PI3K Inhibitor\">PI3K Inhibitor</option>\r\n                  <option value=\"CDK4/6 Inhibitor\">CDK4/6 Inhibitor</option>\r\n                  <option value=\"BTK Inhibitor\">BTK Inhibitor</option>\r\n                </optgroup>\r\n                <optgroup label=\"Hormone Therapy\">\r\n                  <option value=\"Selective Estrogen Receptor Modulator (SERM)\">SERM</option>\r\n                </optgroup>\r\n              </select>\r\n              <Filter className=\"absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400 pointer-events-none\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Keyboard Navigation Help */}\r\n        <div className=\"text-sm text-gray-500\" aria-label=\"Keyboard shortcuts\">\r\n          <h3 className=\"sr-only\">Keyboard shortcuts</h3>\r\n          <ul className=\"flex flex-wrap gap-x-4 gap-y-2\">\r\n            {/* Navigation */}\r\n            <li className=\"flex flex-wrap gap-x-4 gap-y-2\">\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">/</kbd>\r\n                <span>Search</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">↑</kbd>\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">↓</kbd>\r\n                <span>or</span>\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">j</kbd>\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">k</kbd>\r\n                <span>Navigate</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Home</kbd>\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">End</kbd>\r\n                <span>Jump to top/bottom</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Enter</kbd>\r\n                <span>View details</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Esc</kbd>\r\n                <span>Clear filters</span>\r\n              </span>\r\n            </li>\r\n            {/* Sorting */}\r\n            <li className=\"flex flex-wrap gap-x-4 gap-y-2 border-t border-gray-200/30 pt-2 w-full\">\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Alt</kbd>+\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">N</kbd>\r\n                <span>Sort by name</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Alt</kbd>+\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">C</kbd>\r\n                <span>Sort by class</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Alt</kbd>+\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">U</kbd>\r\n                <span>Sort by updated</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Alt</kbd>+\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">S</kbd>\r\n                <span>Toggle ascending/descending</span>\r\n              </span>\r\n              <span className=\"inline-flex items-center gap-1\">\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">Alt</kbd>+\r\n                <kbd className=\"px-2 py-0.5 text-xs bg-gray-100 border border-gray-300 rounded\">L</kbd>\r\n                <span>Copy sharable link</span>\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Sort Controls */}\r\n        <div \r\n          className=\"flex flex-wrap items-center gap-4 text-sm\"\r\n          role=\"toolbar\" \r\n          aria-label=\"Sort controls\"\r\n        >\r\n          <div className=\"flex items-center gap-2\">\r\n            <label htmlFor=\"sort-field\" className=\"text-gray-600\">Sort by:</label>\r\n            <select\r\n              id=\"sort-field\"\r\n              value={sort.field}\r\n              onChange={(e) => {\r\n                const newSort = {\r\n                  field: e.target.value as SortField,\r\n                  order: 'asc' as const // Reset to ascending when changing sort field\r\n                };\r\n                updateSort(newSort, `Sorted by ${e.target.value.replace(/_/g, ' ')} ${newSort.order === 'asc' ? '↑' : '↓'}`);\r\n              }}\r\n              className={`\r\n                pl-3 pr-8 py-1 bg-white/30 backdrop-blur-md border border-white/20 \r\n                rounded-lg shadow hover:shadow-md opacity-80 hover:opacity-100 \r\n                appearance-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent \r\n                transition-all duration-300\r\n                ${sort.field === 'name' && 'text-indigo-700'}\r\n                ${sort.field === 'classification' && 'text-purple-700'}\r\n                ${sort.field === 'updated_at' && 'text-blue-700'}\r\n              `}\r\n              title=\"Press Alt+N for name, Alt+C for class, Alt+U for updated\"\r\n              aria-label={`Sort by ${sort.field}, currently ${sort.order === 'asc' ? 'ascending' : 'descending'}`}\r\n            >\r\n              <option value=\"name\">\r\n                {sort.field === 'name' && (sort.order === 'asc' ? '↑ ' : '↓ ')}Name\r\n              </option>\r\n              <option value=\"classification\">\r\n                {sort.field === 'classification' && (sort.order === 'asc' ? '↑ ' : '↓ ')}Classification\r\n              </option>\r\n              <option value=\"updated_at\">\r\n                {sort.field === 'updated_at' && (sort.order === 'asc' ? '↑ ' : '↓ ')}Last Updated\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              const newSort = { \r\n                ...sort, \r\n                order: sort.order === 'asc' ? ('desc' as const) : ('asc' as const)\r\n              };\r\n              updateSort(newSort, `Sort order: ${newSort.order === 'asc' ? 'ascending ↑' : 'descending ↓'}`);\r\n            }}\r\n            className={`\r\n              inline-flex items-center gap-1 px-2.5 py-1.5 \r\n              text-gray-600 hover:text-gray-800 \r\n              border border-transparent hover:border-gray-200 \r\n              rounded-lg transition-all duration-200\r\n              ${sort.order === 'desc' ? 'bg-gray-100/50' : ''}\r\n            `}\r\n            title=\"Press Alt+S to toggle sort order\"\r\n          >\r\n            {sort.order === 'asc' ? '↑' : '↓'}\r\n            {sort.order === 'asc' ? 'Ascending' : 'Descending'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Active Filters and Results Count */}\r\n        <div className=\"flex flex-wrap items-center gap-2 text-sm border-t border-gray-200/30 pt-3 mt-3\">\r\n          {!loading && !error && (\r\n            <span className=\"text-gray-600\">\r\n              Found {medications.length} medication{medications.length !== 1 ? 's' : ''}\r\n              {(searchQuery || selectedClass) && ' matching filters'}\r\n            </span>\r\n          )}\r\n          {searchQuery && (\r\n            <span className=\"inline-flex items-center px-2 py-1 rounded bg-indigo-100 text-indigo-800 gap-1\">\r\n              Search: {searchQuery}\r\n              <button\r\n                onClick={() => setSearchQuery('')}\r\n                className=\"hover:text-indigo-600\"\r\n                title=\"Clear search\"\r\n              >\r\n                <X className=\"h-3 w-3\" />\r\n              </button>\r\n            </span>\r\n          )}\r\n          {selectedClass && (\r\n            <span className=\"inline-flex items-center px-2 py-1 rounded bg-purple-100 text-purple-800 gap-1\">\r\n              Type: {selectedClass}\r\n              <button\r\n                onClick={() => setSelectedClass('')}\r\n                className=\"hover:text-purple-600\"\r\n                title=\"Clear classification filter\"\r\n              >\r\n                <X className=\"h-3 w-3\" />\r\n              </button>\r\n            </span>\r\n          )}\r\n          {(searchQuery || selectedClass) && (\r\n            <button\r\n              onClick={() => {\r\n                setSearchQuery('');\r\n                setSelectedClass('');\r\n              }}\r\n              className=\"text-gray-500 hover:text-gray-700 transition-colors text-sm\"\r\n            >\r\n              Clear all filters\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-white/30 backdrop-blur-md border border-white/20 text-red-700 p-4 rounded-xl shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 transition-all duration-300 flex items-center gap-2\">\r\n            <X className=\"h-5 w-5\" />\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"space-y-4\">\r\n          {medications.length === 0 ? (\r\n            <div className=\"text-center p-8 bg-white/30 backdrop-blur-md border border-white/20 rounded-xl shadow-lg hover:shadow-xl opacity-80 hover:opacity-100 transition-all duration-300\">\r\n              No medications found. {searchQuery || selectedClass ? 'Try adjusting your filters.' : ''}\r\n            </div>\r\n          ) : (\r\n            medications.map((medication, index) => (\r\n              <div\r\n                key={medication.id}\r\n                id={`medication-${index}`}\r\n                className={`group bg-white/30 backdrop-blur-md border ${\r\n                  focusedIndex === index\r\n                    ? 'border-indigo-500 ring-2 ring-indigo-500 ring-opacity-50 shadow-xl scale-[1.02]'\r\n                    : 'border-white/20 hover:shadow-2xl hover:scale-[1.02]'\r\n                } rounded-xl shadow-lg opacity-80 hover:opacity-100 p-6 cursor-pointer \r\n                  transition-all duration-300\r\n                  motion-safe:animate-in \r\n                  motion-safe:fade-in-0 \r\n                  ${sort.order === 'asc' \r\n                    ? 'motion-safe:slide-in-from-bottom-4'\r\n                    : 'motion-safe:slide-in-from-top-4'\r\n                  }\r\n                  motion-safe:duration-500\r\n                  motion-safe:delay-[${Math.min(index * 50, 1000)}ms]`}\r\n                onClick={() => setSelectedMedication(medication)}\r\n                title={`Click to view detailed information (${index + 1} of ${medications.length})`}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-selected={focusedIndex === index ? \"true\" : \"false\"}\r\n              >\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <h3 className=\"text-lg font-semibold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent\">\r\n                        {medication.name || 'Untitled Medication'}\r\n                      </h3>\r\n                      {medication.is_premedication && (\r\n                        <span className=\"px-2 py-0.5 text-xs font-medium bg-indigo-100 text-indigo-800 rounded-full\">\r\n                          Pre-Med\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    {medication.brand_names?.length > 0 && (\r\n                      <p className=\"mt-1 text-sm text-gray-600\">\r\n                        {medication.brand_names.join(', ')}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <span className={`px-2.5 py-0.5 rounded-full text-xs font-medium ${getClassificationStyle(medication.classification || '')}`}>\r\n                    {getShortClassification(medication.classification || '')}\r\n                  </span>\r\n                </div>\r\n                <div className=\"mt-2 flex flex-wrap gap-1\">\r\n                  {medication.indications?.cancer_types?.map((cancer, index) => (\r\n                    <span \r\n                      key={index}\r\n                      className=\"inline-flex items-center px-2 py-0.5 rounded-md text-xs bg-gray-100 text-gray-800 border border-gray-200 hover:bg-gray-200 transition-colors duration-200 cursor-help\"\r\n                      title={`Search for medications indicated for ${cancer}`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setSearchQuery(cancer);\r\n                      }}\r\n                    >\r\n                      {cancer}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {/* Modal */}\r\n        <MedicationDetailModal\r\n          medication={selectedMedication}\r\n          isOpen={!!selectedMedication}\r\n          onClose={() => {\r\n            setSelectedMedication(null);\r\n            const url = new URL(window.location.href);\r\n            url.searchParams.delete('med');\r\n            window.history.replaceState({}, '', url);\r\n          }}\r\n        />\r\n      </div>\r\n    </MedicationErrorBoundary>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Tab } from \"@headlessui/react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\r\nimport TreatmentProtocols from \"./treatmentProtocols/TreatmentProtocols\";\r\nimport ProtocolDetailPageContainer from \"./treatmentProtocols/ProtocolDetailPageContainer\";\r\nimport Toxicity from \"./toxicity/Toxicity\";\r\nimport DiseaseProgressTracker from \"./sections/DiseaseProgressTracker\";\r\nimport MedicationsView from \"./medications/MedicationsView\";\r\n\r\n/**\r\n * CDU (Chemotherapy Day Unit) Module\r\n * \r\n * Main container component for the CDU module that provides\r\n * tabbed navigation between various chemotherapy management features:\r\n * - Treatment Protocols: Standardized treatment regimens\r\n * - Medications: Medication database and interactions\r\n * - Toxicity: Side effect management and protocols\r\n * - Disease Progress: Patient disease tracking\r\n */\r\nconst CDU = () => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  \r\n  const TABS = [\r\n    { id: 'treatment-protocols', label: 'Treatment Protocols', component: <TreatmentProtocols /> },\r\n    { id: 'medications', label: 'Medications', component: <MedicationsView /> },\r\n    { id: 'toxicity', label: 'Toxicity', component: <Toxicity /> },\r\n    { id: 'disease-progress', label: 'Disease Progress', component: <DiseaseProgressTracker /> },\r\n  ];\r\n\r\n  return (\r\n    <ErrorBoundary moduleName=\"Chemotherapy Day Unit\">\r\n      <div className=\"p-6\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-indigo-700\">Chemotherapy Day Unit</h1>\r\n        <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\r\n          <Tab.List className=\"flex space-x-4 border-b pb-3 mb-6\">\r\n            {TABS.map((tab, index) => (\r\n              <Tab key={index} className={({ selected }) => `\r\n                cursor-pointer py-2 px-4 rounded-lg shadow transition-all duration-300\r\n                ${selected \r\n                  ? \"bg-gradient-to-r from-indigo-500 to-teal-500 text-white\" \r\n                  : \"bg-white text-gray-600 hover:text-indigo-500 hover:shadow-md\"}\r\n              `}>\r\n                {tab.label}\r\n              </Tab>\r\n            ))}\r\n          </Tab.List>\r\n\r\n          <Tab.Panels>\r\n            {TABS.map((tab, index) => (\r\n              <Tab.Panel key={index}>\r\n                {tab.id === 'treatment-protocols' ? (\r\n                  <Routes>\r\n                    <Route index element={tab.component} />\r\n                    <Route path=\"treatment-protocols/:id\" element={<ProtocolDetailPageContainer />} />\r\n                  </Routes>\r\n                ) : (\r\n                  tab.component\r\n                )}\r\n              </Tab.Panel>\r\n            ))}\r\n          </Tab.Panels>\r\n        </Tab.Group>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default CDU;\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst toggleVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-transparent\",\r\n        outline:\r\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-3\",\r\n        sm: \"h-9 px-2.5\",\r\n        lg: \"h-11 px-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface ToggleProps extends React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> {\r\n  size?: \"sm\" | \"lg\";\r\n}\r\n\r\nconst Toggle = React.forwardRef<React.ElementRef<typeof TogglePrimitive.Root>, ToggleProps>(\r\n  ({ className, size = \"sm\", ...props }, ref) => (\r\n    <TogglePrimitive.Root\r\n      ref={ref}\r\n      className={`\r\n        inline-flex items-center justify-center rounded-md font-medium\r\n        transition-colors focus-visible:outline-none focus-visible:ring-2\r\n        focus-visible:ring-indigo-400 focus-visible:ring-offset-2\r\n        disabled:pointer-events-none disabled:opacity-50\r\n        hover:bg-gray-100 hover:text-gray-900\r\n        data-[state=on]:bg-indigo-100 data-[state=on]:text-indigo-900\r\n        dark:hover:bg-gray-800 dark:hover:text-gray-50\r\n        dark:data-[state=on]:bg-indigo-900 dark:data-[state=on]:text-indigo-50\r\n        ${size === \"sm\" ? \"text-sm px-2 py-1\" : \"text-base px-3 py-2\"}\r\n        ${className}\r\n      `}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\n\r\nToggle.displayName = TogglePrimitive.Root.displayName;\r\n\r\nexport { Toggle, toggleVariants }","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, LineChart, Line } from 'recharts';\r\nimport { Tab } from '@headlessui/react';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  PieChart as PieChartIcon,\r\n  CheckSquare,\r\n  Clock,\r\n  AlertTriangle,\r\n  FileText,\r\n  Activity,\r\n  Sun,\r\n  Moon,\r\n  X,\r\n} from 'lucide-react';\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Toggle } from \"@/components/ui/toggle\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { useTheme } from 'next-themes';\r\nimport { getProtocols } from '../../../services/protocols';\r\nimport type { Protocol } from '../../../types/protocol';\r\n\r\nconst COLORS = ['#4F46E5', '#7C3AED', '#EC4899', '#F59E0B', '#10B981'];\r\nconst TABS = [\r\n  { id: 'groups', label: 'Group Distribution', icon: BarChartIcon },\r\n  { id: 'intent', label: 'Intent Distribution', icon: PieChartIcon },\r\n  { id: 'completeness', label: 'Completeness', icon: CheckSquare },\r\n  { id: 'timeline', label: 'Timeline', icon: Clock },\r\n];\r\n\r\ninterface Filter {\r\n  type: string;\r\n  value: string;\r\n}\r\n\r\nconst calculateProtocolCompleteness = (protocol: Protocol): number => {\r\n  const requiredFields = ['eligibility', 'treatment', 'tests', 'monitoring', 'precautions', 'supportive_care', 'toxicity_monitoring'];\r\n\r\n  const filledFields = requiredFields.filter(field => {\r\n    const value = protocol[field as keyof Protocol];\r\n    return value && (\r\n      Array.isArray(value) ? value.length > 0 :\r\n      typeof value === 'object' ? Object.keys(value).length > 0 :\r\n      Boolean(value)\r\n    );\r\n  });\r\n\r\n  return (filledFields.length / requiredFields.length) * 100;\r\n};\r\n\r\nconst getDaysFromNow = (dateStr: string): number =>\r\n  Math.floor((Date.now() - new Date(dateStr).getTime()) / (1000 * 60 * 60 * 24));\r\n\r\nconst ProtocolDashboard: React.FC = () => {\r\n  const [activeFilters, setActiveFilters] = useState<Filter[]>([]);\r\n  const { theme, setTheme } = useTheme();\r\n  const isDark = theme === 'dark';\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const { data: protocols = [], isLoading } = useQuery<Protocol[], Error>({\r\n    queryKey: ['protocols'],\r\n    queryFn: () => getProtocols({ tumorGroup: null, drugName: null, treatmentIntent: null }),\r\n    staleTime: 1000 * 60 * 5,\r\n  });\r\n\r\n  const filteredProtocols = useMemo(() => {\r\n    return protocols.filter(protocol =>\r\n      activeFilters.every(filter => {\r\n        switch (filter.type) {\r\n          case 'group': return protocol.tumour_group === filter.value;\r\n          case 'intent': return protocol.treatment_intent === filter.value;\r\n          case 'recent': return protocol.updated_at ? getDaysFromNow(protocol.updated_at) <= 30 : false;\r\n          default: return true;\r\n        }\r\n      })\r\n    );\r\n  }, [protocols, activeFilters]);\r\n\r\n  const stats = useMemo(() => {\r\n    const completenessScores = filteredProtocols.map(calculateProtocolCompleteness);\r\n    const total = filteredProtocols.length;\r\n    const avgCompleteness = total > 0\r\n      ? completenessScores.reduce((a, b) => a + b, 0) / total\r\n      : 0;\r\n\r\n    return {\r\n      totalProtocols: total,\r\n      avgCompleteness: Math.round(avgCompleteness),\r\n      missingDataCount: filteredProtocols.filter(p => calculateProtocolCompleteness(p) < 70).length,\r\n      recentlyUpdated: filteredProtocols.filter(p => p.updated_at ? getDaysFromNow(p.updated_at) <= 30 : false).length,\r\n    };\r\n  }, [filteredProtocols]);\r\n\r\n  const handleFilterRemove = (filterToRemove: Filter) => {\r\n    setActiveFilters(filters =>\r\n      filters.filter(f => f.type !== filterToRemove.type || f.value !== filterToRemove.value)\r\n    );\r\n  };\r\n\r\n  const renderFilterChips = () => (\r\n    <div className=\"flex flex-wrap gap-2 mb-4\">\r\n      {activeFilters.map((filter, index) => (\r\n        <Badge key={index} variant=\"secondary\" className=\"flex items-center gap-1\">\r\n          {filter.type}: {filter.value}\r\n          <button onClick={() => handleFilterRemove(filter)} className=\"ml-1 hover:text-red-500\">\r\n            <X className=\"w-3 h-3\" />\r\n          </button>\r\n        </Badge>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const StatCard = ({ title, value, icon, color }: {\r\n    title: string; value: number | string; icon: React.ReactNode; color: string;\r\n  }) => (\r\n    <Card className={`p-6 ${color} text-white rounded-lg shadow-lg`}>\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <p className=\"text-sm opacity-80\">{title}</p>\r\n          <p className=\"text-3xl font-bold mt-1\">{value}</p>\r\n        </div>\r\n        <div className=\"text-white/80\">{icon}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n\r\n  // Chart components implementation\r\n  const GroupChart = () => {\r\n    const groupData = useMemo(() => {\r\n      const groups: Record<string, number> = {};\r\n      filteredProtocols.forEach(protocol => {\r\n        if (protocol.tumour_group) {\r\n          groups[protocol.tumour_group] = (groups[protocol.tumour_group] || 0) + 1;\r\n        }\r\n      });\r\n      return Object.keys(groups).map(group => ({ name: group, count: groups[group] }));\r\n    }, [filteredProtocols]);\r\n\r\n    return (\r\n      <div className=\"h-[400px]\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart data={groupData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"count\" fill=\"#4F46E5\" name=\"Protocols\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const IntentChart = () => {\r\n    const intentData = useMemo(() => {\r\n      const intents: Record<string, number> = {};\r\n      filteredProtocols.forEach(protocol => {\r\n        if (protocol.treatment_intent) {\r\n          intents[protocol.treatment_intent] = (intents[protocol.treatment_intent] || 0) + 1;\r\n        }\r\n      });\r\n      return Object.keys(intents).map(intent => ({ name: intent, value: intents[intent] }));\r\n    }, [filteredProtocols]);\r\n\r\n    return (\r\n      <div className=\"h-[400px]\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <PieChart>\r\n            <Pie\r\n              data={intentData}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              labelLine={true}\r\n              label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n              outerRadius={150}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n            >\r\n              {intentData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip />\r\n            <Legend />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CompletenessMatrix = () => {\r\n    const completenessData = useMemo(() => {\r\n      return filteredProtocols.map(protocol => ({\r\n        name: protocol.id || `${protocol.tumour_group || ''} Protocol` || 'Unnamed Protocol',\r\n        completeness: calculateProtocolCompleteness(protocol)\r\n      })).sort((a, b) => b.completeness - a.completeness).slice(0, 10);\r\n    }, [filteredProtocols]);\r\n\r\n    return (\r\n      <div className=\"h-[400px]\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart data={completenessData} layout=\"vertical\">\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type=\"number\" domain={[0, 100]} />\r\n            <YAxis dataKey=\"name\" type=\"category\" width={150} />\r\n            <Tooltip formatter={(value) => [`${value}%`, 'Completeness']} />\r\n            <Bar dataKey=\"completeness\" fill=\"#10B981\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const TimelineChart = () => {\r\n    const timelineData = useMemo(() => {\r\n      const dates: Record<string, number> = {};\r\n      filteredProtocols.forEach(protocol => {\r\n        if (protocol.updated_at) {\r\n          const date = new Date(protocol.updated_at).toISOString().split('T')[0];\r\n          dates[date] = (dates[date] || 0) + 1;\r\n        }\r\n      });\r\n      return Object.keys(dates)\r\n        .sort()\r\n        .map(date => ({ date, count: dates[date] }))\r\n        .slice(-30); // Last 30 days with updates\r\n    }, [filteredProtocols]);\r\n\r\n    return (\r\n      <div className=\"h-[400px]\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={timelineData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"count\" stroke=\"#7C3AED\" name=\"Updates\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">OncoProtocol Explorer</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Explore and manage oncology treatment protocols</p>\r\n        </div>\r\n        <Toggle\r\n          pressed={isDark}\r\n          onPressedChange={() => setTheme(isDark ? 'light' : 'dark')}\r\n        >\r\n          {isDark ? <Sun className=\"w-4 h-4\" /> : <Moon className=\"w-4 h-4\" />}\r\n        </Toggle>\r\n      </div>\r\n\r\n      {activeFilters.length > 0 && renderFilterChips()}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <StatCard title=\"Total Protocols\" value={stats.totalProtocols} icon={<FileText className=\"w-6 h-6\" />} color=\"bg-indigo-500\" />\r\n        <StatCard title=\"Avg. Completeness\" value={`${stats.avgCompleteness}%`} icon={<Activity className=\"w-6 h-6\" />} color=\"bg-green-500\" />\r\n        <StatCard title=\"Missing Data\" value={stats.missingDataCount} icon={<AlertTriangle className=\"w-6 h-6\" />} color=\"bg-amber-500\" />\r\n        <StatCard title=\"Recently Updated\" value={stats.recentlyUpdated} icon={<Clock className=\"w-6 h-6\" />} color=\"bg-purple-500\" />\r\n      </div>\r\n\r\n      <ScrollArea className=\"h-[500px]\">\r\n        <Card className=\"p-6\">\r\n          <Tab.Group>\r\n            <Tab.List className=\"flex space-x-2 border-b mb-4 overflow-x-auto whitespace-nowrap scrollbar-hide pr-8 relative\">\r\n              {TABS.map((tab) => (\r\n                <Tab\r\n                  key={tab.id}\r\n                  className={({ selected }) => `\r\n                    px-4 py-2 rounded-t-lg font-medium flex items-center space-x-2\r\n                    ${selected\r\n                      ? 'text-indigo-600 dark:text-indigo-400 border-b-2 border-indigo-600 dark:border-indigo-400'\r\n                      : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'}\r\n                  `}\r\n                >\r\n                  <tab.icon className=\"w-4 h-4\" />\r\n                  <span>{tab.label}</span>\r\n                </Tab>\r\n              ))}\r\n              <div className=\"pointer-events-none absolute top-0 right-0 h-full w-8 bg-gradient-to-l from-white to-transparent dark:from-gray-900\" />\r\n            </Tab.List>\r\n            <Tab.Panels>\r\n              <Tab.Panel><GroupChart /></Tab.Panel>\r\n              <Tab.Panel><IntentChart /></Tab.Panel>\r\n              <Tab.Panel><CompletenessMatrix /></Tab.Panel>\r\n              <Tab.Panel><TimelineChart /></Tab.Panel>\r\n            </Tab.Panels>\r\n          </Tab.Group>\r\n        </Card>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtocolDashboard;\r\n"],"names":["cn","inputs","twMerge","clsx","isServer","isBrowser","getEnvVar","key","__vite_import_meta_env__","define_process_env_default","logError","error","errorInfo","options","moduleName","retryCount","extra","LogRocket","errorCount","ERROR_RATE_THRESHOLD","digestError","message","name","stack","componentStack","ErrorBoundary","Component","constructor","props","_recoveryTimeout","handleReset","setState","prevState","hasError","resetKey","isDetailsOpen","isRetrying","handleNavigateHome","window","location","href","handleToggleDetails","prev","renderErrorUI","_jsx","Box","position","top","left","width","height","zIndex","display","alignItems","justifyContent","p","bgcolor","style","backdropFilter","children","Paper","elevation","sx","maxWidth","borderRadius","border","borderColor","_jsxs","flexDirection","gap","mb","AlertOctagon","className","color","Typography","variant","fontWeight","align","state","open","onToggle","marginBottom","cursor","ChevronDown","verticalAlign","marginRight","transition","transform","mt","whiteSpace","paddingLeft","borderLeft","toString","_Fragment","type","onClick","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","disabled","cx","cy","r","getDerivedStateFromError","componentDidCatch","track","count","componentDidUpdate","prevProps","setTimeout","clearTimeout","undefined","componentWillUnmount","render","fallback","React","Fragment","__publicField","propTypes","PropTypes","node","string","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","forwardRef","asChild","ref","Comp","Slot","displayName","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","badgeVariants","Badge","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","DialogTitle","DialogDescription","TOAST_LIMIT","TOAST_REMOVE_DELAY","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","action","t","toast","listeners","memoryState","listener","id","update","dismiss","useToast","React.useState","React.useEffect","index","supabaseUrl","supabaseKey","supabaseInstance","getSupabase","createClient","err","supabase","UnifiedProtocolCard","protocol","showAllDrugs","setShowAllDrugs","useState","toggleShowAllDrugs","code","tumour_group","treatment_intent","summary","notes","map","note","title","description","version","eligibility","inclusion_criteria","item","exclusion_criteria","precautions","treatment","drugs","slice","drug","Pill","dose","administration","special_notes","supportiveCare","care","length","ChevronUp","monitoring","baseline","ongoing","supportive_care","required","optional","toxicity_monitoring","dose_modifications","created_by","updated_by","isDatabaseProtocol","obj","toProtocol","dbProtocol","safeJSONParse","data","trimmed","getProtocols","filters","query","row","idx","field","validProtocols","ProtocolErrorState","onRetry","navigate","useNavigate","config","Search","actionText","AlertCircle","Icon","RefreshCw","Skeleton","ProtocolLoadingSkeleton","i","TreatmentProtocols","protocols","setProtocols","loading","setLoading","setError","useEffect","console","log","tumorGroup","drugName","treatmentIntent","motion","div","initial","opacity","animate","duration","MonitoringTab","onAddNew","Plus","hasBaselineTests","hasOngoingTests","test","purpose","frequency","TreatmentTab","schedule","cycles","TestsSectionTab","tests","Array","isArray","scope","timing","DoseModificationsTab","doseModifications","condition","modification","SupportiveCareTab","OverviewSection","overview","InfoTab","lastReviewed","status","createdBy","updatedBy","createdAt","updatedAt","Date","toLocaleDateString","ProtocolDetailsDialog","onOpenChange","useMemo","hematological","nonHematological","renal","hepatic","toxicityMonitoring","expected_toxicities","monitoring_parameters","frequency_details","thresholds_for_action","interactions","drugs_to_avoid","contraindications","precautions_with_other_drugs","defaultValue","value","toxicity","Object","keys","entries","last_reviewed","created_at","updated_at","ProtocolDetailPage","activeTab","setActiveTab","dialogOpen","setDialogOpen","handleBack","join","alternative_switches","alt","precaution","ChevronLeft","ProtocolDetailPageContainer","useLocation","useParams","setProtocol","isLoading","setIsLoading","fetchProtocol","useCallback","hasLocationState","locationProtocol","Error","hasDrugs","sanitizeToxicity","_a","_b","_c","getAllToxicities","AlertBanner","colors","warning","success","info","icons","AlertTriangle","Check","Info","messageArray","msg","getSeverityColor","severity","includes","getSeverityBorderColor","AccordionItem","isOpen","is_dose_limiting","clinical_category","grading_scale","expected_onset","reversibility","recognition","symptoms","symptom","management","step","monitoring_recommendations","monitoring_frequency","followup","longterm","rec","labs","imaging","lab","img","dose_guidance","guide","culprit_drugs","culprit_classes","cls","notes_clinical_pearls","Toxicity","toxicities","setToxicities","openItem","setOpenItem","fetchToxicities","errorMessage","Loader2","TREATMENT_PROTOCOLS","STORAGE_KEY","DIAGNOSIS_PROTOCOL_MAP","PRIMARY_DIAGNOSES","HISTOLOGY_MUTATIONS","tabs","BarChart2","Activity","FolderOpen","Syringe","Bot","DiseaseProgressTracker","selectedIndex","setSelectedIndex","isAiLoading","setIsAiLoading","suggestedProtocols","setSuggestedProtocols","getSuggestedProtocols","primaryDiagnosis","stageAtDiagnosis","filter","diagnosis","otherPrimaryDiagnosis","stage","getSuggestedPremeds","Set","flatMap","premedications","setPrimaryDiagnosis","setOtherPrimaryDiagnosis","setStageAtDiagnosis","histologyMutation","setHistologyMutation","otherHistologyMutation","setOtherHistologyMutation","dateOfDiagnosis","setDateOfDiagnosis","diseaseNotes","setDiseaseNotes","assessmentDate","setAssessmentDate","performanceScale","setPerformanceScale","performanceScore","setPerformanceScore","performanceNotes","setPerformanceNotes","reassessmentDate","setReassessmentDate","imagingType","setImagingType","findingsSummary","setFindingsSummary","markerType","setMarkerType","markerValue","setMarkerValue","progressionNotes","setProgressionNotes","treatmentLine","setTreatmentLine","treatmentRegimen","setTreatmentRegimen","startDate","setStartDate","endDate","setEndDate","treatmentResponse","setTreatmentResponse","treatmentNotes","setTreatmentNotes","aiInput","setAiInput","aiResponse","setAiResponse","generateAiSuggestions","mutationContext","suggestions","score","parseInt","isNaN","handleAskAi","aiSuggestions","Promise","resolve","loadFromLocalStorage","localStorage","getItem","parsed","JSON","parse","diseaseStatus","performanceStatus","progression","linesOfTreatment","saveToLocalStorage","payload","setItem","stringify","handleSaveDiseaseStatus","handleSavePerformanceStatus","handleSaveProgression","handleSaveTreatmentLines","handleClearAllData","removeItem","Tab","Group","onChange","List","tab","selected","Panels","Panel","htmlFor","e","target","placeholder","mutation","rows","premed","ScrollArea","ScrollAreaPrimitive","ScrollBar","orientation","MedicationDetailSkeleton","_","ErrorState","Section","SubSection","MedicationDetailModal","medication","onClose","handleRetry","role","brand_names","onKeyDown","preventDefault","classification","is_chemotherapy","is_immunotherapy","Brain","is_targeted_therapy","is_orphan_drug","Beaker","black_box_warning","mechanism","indications","cancer_types","biomarkers","marker","staging","line_of_therapy","line","dosing","Scale","standard","cycle_length","adjustments","adjustment","side_effects","Heart","common","effect","severe","BarChart","pre_treatment_tests","parameters","param","special_considerations","pregnancy","elderly","other","pharmacokinetics","Clock","half_life","metabolism","excretion","bioavailability","protein_binding","reference_sources","source","routine_monitoring","playSound","audioContext","oscillator","gainNode","isAudioSupported","useDebounce","delay","debouncedValue","setDebouncedValue","timer","MedicationErrorBoundary","compareStrings","a","b","localeCompare","useMedicationsFilter","medications","searchQuery","selectedClass","showPremedsOnly","sort","med","searchLower","toLowerCase","matchesName","matchesBrand","some","matchesClassification","matchesCancerTypes","order","getTime","MedicationSkeleton","getClassificationStyle","getShortClassification","replace","getSavedSort","saved","warn","MedicationsView","initialData","searchInputRef","useRef","setMedications","setSearchQuery","debouncedSearch","setSelectedClass","setShowPremedsOnly","selectedMedication","setSelectedMedication","focusedIndex","setFocusedIndex","setSort","sortFeedback","setSortFeedback","handleIndexChange","newIndex","url","URL","searchParams","set","history","replaceState","showSortFeedback","updateUrlParams","params","forEach","delete","updateSort","newSort","feedback","handleKeyNavigation","document","activeElement","tagName","nextIndex","altKey","navigator","clipboard","writeText","fetchMedications","from","select","ascending","or","eq","typedError","errorMsg","search","get","sortField","sortOrder","medId","findIndex","element","getElementById","scrollIntoView","behavior","block","handleKeyDown","current","focus","addEventListener","removeEventListener","Link","label","Filter","Math","min","tabIndex","is_premedication","cancer","stopPropagation","CDU","TABS","component","Routes","Route","path","Toggle","TogglePrimitive","COLORS","BarChartIcon","PieChartIcon","CheckSquare","calculateProtocolCompleteness","requiredFields","filledFields","Boolean","getDaysFromNow","dateStr","floor","now","ProtocolDashboard","activeFilters","setActiveFilters","theme","setTheme","useTheme","isDark","scrollTo","useQuery","queryKey","queryFn","staleTime","filteredProtocols","every","stats","completenessScores","total","avgCompleteness","reduce","totalProtocols","round","missingDataCount","recentlyUpdated","handleFilterRemove","filterToRemove","f","renderFilterChips","StatCard","GroupChart","groupData","groups","group","ResponsiveContainer","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","IntentChart","intentData","intents","intent","PieChart","Pie","labelLine","percent","toFixed","outerRadius","entry","Cell","CompletenessMatrix","completenessData","completeness","layout","domain","formatter","TimelineChart","timelineData","dates","date","toISOString","split","LineChart","Line","pressed","onPressedChange","Sun","Moon","FileText"],"mappings":"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"}