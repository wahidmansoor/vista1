{"version":3,"file":"AdvanceDirectives-b6cdb9d2.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-x.js","../../node_modules/lucide-react/dist/esm/icons/file-plus.js","../../src/modules/palliative/sections/end_of_life/AdvanceDirectives.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n];\nconst CircleX = createLucideIcon(\"CircleX\", __iconNode);\n\nexport { __iconNode, CircleX as default };\n//# sourceMappingURL=circle-x.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M9 15h6\", key: \"cctwl0\" }],\n  [\"path\", { d: \"M12 18v-6\", key: \"17g6i2\" }]\n];\nconst FilePlus = createLucideIcon(\"FilePlus\", __iconNode);\n\nexport { __iconNode, FilePlus as default };\n//# sourceMappingURL=file-plus.js.map\n","import React from \"react\";\r\nimport { usePalliativeCare } from \"../../context/PalliativeContext\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { FilePlus, Download, CheckCircle, Clock, XCircle } from \"lucide-react\";\r\nimport type { AdvanceDirective } from \"../../context/PalliativeContext\";\r\n\r\nconst directiveTypes = ['DNR', 'LivingWill', 'PowerOfAttorney', 'Other'] as const;\r\n\r\nconst statusColors = {\r\n  completed: \"text-green-600\",\r\n  pending: \"text-amber-600\",\r\n  notStarted: \"text-gray-600\"\r\n};\r\n\r\nconst statusIcons = {\r\n  completed: CheckCircle,\r\n  pending: Clock,\r\n  notStarted: XCircle\r\n};\r\n\r\nconst AdvanceDirectives = () => {\r\n  const { state, updateAdvanceDirective } = usePalliativeCare();\r\n  const [newDirective, setNewDirective] = React.useState<Omit<AdvanceDirective, \"id\">>({\r\n    type: \"DNR\",\r\n    status: \"notStarted\",\r\n    details: \"\",\r\n    documents: []\r\n  });\r\n\r\n  const handleDirectiveSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const directive: AdvanceDirective = {\r\n      id: crypto.randomUUID(),\r\n      ...newDirective,\r\n      dateCompleted: newDirective.status === \"completed\" ? new Date().toISOString() : undefined\r\n    };\r\n    updateAdvanceDirective(directive);\r\n    setNewDirective({\r\n      type: \"DNR\",\r\n      status: \"notStarted\",\r\n      details: \"\",\r\n      documents: []\r\n    });\r\n  };\r\n\r\n  const exportToPDF = async () => {\r\n    // For now, we'll create a simple JSON export as a placeholder\r\n    // In a production environment, this would use react-pdf to generate a proper PDF\r\n    const exportData = {\r\n      patientDirectives: state.advanceDirectives,\r\n      exportDate: new Date().toISOString(),\r\n      facilityInfo: \"OncoVista Medical Center\"\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"advance-directives.json\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const getStatusIcon = (status: AdvanceDirective[\"status\"]) => {\r\n    const Icon = statusIcons[status];\r\n    return <Icon className={`w-5 h-5 ${statusColors[status]}`} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold\">Advance Directives</h2>\r\n        <Button onClick={exportToPDF} variant=\"outline\">\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Export Documents\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>New Directive</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleDirectiveSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <Label>Type of Directive</Label>\r\n              <RadioGroup\r\n                value={newDirective.type}\r\n                onValueChange={(value: AdvanceDirective[\"type\"]) => \r\n                  setNewDirective(prev => ({ ...prev, type: value }))\r\n                }\r\n                className=\"grid grid-cols-2 gap-4 mt-2\"\r\n              >\r\n                {directiveTypes.map(type => (\r\n                  <div key={type} className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value={type} id={type} />\r\n                    <Label htmlFor={type}>{type.replace(/([A-Z])/g, ' $1').trim()}</Label>\r\n                  </div>\r\n                ))}\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Status</Label>\r\n              <RadioGroup\r\n                value={newDirective.status}\r\n                onValueChange={(value: AdvanceDirective[\"status\"]) =>\r\n                  setNewDirective(prev => ({ ...prev, status: value }))\r\n                }\r\n                className=\"flex gap-4 mt-2\"\r\n              >\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"completed\" id=\"completed\" />\r\n                  <Label htmlFor=\"completed\">Completed</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"pending\" id=\"pending\" />\r\n                  <Label htmlFor=\"pending\">Pending</Label>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <RadioGroupItem value=\"notStarted\" id=\"notStarted\" />\r\n                  <Label htmlFor=\"notStarted\">Not Started</Label>\r\n                </div>\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            <div>\r\n              <Label>Details</Label>\r\n              <Textarea\r\n                value={newDirective.details}\r\n                onChange={(e) => \r\n                  setNewDirective(prev => ({ ...prev, details: e.target.value }))\r\n                }\r\n                className=\"mt-2\"\r\n                placeholder=\"Enter any relevant details or notes...\"\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\">\r\n              <FilePlus className=\"w-4 h-4 mr-2\" />\r\n              Add Directive\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid gap-6 md:grid-cols-2\">\r\n        {state.advanceDirectives.map((directive) => (\r\n          <Card key={directive.id}>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex justify-between items-center\">\r\n                <span>{directive.type.replace(/([A-Z])/g, ' $1').trim()}</span>\r\n                {getStatusIcon(directive.status)}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Status</p>\r\n                  <p className=\"font-medium capitalize\">{directive.status}</p>\r\n                </div>\r\n                {directive.dateCompleted && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Completed</p>\r\n                    <p className=\"font-medium\">\r\n                      {new Date(directive.dateCompleted).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                {directive.details && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500\">Details</p>\r\n                    <p className=\"text-sm mt-1\">{directive.details}</p>\r\n                  </div>\r\n                )}\r\n                {directive.documents.length > 0 && (\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 mb-2\">Documents</p>\r\n                    <ul className=\"list-disc list-inside text-sm\">\r\n                      {directive.documents.map((doc, index) => (\r\n                        <li key={index}>{doc}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceDirectives;\r\n"],"names":["__iconNode","CircleX","createLucideIcon","FilePlus","directiveTypes","statusColors","statusIcons","CheckCircle","Clock","XCircle","AdvanceDirectives","state","updateAdvanceDirective","usePalliativeCare","newDirective","setNewDirective","React","handleDirectiveSubmit","e","directive","exportToPDF","exportData","blob","url","getStatusIcon","status","Icon","this","jsxDEV","Button","Download","Card","CardHeader","CardTitle","CardContent","Label","RadioGroup","value","prev","type","RadioGroupItem","Textarea","doc","index"],"mappings":"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","x_google_ignoreList":[0,1]}